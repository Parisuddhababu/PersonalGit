{"version":3,"file":"static/js/4493.7e4b7908.chunk.js","mappings":"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","sources":["framework/graphql/queries/event.ts","views/viewEvent/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_EVENTS = gql`\n  query FetchEvents(\n    $page: Int\n    $limit: Int\n    $sortBy: String\n    $sortOrder: String\n    $eventName: String\n    $startDate: Date\n    $endDate: Date\n    $createdBy: Int\n  ) {\n    fetchEvents(\n      page: $page\n      limit: $limit\n      sortBy: $sortBy\n      sortOrder: $sortOrder\n      event_name: $eventName\n      start_date: $startDate\n      end_date: $endDate\n      created_by: $createdBy\n    ) {\n      data {\n        FetchEventData {\n          id\n          event_name\n          description\n          is_reccuring\n          start_date\n          end_date\n          User {\n            user_name\n          }\n        }\n        count\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n      }\n    }\n  }\n`;\nexport const GET_EVENT_BY_ID = gql`\nquery FetchEvent($fetchEventId: ID) {\n  fetchEvent(id: $fetchEventId) {\n    data {\n      id\n      uuid\n      event_name\n      description\n      email\n      address\n      is_reccuring\n      send_notification\n      start_date\n      end_date\n      status\n      participant_mail_ids\n      reccurance_date\n      created_at\n      updated_at\n      created_by\n    }\n    meta {\n      message\n      messageCode\n      statusCode\n      status\n      type\n      errors {\n        errorField\n        error\n      }\n      errorType\n    }\n  }\n}\n`;\nexport const GET_DROPDOWNFILTER_DATA = gql`\n  query FetchEvents(\n    $createdBy: Int\n    $startDate: Date\n    $endDate: Date\n    $eventName: String\n    $sortOrder: String\n    $sortBy: String\n    $limit: Int\n    $page: Int\n  ) {\n    fetchEvents(\n      created_by: $createdBy\n      start_date: $startDate\n      end_date: $endDate\n      event_name: $eventName\n      sortOrder: $sortOrder\n      sortBy: $sortBy\n      limit: $limit\n      page: $page\n    ) {\n      data {\n        FetchEventData {\n          event_name\n          start_date\n          end_date\n          created_by\n          User {\n            user_name\n          }\n        }\n        count\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n        type\n      }\n    }\n  }\n`;\nexport const VIEW_EVENT = gql`\n  query FetchEvent($fetchEventId: ID) {\n    fetchEvent(id: $fetchEventId) {\n      data {\n        id\n        event_name\n        description\n        email\n        is_reccuring\n        start_date\n        end_date\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n      }\n    }\n  }\n`;\n","import { useQuery } from '@apollo/client';\nimport Button from '@components/button/button';\nimport { ArrowSmallLeft, Calendar } from '@components/icons/icons';\nimport { ROUTES } from '@config/constant';\nimport { VIEW_EVENT } from '@framework/graphql/queries/event';\nimport React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst ViewEvent = () => {\n\tconst { t } = useTranslation();\n\tconst { data, refetch } = useQuery(VIEW_EVENT);\n\tconst EventId = useParams();\n\tconst navigate = useNavigate();\n\t/**\n\t * IF WE GET ID BASED ON THAT WE WILL GET EVENT DATA\n\t */\n\tuseEffect(() => {\n\t\tif (EventId.id) {\n\t\t\trefetch({ fetchEventId: parseInt(EventId.id) }).catch((err) => toast.error(err));\n\t\t}\n\t}, [EventId.id]);\n\t/**\n\t * on clicking cancel it will redirect to main events page\n\t */\n\tconst onCancel = useCallback(() => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.event}/list`);\n\t}, []);\n\treturn (\n\t\t<div className='w-full items-center justify-center border-spacing-1 border border-[#c8ced3] bg-white rounded-sm '>\n\t\t\t<div className='flex justify-between border-b border-[#c8ced3] bg-[#f0f3f5] py-3 px-5'>\n\t\t\t\t<div className='flex items-center '>\n\t\t\t\t\t<Calendar className='mr-2' fontSize='12px' />\n\t\t\t\t\t{t('Event List')}\n\t\t\t\t</div>\n\t\t\t\t<Button className='btn-primary btn-normal' label={t('Back')} onClick={onCancel}  title={`${t('Back')}`} >\n\t\t\t\t\t<ArrowSmallLeft className='mr-1' />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className='grid grid-cols-1 md:grid-cols-2 m-4'>\n\t\t\t\t<div className='flex pb-2'>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Event Name')} :</p>\n\t\t\t\t\t<p className='px-3'>xcdfdfdf{data?.fetchEvent?.data?.event_name}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Description')} : </p>\n\t\t\t\t\t<p className='px-3'>{data?.fetchEvent?.data?.description}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Email')} :</p>\n\t\t\t\t\t<p className='px-3'> {data?.fetchEvent?.data?.email}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Reccurance')} : </p>\n\t\t\t\t\t<p className='px-3'>{data?.fetchEvent?.data?.is_reccuring}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Start Date')} :</p>\n\t\t\t\t\t<p className='px-3'> {data?.fetchEvent?.data?.start_date}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex  pb-2  '>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('End Date')} :</p>\n\t\t\t\t\t<p className='px-3'> {data?.fetchEvent?.data?.end_date}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default ViewEvent;\n"],"names":["GET_EVENTS","gql","_templateObject","_taggedTemplateLiteral","GET_EVENT_BY_ID","_templateObject2","GET_DROPDOWNFILTER_DATA","_templateObject3","VIEW_EVENT","_templateObject4","ViewEvent","_data$fetchEvent","_data$fetchEvent$data","_data$fetchEvent2","_data$fetchEvent2$dat","_data$fetchEvent3","_data$fetchEvent3$dat","_data$fetchEvent4","_data$fetchEvent4$dat","_data$fetchEvent5","_data$fetchEvent5$dat","_data$fetchEvent6","_data$fetchEvent6$dat","t","useTranslation","data","refetch","useQuery","EventId","useParams","navigate","useNavigate","useEffect","id","fetchEventId","parseInt","catch","err","toast","error","onCancel","useCallback","concat","ROUTES","app","event","_jsxs","className","children","_jsx","Calendar","fontSize","Button","label","onClick","title","ArrowSmallLeft","fetchEvent","event_name","description","email","is_reccuring","start_date","end_date"],"sourceRoot":""}