{"version":3,"file":"static/js/7309.b86e8ec0.chunk.js","mappings":"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","sources":["components/breadcrumb/breadcrumb.tsx","components/common/EditButtonPopup.tsx","components/common/commonModel.tsx","components/common/deleteBtn.tsx","components/header/updatedHeader.tsx","framework/graphql/mutations/equipmentManagement.ts","framework/graphql/queries/equipmentManagement.ts","framework/graphql/queries/location.ts","framework/graphql/queries/materialManagement.ts","framework/graphql/queries/diversionReportTemplate.ts","framework/graphql/mutations/diversionReportTemplate.ts","views/diversionReport/index.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Breadcrumb = () => {\n\tconst { t } = useTranslation();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst { id } = useParams();\n\tconst { userProfileData } = useSelector(\n\t\t(state: { userProfile: { userProfileData: UserProfileType; } }) => state.userProfile,\n\t);\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? '';\n\n\t\n\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2]?.includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0]?.toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0]?.toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst thirdLevelLink = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\tmodulePath = data?.replace(/-|\\s/g, ' ');\n\t\t\tconst splitPathName = modulePath.split(' ');\n\t\t\tfor (let i = 0; i < splitPathName.length; i++) {\n\t\t\t\tsplitPathName[i] = splitPathName[i][0].toUpperCase() + splitPathName[i].substring(1); // Use substring instead of substr\n\t\t\t}\n\t\t\tmodulePath = splitPathName.join(' ');\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' '; // Using slice as you did previously\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst removeID = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' ';\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst urlArray = location.pathname.split('/');\n\n\tconst breadcrumbLinks = useCallback(() => {\n\t\tif (urlArray?.length > 0) {\n\t\t\tconst length = urlArray?.length\n\t\t\tif (length < 4) {\n\t\t\t\treturn (\n\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 5) {\n\t\t\t\tif (urlArray[3] !== '') {\n\t\t\t\t\tif (urlArray[3].length > 32) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{!removeID(urlArray[3]) &&\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(removeID(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 6) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 7) {\n\t\t\t\tlet uuidData = ''\n\t\t\t\tif (uuid) {\n\t\t\t\t\tuuidData = `?uuid=${uuid}`;\n\t\t\t\t} else if (id) {\n\t\t\t\t\tuuidData = `?uuid=${id}`;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[2]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}/${urlArray[3]}/${(uuid !== '' || id !== '') && uuidData}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[3]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[5] && `${t(thirdLevelLink(urlArray[4]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}, [urlArray]);\n\n\treturn (\n\t\t<div className='w-full'>\n\t\t\t<p className='max-xs:text-xs text-xs-14 max-md:truncate'>\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`)} className='cursor-pointer text-light-grey hover:underline'>\n\t\t\t\t\t\t{t('Home')}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<span className='mx-2 text-light-grey'>{'>'}</span>\n\t\t\t\t</span>\n\n\t\t\t\t{breadcrumbLinks()}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Breadcrumb);\n","import React from 'react';\n\nimport Button from '@components/button/button';\nimport { Edit } from '@components/icons/icons';\n\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst EditBtnPopup = ({ data, onClick, className , setData }: any) => {\n\n\tconst editRedirection = () => {\n\t\tonClick(data?.uuid); \n\t\tsetData && setData(data);\n\t};\n\n\treturn (\n\t\t<Button className={`bg-transparent btn-default ${className}`} onClick={editRedirection} label={''} title='Edit'>\n\t\t\t<Edit />\n\t\t</Button>\n\t);\n};\nexport default EditBtnPopup;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '@components/button/button';\nimport { Info, Cross, Cross2, Info2 } from '@components/icons/icons';\nimport { CommonModelProps } from 'src/types/common';\n\nconst CommonModel = ({ onClose, action, show, warningText, disabled , isLoading }: CommonModelProps) => {\n\tconst { t } = useTranslation();\n\tconst [addClass, setAddClass] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tif (show) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAddClass(true);\n\t\t\t}, 100);\n\t\t}\n\t}, [show]);\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <div className='w-12 h-12 mx-auto rounded-[50%] border-solid border-4 border-[#E8E8EA] border-r-[#2575d6] animate-spin absolute left-[58%] top-[40%]'></div>}\n\t\t\t<div className={`${show ? '' : 'hidden'} absolute top-0 left-0 right-0 z-[1000] h-full bg-modal`}>\n\t\t\t\t{(warningText !== 'Are you sure want to delete this record ?') && (warningText !== 'Are you sure want to change status ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[780px]'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='relative bg-white shadow rounded-xl'>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between px-5 py-6 border-b bg-accents-2 rounded-t-xl'>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center '>\n\t\t\t\t\t\t\t\t\t\t<Info className='inline-block mr-3 fill-baseColor' fontSize='20' />\n\t\t\t\t\t\t\t\t\t\t<span className='text-xl font-bold text-baseColor'>{t('Confirmation')}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Button onClick={onClose} label={''}>\n\t\t\t\t\t\t\t\t\t\t<Cross className='text-error' fontSize='14'/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='p-5 space-y-6 font-normal text-center border-b border-solid border-border-primary'>\n\t\t\t\t\t\t\t\t\t<p>{t(warningText)}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t\t\t<div className='flex flex-col items-center justify-end p-5 md:space-x-3 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal mb-2 md:mb-0 w-full md:w-auto min-w-[160px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal w-full md:w-auto min-w-[160px]' onClick={onClose} label={t('No')} title='No'/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{(warningText == 'Are you sure want to change status ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[640px]'>\n\t\t\t\t\t\t\t<div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n\t\t\t\t\t\t\t\t<div className='flex flex-col items-center mb-3'>\n\t\t\t\t\t\t\t\t\t<span className='p-[10px] bg-primary min-w-min rounded-full mb-3 overflow-hidden text-xl-44 md:text-6xl'><Info2 className='fill-white bg-primary' /></span>\n\t\t\t\t\t\t\t\t\t<h4>{t('Confirmation')}</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h6 className='font-semibold text-center mb-7 md:mb-10'>{t(warningText)}</h6>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-center space-x-5 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal min-w-[86px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal min-w-[86px]' onClick={onClose} label={t('No')} title='No' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{(warningText == 'Are you sure want to delete this record ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[640px]'>\n\t\t\t\t\t\t\t<div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n\t\t\t\t\t\t\t\t<div className='flex justify-center mb-5'><span className='p-[22px] md:p-[26px] rounded-full bg-error text-xl-35 md:text-5xl'><Cross2 className='stroke-2 fill-white' /></span></div>\n\t\t\t\t\t\t\t\t<h6 className='font-bold text-center mb-7 md:mb-10'>{t(warningText)}</h6>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-center space-x-5 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal min-w-[86px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal min-w-[86px]' onClick={onClose} label={t('No')} title='No' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default CommonModel;\n","import React, { useCallback } from 'react';\n\nimport Button from '@components/button/button';\nimport { Trash } from '@components/icons/icons';\nimport { DeleteComponentsProps } from 'src/types/common';\n\nconst DeleteBtn = ({ data, setObj, setIsDelete, className ,customClick }: DeleteComponentsProps) => {\n\n\tconst deleteData = useCallback(() => {\n\t\tsetObj(data);\n\t\t!customClick && setIsDelete(true);\n\t\tcustomClick && customClick(data);\n\t}, []);\n\n\treturn (\n\t\t<Button className={`bg-transparent cursor-pointer btn-default btn-icon ${className}`} onClick={deleteData} label={''} title='Delete'>\n\t\t\t<Trash className='fill-error' />\n\t\t</Button>\n\t);\n};\nexport default DeleteBtn;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport Breadcrumb from '@components/breadcrumb/breadcrumb';\nimport { HamburgerMenu } from '@components/icons/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShow } from 'src/redux/courses-management-slice';\n\ninterface UpdatedHeaderProps {\n\theaderActionConst?: any,\n\theaderTitle?: string,\n}\n\nconst UpdatedHeader = ({ headerActionConst, headerTitle }: UpdatedHeaderProps) => {\n\tconst { t } = useTranslation();\n\tconst dispatch = useDispatch();\n\tconst { show } = useSelector(((state: { coursesManagement: { show: boolean } }) => state.coursesManagement));\n\n\tconst location = useLocation();\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2].includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0].toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0].toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst onRenderJsxElement = () => {\n\t\tif (headerActionConst) {\n\t\t\treturn (headerActionConst())\n\t\t}\n\t}\n\n\tconst OnClickHandler = useCallback(() => {\n\t\tdispatch(setShow(!show))\n\t}, [show]);\n\n\treturn (\n\t\t<header className='sticky top-0 z-20 flex bg-white border-b shadow-header xl:shadow-none xl:h-auto xl:block border-border-primary xl:px-2 xl:pt-0'>\n\t\t\t<div onClick={OnClickHandler} className='pt-5 cursor-pointer text-xl-22 xl:hidden'>\n\t\t\t\t<HamburgerMenu className='ml-4' />\n\t\t\t</div>\n\t\t\t<div className='p-2.5 xl:p-[18px] xl:shadow-header max-xl:w-[calc(100%-47px)]'>\n\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-2.5'>\n\t\t\t\t\t<div className='w-full xl:w-auto'>\n\t\t\t\t\t\t<h1 className='mb-1 text-2xl max-xl:truncate xl:text-3xl'>{t(headerTitle ?? moduleName(location.pathname))}</h1>\n\t\t\t\t\t\t<Breadcrumb />\n\t\t\t\t\t</div>\n\t\t\t\t\t{headerActionConst &&\n\t\t\t\t\t\t<div className='flex gap-2.5 max-xl:w-[calc(100%+40px)] lg:gap-5'>\n\t\t\t\t\t\t\t{onRenderJsxElement()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default UpdatedHeader;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_EQUIPMENT = gql`mutation CreateEquipment($equipmentData: CreateEquipmentDto!) {\n    createEquipment(equipmentData: $equipmentData) {\n      message\n      data {\n        uuid\n        name\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n      }\n    }\n  }`;\nexport const EDIT_EQUIPMENT = gql`mutation UpdateEquipment($equipmentData: UpdateEquipmentDto!) {\n    updateEquipment(equipmentData: $equipmentData) {\n      message\n    }\n  }`;\nexport const DELETE_EQUIPMENT = gql`mutation DeleteEquipment($equipmentId: String!) {\n  deleteEquipment(equipmentId: $equipmentId) {\n    message\n  }\n}`;\nexport const GET_EQUIPMENT_BY_NAME = gql`mutation GetEquipmentByName($equipmentName: String!) {\n  getEquipmentByName(equipmentName: $equipmentName) {\n    message\n    data {\n      uuid\n      name\n      volume {\n        uuid\n        volume\n        volume_cubic_yard\n      }\n    }\n  }\n}`;\n","import { gql } from '@apollo/client';\n\nexport const GET_EQUIPMENT_WITH_PAGINATION = gql`query GetEquipmentsWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getEquipmentsWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        equipments {\n          uuid\n          name\n          volume {\n            uuid\n            volume\n            volume_cubic_yard\n          }\n        }\n        count\n      }\n    }\n  }`;\n\n  export const GET_EQUIPMENTS = gql`query GetEquipments {\n    getEquipments {\n      message\n      data {\n        uuid\n        name\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n      }\n    }\n  }`;","import { gql } from '@apollo/client';\n\nexport const GET_LOCATION = gql`\nquery GetLocationsWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $citySearch: String!, $locationSearch: String!) {\n  getLocationsWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, citySearch: $citySearch, locationSearch: $locationSearch) {\n    message\n    data {\n      location {\n        uuid\n        location\n        city\n        zoneCount\n      }\n      count\n    }\n  }\n}`\n\nexport const GET_ALL_LOCATIONS = gql`query GetLocations {\n  getLocations {\n    message\n    data {\n      uuid\n      location\n      city\n      diversion_percentage\n      zoneCount\n    }\n  }\n}`;\n","import { gql } from '@apollo/client';\n\nexport const GET_MATERIAL_WITH_PAGINATION = gql`query GetMaterialsWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getMaterialsWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        materials {\n          uuid\n          name\n          material_types {\n            uuid\n            type\n            weight\n          }\n        }\n        count\n      }\n    }\n  }`;\n\nexport const GET_MATERIALS = gql`query GetMaterials {\n    getMaterials {\n      message\n      data {\n        uuid\n        name\n        material_types {\n          uuid\n          type\n          weight\n        }\n      }\n    }\n  }`;\n\n  export const GET_MATERIAL_BY_ID = gql`query GetMaterialById($materialId: String!) {\n    getMaterialById(materialId: $materialId) {\n      message\n      data {\n        uuid\n        name\n        material_types {\n          uuid\n          type\n          weight\n        }\n        id\n      }\n    }\n  }`;\n  \n","import { gql } from '@apollo/client';\n\nexport const GET_DIVERSION_REPORT_TEMPLATE_WITH_PAGINATION =gql`query GetDiversionReportTemplateWithPagination($locationId: String!, $sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!) {\n  getDiversionReportTemplateWithPagination(locationId: $locationId, sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page) {\n    message\n    data {\n      diversionReport {\n        uuid\n        service_type\n        is_service_type_updated\n        material {\n          uuid\n          name\n        }\n        is_material_updated\n        material_type {\n          uuid\n          type\n          weight\n        }\n        is_material_type_updated\n        equipment {\n          uuid\n          name\n        }\n        is_equipment_updated\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n        is_volume_updated\n        location {\n          uuid\n          location\n          city\n        }\n        subscriber {\n          uuid\n        }\n      }\n      count\n    }\n  }\n}`;","import { gql } from '@apollo/client';\n\nexport const CREATE_DIVERSION_REPORT_TEMPLATE = gql`mutation CreateDiversionReportTemplate($diversionReportTemplateData: CreateDiverReportTemplateDto!) {\n    createDiversionReportTemplate(diversionReportTemplateData: $diversionReportTemplateData) {\n      message\n    }\n  }`;\n\nexport const UPDATE_DIVERSION_REPORT_TEMPLATE= gql`mutation UpdateDiversionReportTemplate($diversionReportTemplateData: UpdateDiversionTemplateDto!) {\n    updateDiversionReportTemplate(diversionReportTemplateData: $diversionReportTemplateData) {\n      message\n    }\n  }`;\n\nexport const DELETE_DIVERSION_REPORT_TEMPLATE = gql`mutation DeleteDiversionReportTemplate($diversionReportTemplateId: String!) {\n    deleteDiversionReportTemplate(diversionReportTemplateId: $diversionReportTemplateId) {\n      message\n    }\n  }`;\nexport const GET_DIVERSION_REPORT_TRMPLATE_BY_ID =gql`mutation GetDiversionTemplateById($templateId: String!) {\n  getDiversionTemplateById(templateId: $templateId) {\n    data {\n      uuid\n        service_type\n        is_service_type_updated\n        material {\n          uuid\n          name\n        }\n        is_material_updated\n        material_type {\n          uuid\n          type\n          weight\n        }\n        is_material_type_updated\n        equipment {\n          uuid\n          name\n        }\n        is_equipment_updated\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n        is_volume_updated\n        location {\n          uuid\n          location\n          city\n        }\n        subscriber {\n          uuid\n        }\n    }\n  }\n}\n`;","import React, { useCallback, useEffect, useState } from 'react';\nimport DropDown from '@components/dropdown/dropDown';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { ArrowSortingDown, ArrowSortingUp, Cross, GetDefaultIcon, Map, Settings } from '@components/icons/icons';\nimport { FormikErrors, FormikTouched, useFormik } from 'formik';\nimport { DropdownOptionType } from '@types';\nimport { useTranslation } from 'react-i18next';\nimport Button from '@components/button/button';\nimport { DELETE_WARNING_TEXT, PAGE_LIMIT, PAGE_NUMBER, ROUTES, SHOW_PAGE_COUNT_ARR, USER_TYPE, serviceTypeDrpDataTemplate } from '@config/constant';\nimport DeleteBtn from '@components/common/deleteBtn';\nimport Pagination from '@components/Pagination/Pagination';\nimport filterServiceProps from '@components/filter/filter';\nimport { GET_ALL_LOCATIONS } from '@framework/graphql/queries/location';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_DIVERSION_REPORT_TEMPLATE_WITH_PAGINATION } from '@framework/graphql/queries/diversionReportTemplate';\nimport { GET_MATERIALS, GET_MATERIAL_BY_ID } from '@framework/graphql/queries/materialManagement';\nimport { GET_EQUIPMENTS } from '@framework/graphql/queries/equipmentManagement';\nimport { toast } from 'react-toastify';\nimport { MaterialDataRes } from '@views/materialManagament';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVolumeDataForDiversionReport } from 'src/redux/equipment-slice';\nimport useValidation from '@framework/hooks/validations';\nimport { CREATE_DIVERSION_REPORT_TEMPLATE, DELETE_DIVERSION_REPORT_TEMPLATE, GET_DIVERSION_REPORT_TRMPLATE_BY_ID, UPDATE_DIVERSION_REPORT_TEMPLATE } from '@framework/graphql/mutations/diversionReportTemplate';\nimport CommonModel from '@components/common/commonModel';\nimport EditBtnPopup from '@components/common/EditButtonPopup';\nimport { DiversionReportTemplateSliceType, setDiversionTemplateData, setPopupType } from 'src/redux/diversion-report-template-slice';\nimport { ColArrType, DiversionReportTemplateData, DiversionReportTemplateGetByIdRes, DiversionReportTemplateRes, GetAllLocations, InitialValues } from 'src/types/diversionReporttemplate';\nimport { UserProfileType } from 'src/types/common';\nimport { Link } from 'react-router-dom';\nimport { GET_EQUIPMENT_BY_NAME } from '@framework/graphql/mutations/equipmentManagement';\nimport { VolumesDataRes } from '@views/volumeManagement';\n\n\nexport enum diversionReportEnum {\n    Update = 'Update',\n    Create = 'Create',\n\n}\n\nexport const DiversionReportPopUpcontent: { [key: string]: string } = {\n    'Update': 'Update Service',\n    'Create': 'Add New Service'\n}\n\n\nconst DiversionReportList = () => {\n    const { t } = useTranslation();\n    const [diversionReportObj, setDiversionReportObj] = useState<DiversionReportTemplateRes>();\n    const [isDeleteDiversionReport, setIsDeleteDiversionReport] = useState<boolean>(false)\n    const [branchDrpData, setBranchDrpData] = useState<DropdownOptionType[]>([]);\n    const [materialDrpData, setMaterialDrpData] = useState<DropdownOptionType[]>([]);\n    const [materialTypeDrpData, setMaterialTypeDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Material Type', key: '' }]);\n    const [equipmentDrpData, setEquipmentDrpData] = useState<DropdownOptionType[]>([]);\n    const [volumeDrpData, setVolumeDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Volume Type', key: '' }]);\n    const { userProfileData: userData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n    const [deleteDiversionReport, { loading: deleteDiversionReportLoadingState }] = useMutation(DELETE_DIVERSION_REPORT_TEMPLATE);\n    const [createDiversionReport, { loading: createDiversionReportLoadingState }] = useMutation(CREATE_DIVERSION_REPORT_TEMPLATE);\n    const [updateDiversionReport, { loading: updateDiversonReportTemplateLoadingState }] = useMutation(UPDATE_DIVERSION_REPORT_TEMPLATE);\n    const [getDiversionReportTemplateById] = useMutation(GET_DIVERSION_REPORT_TRMPLATE_BY_ID);\n    const { data: getAllLocations, loading } = useQuery(GET_ALL_LOCATIONS, { fetchPolicy: 'network-only', skip: (userData?.getProfile?.data?.user_type === USER_TYPE.SUPER_ADMIN) });\n    const { refetch: getMaterialTypes } = useQuery(GET_MATERIAL_BY_ID, { fetchPolicy: 'network-only', skip: true });\n    const { refetch: getAllMaterials } = useQuery(GET_MATERIALS, { fetchPolicy: 'network-only', skip: true });\n    const { refetch: getAllEquipments } = useQuery(GET_EQUIPMENTS, { fetchPolicy: 'network-only', skip: true });\n    const [getEquipmentbyName] = useMutation(GET_EQUIPMENT_BY_NAME);\n    const diversionReportTemplateDetails = useSelector(((state: { diversionReportTemplate: DiversionReportTemplateSliceType }) => state.diversionReportTemplate));\n    const dispatch = useDispatch();\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const { diversionReportValidationSchema } = useValidation();\n\n    const initialValues: InitialValues = {\n        diversionReportTemplateData: {\n            equipment_id: '',\n            location_id: '',\n            material_id: '',\n            material_type_id: '',\n            service_type: '',\n            volume_id: '',\n            equipment: '',\n            volume_name: ''\n        }\n    }\n\n    /**\n     * method used to handle form and validations\n     */\n    const formik = useFormik({\n        initialValues,\n        validationSchema: diversionReportValidationSchema,\n        onSubmit: (values) => {\n            onSubmitUpdateDiversionReport(values);\n        }\n    });\n\n    const [filterData, setFilterData] = useState({\n        limit: PAGE_LIMIT,\n        page: PAGE_NUMBER,\n        sortOrder: 'descend',\n        search: '',\n        sortField: 'createdAt',\n        locationId: '',\n        index: 0\n    });\n\n    /**\n     * Method used set dropdown data for location\n     */\n    useEffect(() => {\n        if (getAllLocations?.getLocations?.data && userData?.getProfile?.data?.user_type && userData?.getProfile?.data?.user_type === USER_TYPE.SUBSCRIBER_ADMIN) {\n            setBranchDrpData(getAllLocations?.getLocations?.data?.map((data: GetAllLocations) => {\n                return { name: data?.location, key: data?.uuid, uuid: data?.uuid }\n            }));\n            refetchDiversionReports({\n                limit: PAGE_LIMIT,\n                page: PAGE_NUMBER,\n                sortOrder: 'descend',\n                search: '',\n                sortField: 'createdAt',\n                locationId: getAllLocations?.getLocations?.data[0]?.uuid,\n            }).then((res) => {\n\n                dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n            formik.setFieldValue('diversionReportTemplateData.location_id', getAllLocations?.getLocations?.data[0]?.uuid);\n\n        }\n        if (getAllLocations?.getLocations?.data && userData?.getProfile?.data?.user_type && userData?.getProfile?.data?.user_type === USER_TYPE.DIVERSION_ADMIN) {\n            setBranchDrpData(getAllLocations?.getLocations?.data?.map((data: GetAllLocations) => {\n                return { name: data?.location, key: data?.uuid, uuid: data?.uuid }\n            }));\n            refetchDiversionReports({\n                limit: PAGE_LIMIT,\n                page: PAGE_NUMBER,\n                sortOrder: 'descend',\n                search: '',\n                sortField: 'createdAt',\n                locationId: userData?.getProfile?.data?.branch_locations[0]?.uuid,\n            }).then((res) => {\n\n                dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n            formik.setFieldValue('diversionReportTemplateData.location_id', userData?.getProfile?.data?.branch_locations[0]?.uuid);\n\n        }\n    }, [getAllLocations?.getLocations, userData]);\n\n    const { refetch: refetchDiversionReports } = useQuery(GET_DIVERSION_REPORT_TEMPLATE_WITH_PAGINATION, {\n        fetchPolicy: 'network-only', skip: true,\n    });\n    const [recordsPerPage, setRecordsPerPage] = useState<number>(filterData.limit);\n    const totalService = diversionReportTemplateDetails?.diversionTemplateData?.count ?? 0;\n    const totalPages = Math.ceil(totalService / recordsPerPage);\n\n    /**\n     * Method used to change the page \n     */\n    const handlePageChange = useCallback((newPage: number): void => {\n        const updatedFilterData = {\n            ...filterData,\n            page: newPage,\n            index: (newPage - 1) * filterData.limit,\n        };\n        setFilterData(updatedFilterData);\n        refetchDiversionReports({\n            limit: filterData?.limit,\n            page: newPage,\n            sortOrder: filterData?.sortOrder,\n            sortField: filterData?.sortField,\n            locationId: filterData?.locationId,\n        }).then((res) => {\n            dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n        filterServiceProps.saveState('filterDiversionReport', JSON.stringify(updatedFilterData));\n    }, [filterData.limit]);\n\n\n    /**\n     * Method sets records per page in filter data when ever it changes\n     */\n    useEffect(() => {\n        setRecordsPerPage(filterData.limit);\n    }, [filterData.limit]);\n\n    const COL_ARR_SERVICE = [\n        { name: t('Sr.No'), sortable: false },\n        { name: t('Service Type'), sortable: true, fieldName: 'service_type' },\n        { name: t('Material Category'), sortable: true, fieldName: 'material.name' },\n        { name: t('Material Type'), sortable: true, fieldName: 'material_type.type' },\n        { name: t('Equipment'), sortable: true, fieldName: 'equipment.name' },\n        { name: t('Volume'), sortable: true, fieldName: 'volume.volume' },\n    ] as ColArrType[];\n\n    /**\n     * @param sortFieldName Method used for storing sort data\n     */\n    const onHandleSortDiversionReport = (sortFieldName: string) => {\n        setFilterData({\n            ...filterData,\n            sortField: sortFieldName,\n            sortOrder: filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n        });\n        refetchDiversionReports({\n            limit: filterData?.limit,\n            page: filterData?.page,\n            sortOrder: filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n            sortField: sortFieldName,\n            locationId: filterData?.locationId,\n        }).then((res) => {\n            dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n    };\n\n    /**\n    * @param e Method used for change dropdown for page limit\n    */\n    const onPageDrpSelectCategory = (e: string) => {\n        setRecordsPerPage(Number(e))\n        const updatedFilterData = {\n            ...filterData,\n            limit: parseInt(e),\n            page: 1,\n            search: '',\n            index: 0,\n        };\n\n        refetchDiversionReports({\n            limit: parseInt(e),\n            page: 1,\n            sortOrder: filterData.sortOrder,\n            sortField: filterData?.sortField,\n            locationId: filterData?.locationId,\n        }).then((res) => {\n            dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState('filterDiversionReport', JSON.stringify(updatedFilterData));\n    };\n\n    /**\n     * Method used to reset form and close Add new service model\n     */\n    const onClose = useCallback(() => {\n        const LocationId = formik.values?.diversionReportTemplateData?.location_id;\n        formik.resetForm();\n        formik.setFieldValue('diversionReportTemplateData.location_id', LocationId);\n        setIsPopupOpen(false);\n        setIsDeleteDiversionReport(false);\n    }, [formik?.values]);\n\n    /**\n     * Method used to set dropdown values while add and edit time\n     */\n    const setAddAndEditTimeDropdownValues = () => {\n        getAllMaterials().then((res) => {\n            setMaterialDrpData(res?.data?.getMaterials?.data?.map((data: MaterialDataRes) => {\n                return { name: data?.name, key: data?.uuid, uuid: data?.uuid };\n            }))\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n        getAllEquipments().then((res) => {\n            const volumeCubicData: { [key: string]: { [key: string]: string } } = {};\n            const volumeDrpData = res?.data?.getEquipments?.data?.map((data: {\n                uuid: string;\n                name: string;\n                volume: VolumesDataRes;\n            }) => {\n                volumeCubicData[`${data?.uuid}`] = { volume: data?.volume?.volume, uuid: data?.volume?.uuid };\n                return { name: data?.volume, key: data?.uuid, uuid: data?.uuid, }\n            });\n            if (volumeDrpData) {\n                dispatch(setVolumeDataForDiversionReport(volumeCubicData));\n            }\n            setEquipmentDrpData(res?.data?.getEquipments?.data?.map((data: {\n                uuid: string;\n                name: string;\n                volume: VolumesDataRes;\n            }) => {\n                return { name: data?.name, key: data?.name };\n            }))\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n        setIsPopupOpen(true);\n    }\n\n    /**\n     * Method used to update the diversion report \n     */\n    const onEditDiversionReport = useCallback((data: DiversionReportTemplateRes) => {\n        setDiversionReportObj(data);\n        dispatch(setPopupType(diversionReportEnum?.Update));\n        setAddAndEditTimeDropdownValues();\n        getEquipmentbyName({ variables: { equipmentName: data?.equipment?.name } }).then((res) => {\n            const volumeData = res?.data?.getEquipmentByName?.data?.map((data: {\n                uuid: string;\n                name: string;\n                volume: VolumesDataRes;\n            }) => {\n                return { name: data?.volume?.volume, key: `${data?.volume?.uuid}_${data?.uuid}` }\n            });\n            if (volumeData) {\n                setVolumeDrpData([{ name: 'Select Volume Type', key: '' }, ...volumeData]);\n            }\n\n        })\n            .catch((err) => toast.error(err.networkError.result.errors[0].message));\n        getDiversionReportTemplateById({ variables: { templateId: data?.uuid } }).then((res) => {\n            const data = res?.data?.getDiversionTemplateById?.data as DiversionReportTemplateGetByIdRes;\n            formik.setValues({\n                diversionReportTemplateData: {\n                    equipment_id: data?.equipment?.uuid,\n                    location_id: data?.location?.uuid,\n                    material_id: data?.material?.uuid,\n                    material_type_id: data?.material_type?.uuid,\n                    service_type: data?.service_type,\n                    volume_id: data?.volume?.uuid,\n                    equipment: data?.equipment?.name,\n                    volume_name: `${data?.volume?.uuid}_${data?.equipment?.uuid}`\n                }\n            })\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n        getMaterialTypes({\n            materialId: data?.material?.uuid\n        }).then((res) => {\n            const data = res?.data?.getMaterialById?.data?.material_types?.map((data: {\n                uuid: string;\n                type: string;\n                weight: number;\n            }) => { return { name: data?.type, key: data?.uuid, uuid: data?.uuid }; })\n            if (data) {\n                setMaterialTypeDrpData([{ name: 'Select Material Type' }, ...data])\n            }\n        }).catch((err) => toast.error(err));\n    }, []);\n\n    /**\n     * Method used to delete diversion report template\n     */\n    const deleteDiversionReportData = useCallback(() => {\n        deleteDiversionReport({ variables: { diversionReportTemplateId: diversionReportObj?.uuid } }).then((res) => {\n            toast.success(res?.data?.deleteDiversionReportTemplate?.message);\n            setIsDeleteDiversionReport(false);\n            refetchDiversionReports({\n                limit: filterData?.limit,\n                page: filterData?.page,\n                sortOrder: filterData?.sortOrder,\n                search: filterData?.search,\n                sortField: filterData?.sortField,\n                locationId: filterData?.locationId,\n            }).then((res) => {\n                dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n    }, [diversionReportObj])\n\n\n    /**\n     * Method used to create or update diversion template\n     * @param values form values after submit data\n     * @param volumeId \n     */\n    const onSubmitUpdateDiversionReport = (values: InitialValues) => {\n\n        if (diversionReportTemplateDetails.popupType === diversionReportEnum?.Create) {\n            createDiversionReport({\n                variables: {\n                    diversionReportTemplateData: {\n                        equipment_id: values.diversionReportTemplateData.equipment_id,\n                        material_id: values.diversionReportTemplateData.material_id,\n                        material_type_id: values.diversionReportTemplateData.material_type_id,\n                        service_type: values.diversionReportTemplateData.service_type,\n                        volume_id: values.diversionReportTemplateData.volume_id,\n                        location_id: values?.diversionReportTemplateData?.location_id,\n                    }\n                }\n            }).then((res) => {\n                toast.success(res?.data?.createDiversionReportTemplate?.message);\n                refetchDiversionReports({\n                    limit: filterData?.limit,\n                    page: filterData?.page,\n                    sortOrder: filterData?.sortOrder,\n                    search: filterData?.search,\n                    sortField: filterData?.sortField,\n                    locationId: values?.diversionReportTemplateData?.location_id,\n                }).then((res) => {\n                    dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n                }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n                onClose();\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n\n\n        } else {\n            updateDiversionReport({\n                variables: {\n                    diversionReportTemplateData: {\n                        equipment_id: values.diversionReportTemplateData.equipment_id,\n                        material_id: values.diversionReportTemplateData.material_id,\n                        material_type_id: values.diversionReportTemplateData.material_type_id,\n                        service_type: values.diversionReportTemplateData.service_type,\n                        volume_id: values.diversionReportTemplateData.volume_id,\n                        location_id: values?.diversionReportTemplateData?.location_id,\n                        diversion_report_template_id: diversionReportObj?.uuid\n                    }\n                }\n            }).then((res) => {\n                toast.success(res?.data?.updateDiversionReportTemplate?.message);\n                refetchDiversionReports({\n                    limit: filterData?.limit,\n                    page: filterData?.page,\n                    sortOrder: filterData?.sortOrder,\n                    search: filterData?.search,\n                    sortField: filterData?.sortField,\n                    locationId: filterData?.locationId,\n                }).then((res) => {\n                    dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n                }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n                onClose();\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n\n        }\n    }\n\n    /**\n     * Method that provides the data to list view when location changes\n     */\n    useEffect(() => {\n        if (formik?.values?.diversionReportTemplateData?.location_id !== '') {\n            refetchDiversionReports({\n                limit: filterData?.limit,\n                page: filterData?.page,\n                sortOrder: filterData?.sortOrder,\n                search: filterData?.search,\n                sortField: filterData?.sortField,\n                locationId: formik?.values?.diversionReportTemplateData?.location_id,\n            }).then((res) => {\n                dispatch(setDiversionTemplateData(res?.data?.getDiversionReportTemplateWithPagination?.data));\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n            setFilterData((prev) => {\n                return {\n                    ...prev,\n                    locationId: formik?.values?.diversionReportTemplateData?.location_id\n                }\n            })\n        }\n    }, [formik?.values?.diversionReportTemplateData?.location_id]);\n\n    /**\n     * Method that provides header content\n     * @returns React Element\n     */\n    const headerActionConst = () => {\n        return (\n            <>\n                {\n                    <div className={`flex w-full gap-3 xmd:gap-5 lg:w-auto ${loading ? 'pointer-events-none' : ''}`}>\n                        <DropDown className='w-[212px] -mt-2 max-md:mr-2' label='' inputIcon={<Map fontSize='18' />} name='diversionReportTemplateData.location_id' onChange={(e) => {\n                            formik?.setFieldValue('diversionReportTemplateData.location_id', e.target.value);\n                        }} value={formik?.values?.diversionReportTemplateData?.location_id} error={formik?.errors?.diversionReportTemplateData?.location_id} options={branchDrpData} id='userLocation' disabled={userData?.getProfile?.data?.user_type !== USER_TYPE.SUBSCRIBER_ADMIN} />\n                    </div>\n                }\n            </>\n        )\n    }\n\n    /**\n     * Method used to add new diversion report template\n     */\n    const onAddNewDiversionReport = useCallback(() => {\n        dispatch(setPopupType(diversionReportEnum?.Create));\n        if (formik?.values?.diversionReportTemplateData?.location_id !== '') {\n            setAddAndEditTimeDropdownValues();\n        } else if (userData?.getProfile?.data?.branch_locations[0]?.uuid != '') {\n            setAddAndEditTimeDropdownValues();\n        } else {\n            toast.error('Please Select location');\n\n        }\n    }, [formik?.values?.diversionReportTemplateData?.location_id]);\n\n    const onMaterialChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (e?.target?.value) {\n            formik.setFieldValue('diversionReportTemplateData.material_id', e?.target?.value);\n            getMaterialTypes({\n                materialId: e?.target?.value\n            }).then((res) => {\n                formik.setFieldValue('diversionReportTemplateData.material_type_id', '');\n                const data = res?.data?.getMaterialById?.data?.material_types?.map((data: {\n                    uuid: string;\n                    type: string;\n                    weight: number;\n                }) => { return { name: data?.type, key: data?.uuid, uuid: data?.uuid }; })\n                if (data) {\n                    setMaterialTypeDrpData([{ name: 'Select Material Type' }, ...data])\n                }\n            }).catch((err) => toast.error(err))\n\n        }\n    }, []);\n\n    const onChangeEquipment = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (e?.target?.value) {\n            formik.setFieldValue('diversionReportTemplateData.equipment', e?.target?.value);\n            getEquipmentbyName({ variables: { equipmentName: e?.target?.value } }).then((res) => {\n                const volumeData = res?.data?.getEquipmentByName?.data?.map((data: {\n                    uuid: string;\n                    name: string;\n                    volume: VolumesDataRes;\n                }) => {\n                    return { name: data?.volume?.volume, key: `${data?.volume?.uuid}_${data?.uuid}` }\n                });\n                if (volumeData) {\n                    setVolumeDrpData([{ name: 'Select Volume Type', key: '' }, ...volumeData]);\n                }\n            }).catch((err) => toast.error(err.networkError.result.errors[0].message))\n        }\n\n    }, []);\n\n    const onChangeVolume = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (e?.target?.value) {\n            const value = e?.target?.value.split('_');\n            formik.setFieldValue('diversionReportTemplateData.volume_name', e?.target?.value);\n            formik.setFieldValue('diversionReportTemplateData.volume_id', value[0]);\n            formik.setFieldValue('diversionReportTemplateData.equipment_id', value[1]);\n        }\n    }, []);\n\n\n    const diversionReportErrors = formik?.errors?.diversionReportTemplateData as FormikErrors<DiversionReportTemplateData>;\n    const diversionReportTounched = formik?.touched?.diversionReportTemplateData as FormikTouched<DiversionReportTemplateData>;\n\n    return (\n        <>\n            <UpdatedHeader headerActionConst={headerActionConst} />\n            <div className='mb-3 bg-white rounded-xl overflow-auto border border-[#c8ced3] mx-7 p-3 md:p-5'>\n                <div className='flex flex-col justify-between gap-3 mb-3 sm:gap-5 md:mb-5 btn-group sm:flex-row'>\n                    <h6 className='w-full leading-7 xmd:w-auto'>{t('Service List')}</h6>\n                    <div className='flex items-center gap-3'>\n                        <Link className='btn btn-secondary btn-normal md:max-w-[3.125rem] !px-2.5 md:!px-4' to={`/${ROUTES.app}/${ROUTES.diversionSettings}/?locationId=${formik?.values?.diversionReportTemplateData?.location_id}`} >\n                            <span className='w-5 h-5'>\n                                <Settings fontSize='20' className='w-5 h-5' />\n                            </span>\n                        </Link>\n                        <Button\n                            className='btn-normal btn btn-secondary whitespace-nowrap'\n                            type='button'\n                            label={t('+ Add New Service')}\n                            onClick={onAddNewDiversionReport}\n                        />\n                    </div>\n                </div>\n                <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                    <table>\n                        <thead >\n                            <tr>\n                                {COL_ARR_SERVICE?.map((colValUser: ColArrType) => {\n                                    return (\n                                        <th scope='col' key={colValUser.name}>\n                                            <div className={`flex items-center ${colValUser.name == 'Status' ? 'justify-center' : ''}`}>\n                                                {colValUser.name}\n                                                {colValUser.sortable && (\n                                                    <button onClick={() => onHandleSortDiversionReport(colValUser.fieldName)}>\n                                                        {(filterData.sortOrder === '' || filterData.sortField !== colValUser.fieldName) &&\n                                                            <GetDefaultIcon className='w-3 h-3 ml-1 fill-white' />}\n                                                        {filterData.sortOrder === 'ascend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingUp className=\"ml-1 fill-white\" />}\n                                                        {filterData.sortOrder === 'descend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingDown className=\"ml-1 fill-white\" />}\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </th>\n                                    );\n                                })}\n\n                                <th scope='col'>\n                                    <div className='flex items-center'>{t('Action')}</div>\n                                </th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {diversionReportTemplateDetails?.diversionTemplateData?.diversionReport?.map((data: DiversionReportTemplateRes, index: number) => {\n                                const displayIndex = filterData?.index + index + 1;\n                                return (<tr key={data?.uuid}>\n                                    <td className='text-left'>{displayIndex}</td>\n                                    <td className='text-left'>{data?.service_type}</td>\n                                    <td className='text-left'>{data?.material?.name}</td>\n                                    <td className='text-left'>{data?.material_type?.type}</td>\n                                    <td className='text-left'>{data?.equipment?.name}</td>\n                                    <td className='text-left'>{data?.volume?.volume}</td>\n                                    <td className='text-left'>\n                                        <div className='btn-group'>\n                                            <EditBtnPopup data={data} setData={setDiversionReportObj} onClick={() => onEditDiversionReport(data)} />\n                                            <DeleteBtn data={data} setObj={setDiversionReportObj} setIsDelete={setIsDeleteDiversionReport} />\n                                        </div>\n                                    </td>\n                                </tr>);\n                            })}\n\n                        </tbody>\n                    </table>\n                    {(diversionReportTemplateDetails?.diversionTemplateData?.count === 0 ||\n                        diversionReportTemplateDetails?.diversionTemplateData?.count === null) && (\n                            <div className='flex justify-center'>\n                                <div>{t('No Data')}</div>\n                            </div>\n                        )}\n                </div>\n                <div className='flex flex-wrap items-center mt-2'>\n                    <div className='flex items-center mr-3 md:mr-7'>\n                        <span className='text-sm font-normal text-gray-700 whitespace-nowrap '>\n                            {t('Per Page')}\n                        </span>\n                        <select value={filterData.limit} className='border border-border-primary rounded-xl ml-2 px-3 text-sm py-1.5 text-gray-500 w-[70px] h-[36px] appearance-none bg-white' onChange={(e) => onPageDrpSelectCategory(e.target.value)} >\n                            {SHOW_PAGE_COUNT_ARR?.map((item: number) => {\n                                return <option key={item}>{item}</option>;\n                            })}\n                        </select>\n                    </div>\n                    <Pagination currentPage={filterData.page}\n                        totalPages={totalPages}\n                        onPageChange={handlePageChange}\n                        recordsPerPage={recordsPerPage}\n                    />\n                </div>\n\n                {isPopupOpen && <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isPopupOpen ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className=\"flex items-center justify-center h-full py-5 transition-all duration-300\">\n                        <div className='w-full mx-5 sm:max-w-[780px]'>\n                            {/* <!-- Modal content --> */}\n                            <div className='relative bg-white rounded-xl'>\n                                {/* <!-- Modal header --> */}\n                                <div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                                    <p className='text-lg font-bold md:text-xl text-baseColor'>{t(DiversionReportPopUpcontent[diversionReportTemplateDetails?.popupType])}</p>\n                                    <Button onClick={() => onClose()} label={t('')}>\n                                        <span className='text-xl-22'><Cross className='text-error' /></span>\n                                    </Button>\n                                </div>\n                                {/* <!-- Modal body --> */}\n                                <div className='w-full'>\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <div className='p-5 max-h-[calc(100vh-260px)] overflow-auto grid grid-cols-1 sm:grid-cols-2 gap-4'>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    placeholder={t('Select Service Type')}\n                                                    name='diversionReportTemplateData.service_type'\n                                                    onChange={formik.handleChange}\n                                                    id='service_id'\n                                                    label={t('Service Type')}\n                                                    required={true}\n                                                    options={serviceTypeDrpDataTemplate}\n                                                    value={formik?.values?.diversionReportTemplateData?.service_type}\n                                                    error={(diversionReportErrors?.service_type && diversionReportTounched?.service_type) ? diversionReportErrors?.service_type : ''}\n                                                />\n                                            </div>\n\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    placeholder={t('Select Material Category')}\n                                                    name='diversionReportTemplateData.material_id'\n                                                    onChange={onMaterialChange}\n                                                    id='material_id'\n                                                    label={t('Material Category')}\n                                                    required={true}\n                                                    options={materialDrpData}\n                                                    value={formik?.values?.diversionReportTemplateData?.material_id}\n                                                    error={(diversionReportErrors?.material_id && diversionReportTounched?.material_id) ? diversionReportErrors?.material_id : ''}\n                                                />\n                                            </div>\n\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    // placeholder={t('Select Material Type')}\n                                                    name='diversionReportTemplateData.material_type_id'\n                                                    onChange={formik.handleChange}\n                                                    id='material_type_id'\n                                                    label={t('Material Type')}\n                                                    required={true}\n                                                    options={materialTypeDrpData}\n                                                    value={formik?.values?.diversionReportTemplateData?.material_type_id}\n                                                    error={(diversionReportErrors?.material_type_id && diversionReportTounched?.material_type_id) ? diversionReportErrors?.material_type_id : ''}\n                                                />\n                                            </div>\n\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    placeholder={t('Select Equipment')}\n                                                    name='diversionReportTemplateData.equipment'\n                                                    onChange={onChangeEquipment}\n                                                    id='equipment'\n                                                    label={t('Equipment')}\n                                                    required={true}\n                                                    options={equipmentDrpData}\n                                                    value={formik?.values?.diversionReportTemplateData?.equipment}\n                                                    error={(diversionReportErrors?.equipment && diversionReportTounched?.equipment) ? diversionReportErrors?.equipment : ''}\n                                                />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    name='diversionReportTemplateData.volume_name'\n                                                    onChange={onChangeVolume}\n                                                    id='volume'\n                                                    label={t('Volume')}\n                                                    required={true}\n                                                    options={volumeDrpData}\n                                                    value={formik?.values?.diversionReportTemplateData?.volume_name}\n                                                    error={(diversionReportErrors?.volume_name && diversionReportTounched?.volume_name) ? diversionReportErrors?.volume_name : ''}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                            {<Button className={'btn-primary btn-normal w-full md:w-auto min-w-[160px]'} type='submit' label={t(diversionReportTemplateDetails?.popupType)} disabled={createDiversionReportLoadingState || updateDiversonReportTemplateLoadingState} />}\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n                {isDeleteDiversionReport && (\n                    <CommonModel\n                        warningText={DELETE_WARNING_TEXT}\n                        onClose={onClose}\n                        action={deleteDiversionReportData}\n                        show={isDeleteDiversionReport}\n                        disabled={deleteDiversionReportLoadingState} />\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default DiversionReportList;\n"],"names":["Breadcrumb","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","location","useLocation","uuid","URLSearchParams","search","get","id","useParams","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","moduleName","pathname","_pathname$split$","modulePath","split","includes","forEach","i","_i$","toUpperCase","slice","_pathname$split$2$","thirdLevelLink","replace","splitPathName","length","substring","join","_data$","removeID","_data$2","urlArray","breadcrumbLinks","useCallback","_jsx","className","children","concat","_jsxs","_Fragment","NavLink","to","ROUTES","app","uuidData","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","React","_ref","onClick","setData","Button","editRedirection","label","title","Edit","onClose","action","show","warningText","disabled","isLoading","addClass","setAddClass","useState","useEffect","setTimeout","tabIndex","Info","fontSize","Cross","Info2","Cross2","setObj","setIsDelete","customClick","deleteData","Trash","headerActionConst","headerTitle","dispatch","useDispatch","coursesManagement","OnClickHandler","setShow","HamburgerMenu","onRenderJsxElement","CREATE_EQUIPMENT","gql","_templateObject","_taggedTemplateLiteral","EDIT_EQUIPMENT","_templateObject2","DELETE_EQUIPMENT","_templateObject3","GET_EQUIPMENT_BY_NAME","_templateObject4","GET_EQUIPMENT_WITH_PAGINATION","GET_EQUIPMENTS","GET_LOCATION","GET_ALL_LOCATIONS","GET_MATERIAL_WITH_PAGINATION","GET_MATERIALS","GET_MATERIAL_BY_ID","GET_DIVERSION_REPORT_TEMPLATE_WITH_PAGINATION","CREATE_DIVERSION_REPORT_TEMPLATE","UPDATE_DIVERSION_REPORT_TEMPLATE","DELETE_DIVERSION_REPORT_TEMPLATE","GET_DIVERSION_REPORT_TRMPLATE_BY_ID","diversionReportEnum","DiversionReportPopUpcontent","DiversionReportList","_userData$getProfile","_userData$getProfile$","_diversionReportTempl","_diversionReportTempl2","_formik$values5","_formik$values5$diver","_formik$values8","_formik$values8$diver","_formik$errors2","_formik$touched","_formik$values9","_formik$values9$diver","_diversionReportTempl3","_diversionReportTempl4","_diversionReportTempl5","_diversionReportTempl6","_formik$values10","_formik$values10$dive","_formik$values11","_formik$values11$dive","_formik$values12","_formik$values12$dive","_formik$values13","_formik$values13$dive","_formik$values14","_formik$values14$dive","diversionReportObj","setDiversionReportObj","isDeleteDiversionReport","setIsDeleteDiversionReport","branchDrpData","setBranchDrpData","materialDrpData","setMaterialDrpData","materialTypeDrpData","setMaterialTypeDrpData","name","key","equipmentDrpData","setEquipmentDrpData","volumeDrpData","setVolumeDrpData","userData","deleteDiversionReport","loading","deleteDiversionReportLoadingState","useMutation","createDiversionReport","createDiversionReportLoadingState","updateDiversionReport","updateDiversonReportTemplateLoadingState","getDiversionReportTemplateById","getAllLocations","useQuery","fetchPolicy","skip","refetch","getMaterialTypes","getAllMaterials","getAllEquipments","getEquipmentbyName","diversionReportTemplateDetails","diversionReportTemplate","isPopupOpen","setIsPopupOpen","diversionReportValidationSchema","useValidation","formik","useFormik","initialValues","diversionReportTemplateData","equipment_id","location_id","material_id","material_type_id","service_type","volume_id","equipment","volume_name","validationSchema","onSubmit","values","onSubmitUpdateDiversionReport","filterData","setFilterData","limit","PAGE_LIMIT","page","PAGE_NUMBER","sortOrder","sortField","locationId","index","_getAllLocations$getL","_userData$getProfile2","_userData$getProfile3","_userData$getProfile4","_userData$getProfile5","_getAllLocations$getL8","_userData$getProfile6","_userData$getProfile7","_userData$getProfile8","_userData$getProfile9","_getAllLocations$getL2","_getAllLocations$getL3","_getAllLocations$getL4","_getAllLocations$getL5","_getAllLocations$getL6","_getAllLocations$getL7","_getAllLocations$getL9","_getAllLocations$getL10","_userData$getProfile10","_userData$getProfile11","_userData$getProfile12","_userData$getProfile13","_userData$getProfile14","_userData$getProfile15","getLocations","SUBSCRIBER_ADMIN","map","refetchDiversionReports","then","res","_res$data","_res$data$getDiversio","setDiversionTemplateData","getDiversionReportTemplateWithPagination","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","toast","error","networkError","result","errors","message","setFieldValue","DIVERSION_ADMIN","branch_locations","_res$data2","_res$data2$getDiversi","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","recordsPerPage","setRecordsPerPage","totalService","diversionTemplateData","count","totalPages","Math","ceil","handlePageChange","newPage","updatedFilterData","_res$data3","_res$data3$getDiversi","_err$networkError3","_err$networkError3$re","_err$networkError3$re2","filterServiceProps","saveState","JSON","stringify","COL_ARR_SERVICE","sortable","fieldName","_formik$values","_formik$values$divers","LocationId","resetForm","setAddAndEditTimeDropdownValues","_res$data6","_res$data6$getMateria","_res$data6$getMateria2","getMaterials","_err$networkError6","_err$networkError6$re","_err$networkError6$re2","_res$data7","_res$data7$getEquipme","_res$data7$getEquipme2","_res$data8","_res$data8$getEquipme","_res$data8$getEquipme2","volumeCubicData","getEquipments","_data$volume","_data$volume2","volume","setVolumeDataForDiversionReport","_err$networkError7","_err$networkError7$re","_err$networkError7$re2","onEditDiversionReport","_data$equipment","_data$material2","setPopupType","Update","variables","equipmentName","_res$data9","_res$data9$getEquipme","_res$data9$getEquipme2","volumeData","getEquipmentByName","_data$volume3","_data$volume4","templateId","_res$data10","_res$data10$getDivers","_data$equipment2","_data$location","_data$material","_data$material_type","_data$volume5","_data$equipment3","_data$volume6","_data$equipment4","getDiversionTemplateById","setValues","material","material_type","_err$networkError8","_err$networkError8$re","_err$networkError8$re2","materialId","_res$data11","_res$data11$getMateri","_res$data11$getMateri2","_res$data11$getMateri3","getMaterialById","material_types","type","deleteDiversionReportData","diversionReportTemplateId","_res$data12","_res$data12$deleteDiv","success","deleteDiversionReportTemplate","_res$data13","_res$data13$getDivers","_err$networkError9","_err$networkError9$re","_err$networkError9$re2","_err$networkError10","_err$networkError10$r","_err$networkError10$r2","_values$diversionRepo","_values$diversionRepo3","popupType","Create","_res$data14","_res$data14$createDiv","_values$diversionRepo2","createDiversionReportTemplate","_res$data15","_res$data15$getDivers","_err$networkError11","_err$networkError11$r","_err$networkError11$r2","_err$networkError12","_err$networkError12$r","_err$networkError12$r2","diversion_report_template_id","_res$data16","_res$data16$updateDiv","updateDiversionReportTemplate","_res$data17","_res$data17$getDivers","_err$networkError13","_err$networkError13$r","_err$networkError13$r2","_err$networkError14","_err$networkError14$r","_err$networkError14$r2","_formik$values2","_formik$values2$diver","_formik$values3","_formik$values3$diver","_res$data18","_res$data18$getDivers","_err$networkError15","_err$networkError15$r","_err$networkError15$r2","prev","_formik$values4","_formik$values4$diver","onAddNewDiversionReport","_formik$values7","_formik$values7$diver","_userData$getProfile18","_userData$getProfile19","_userData$getProfile20","onMaterialChange","e","_e$target","_e$target2","_e$target3","target","value","_res$data19","_res$data19$getMateri","_res$data19$getMateri2","_res$data19$getMateri3","onChangeEquipment","_e$target4","_e$target5","_e$target6","_res$data20","_res$data20$getEquipm","_res$data20$getEquipm2","_data$volume7","_data$volume8","onChangeVolume","_e$target7","_e$target8","_e$target9","diversionReportErrors","diversionReportTounched","touched","UpdatedHeader","_formik$values6","_formik$values6$diver","_formik$errors","_formik$errors$divers","_userData$getProfile16","_userData$getProfile17","DropDown","inputIcon","Map","onChange","options","Link","diversionSettings","Settings","colValUser","scope","onHandleSortDiversionReport","sortFieldName","_res$data4","_res$data4$getDiversi","_err$networkError4","_err$networkError4$re","_err$networkError4$re2","GetDefaultIcon","ArrowSortingUp","ArrowSortingDown","diversionReport","_data$material3","_data$material_type2","_data$equipment5","_data$volume9","displayIndex","EditBtnPopup","DeleteBtn","Number","parseInt","_res$data5","_res$data5$getDiversi","_err$networkError5","_err$networkError5$re","_err$networkError5$re2","onPageDrpSelectCategory","SHOW_PAGE_COUNT_ARR","item","Pagination","currentPage","onPageChange","handleSubmit","placeholder","handleChange","required","serviceTypeDrpDataTemplate","CommonModel","DELETE_WARNING_TEXT"],"sourceRoot":""}