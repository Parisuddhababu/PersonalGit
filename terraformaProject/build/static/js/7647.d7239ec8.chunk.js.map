{"version":3,"file":"static/js/7647.d7239ec8.chunk.js","mappings":"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","sources":["framework/graphql/queries/notifications.ts","views/viewNotification/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_NOTIFICATIONS = gql`\n  query FetchNotificationTemplate(\n    $page: Int\n    $search: String\n    $sortBy: String\n    $sortOrder: String\n    $limit: Int\n  ) {\n    fetchNotificationTemplate(\n      page: $page\n      search: $search\n      sortBy: $sortBy\n      sortOrder: $sortOrder\n      limit: $limit\n    ) {\n      data {\n        notificationdata {\n          id\n          uuid\n          template\n          status\n          created_at\n          updated_at\n        }\n        count\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n      }\n    }\n  }\n`;\nexport const GET_NOTIFICATION_BY_ID = gql`\n  query GetNotificationTemplate($getNotificationTemplateId: ID) {\n    getNotificationTemplate(id: $getNotificationTemplateId) {\n      data {\n        id\n        uuid\n        template\n        status\n        created_at\n        updated_at\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n        type\n      }\n    }\n  }\n`;\n","import { useQuery } from '@apollo/client';\nimport Button from '@components/button/button';\nimport { ArrowSmallLeft, Bell } from '@components/icons/icons';\nimport { ROUTES } from '@config/constant';\nimport { GET_NOTIFICATION_BY_ID } from '@framework/graphql/queries/notifications';\nimport { getDateTimeFromTimestamp } from '@utils/helpers';\nimport React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst NotificationDetails = () => {\n\tconst { t } = useTranslation();\n\tconst notificationId = useParams();\n\tconst navigate = useNavigate();\n\tconst { data, refetch } = useQuery(GET_NOTIFICATION_BY_ID);\n\t/**\n\t * IF WE GET ID BASED ON THAT WE WILL GET EVENT DATA\n\t */\n\tuseEffect(() => {\n\t\tif (notificationId.id) {\n\t\t\trefetch({ getNotificationTemplateId: parseInt(notificationId.id) }).catch((err) => toast.error(err));\n\t\t}\n\t}, [notificationId.id]);\n\t/**\n\t * on clicking cancel it will redirect to main events page\n\t */\n\tconst onCancel = useCallback(() => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.notifications}/list`);\n\t}, []);\n\treturn (\n\t\t<div className='w-full items-center justify-center border-spacing-1 border border-[#c8ced3] bg-white rounded-sm '>\n\t\t\t<div className='flex justify-between border-b border-[#c8ced3] bg-[#f0f3f5] px-5 py-3'>\n\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t<Bell className='mr-1' fontSize='12px' /> {t('Notification')}\n\t\t\t\t</div>\n\t\t\t\t<Button className='btn-primary btn-normal' label={t('Back')} onClick={onCancel} title={`${t('Back')}`} >\n\t\t\t\t\t<ArrowSmallLeft />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className='grid grid-cols-1 md:grid-cols-2 m-4'>\n\t\t\t\t<div className='flex pb-2'>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Template')} : </p>\n\t\t\t\t\t<p>{data?.getNotificationTemplate?.data?.template}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex pb-2'>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Status')} :</p>\n\t\t\t\t\t<p> {data?.getNotificationTemplate?.data?.status === 1 ? <span className='badge badge-success rounded'>Active</span> : <span className='badge badge-danger rounded'>InActive</span>}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex pb-2'>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Created At')} : </p>\n\t\t\t\t\t<p>{getDateTimeFromTimestamp(data?.getNotificationTemplate?.data?.created_at)}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex  pb-2'>\n\t\t\t\t\t<p className='mr-3 font-bold'>{t('Updated At')} :</p>\n\t\t\t\t\t<p>{getDateTimeFromTimestamp(data?.getNotificationTemplate?.data?.updated_at)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default NotificationDetails;\n"],"names":["gql","_templateObject","_taggedTemplateLiteral","GET_NOTIFICATION_BY_ID","_templateObject2","NotificationDetails","_data$getNotification","_data$getNotification2","_data$getNotification3","_data$getNotification4","_data$getNotification5","_data$getNotification6","_data$getNotification7","_data$getNotification8","t","useTranslation","notificationId","useParams","navigate","useNavigate","data","refetch","useQuery","useEffect","id","getNotificationTemplateId","parseInt","catch","err","toast","error","onCancel","useCallback","concat","ROUTES","app","notifications","_jsxs","className","children","_jsx","Bell","fontSize","Button","label","onClick","title","ArrowSmallLeft","getNotificationTemplate","template","status","getDateTimeFromTimestamp","created_at","updated_at"],"sourceRoot":""}