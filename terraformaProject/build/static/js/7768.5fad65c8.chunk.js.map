{"version":3,"file":"static/js/7768.5fad65c8.chunk.js","mappings":"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","sources":["components/breadcrumb/breadcrumb.tsx","components/common/commonModel.tsx","components/header/updatedHeader.tsx","framework/graphql/mutations/employeeuser.ts","framework/graphql/queries/employeeuser.ts","views/management/tenantManagement.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Breadcrumb = () => {\n\tconst { t } = useTranslation();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst { id } = useParams();\n\tconst { userProfileData } = useSelector(\n\t\t(state: { userProfile: { userProfileData: UserProfileType; } }) => state.userProfile,\n\t);\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? '';\n\n\t\n\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2]?.includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0]?.toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0]?.toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst thirdLevelLink = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\tmodulePath = data?.replace(/-|\\s/g, ' ');\n\t\t\tconst splitPathName = modulePath.split(' ');\n\t\t\tfor (let i = 0; i < splitPathName.length; i++) {\n\t\t\t\tsplitPathName[i] = splitPathName[i][0].toUpperCase() + splitPathName[i].substring(1); // Use substring instead of substr\n\t\t\t}\n\t\t\tmodulePath = splitPathName.join(' ');\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' '; // Using slice as you did previously\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst removeID = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' ';\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst urlArray = location.pathname.split('/');\n\n\tconst breadcrumbLinks = useCallback(() => {\n\t\tif (urlArray?.length > 0) {\n\t\t\tconst length = urlArray?.length\n\t\t\tif (length < 4) {\n\t\t\t\treturn (\n\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 5) {\n\t\t\t\tif (urlArray[3] !== '') {\n\t\t\t\t\tif (urlArray[3].length > 32) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{!removeID(urlArray[3]) &&\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(removeID(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 6) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 7) {\n\t\t\t\tlet uuidData = ''\n\t\t\t\tif (uuid) {\n\t\t\t\t\tuuidData = `?uuid=${uuid}`;\n\t\t\t\t} else if (id) {\n\t\t\t\t\tuuidData = `?uuid=${id}`;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[2]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}/${urlArray[3]}/${(uuid !== '' || id !== '') && uuidData}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[3]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[5] && `${t(thirdLevelLink(urlArray[4]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}, [urlArray]);\n\n\treturn (\n\t\t<div className='w-full'>\n\t\t\t<p className='max-xs:text-xs text-xs-14 max-md:truncate'>\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`)} className='cursor-pointer text-light-grey hover:underline'>\n\t\t\t\t\t\t{t('Home')}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<span className='mx-2 text-light-grey'>{'>'}</span>\n\t\t\t\t</span>\n\n\t\t\t\t{breadcrumbLinks()}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Breadcrumb);\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '@components/button/button';\nimport { Info, Cross, Cross2, Info2 } from '@components/icons/icons';\nimport { CommonModelProps } from 'src/types/common';\n\nconst CommonModel = ({ onClose, action, show, warningText, disabled , isLoading }: CommonModelProps) => {\n\tconst { t } = useTranslation();\n\tconst [addClass, setAddClass] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tif (show) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAddClass(true);\n\t\t\t}, 100);\n\t\t}\n\t}, [show]);\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <div className='w-12 h-12 mx-auto rounded-[50%] border-solid border-4 border-[#E8E8EA] border-r-[#2575d6] animate-spin absolute left-[58%] top-[40%]'></div>}\n\t\t\t<div className={`${show ? '' : 'hidden'} absolute top-0 left-0 right-0 z-[1000] h-full bg-modal`}>\n\t\t\t\t{(warningText !== 'Are you sure want to delete this record ?') && (warningText !== 'Are you sure want to change status ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[780px]'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='relative bg-white shadow rounded-xl'>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between px-5 py-6 border-b bg-accents-2 rounded-t-xl'>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center '>\n\t\t\t\t\t\t\t\t\t\t<Info className='inline-block mr-3 fill-baseColor' fontSize='20' />\n\t\t\t\t\t\t\t\t\t\t<span className='text-xl font-bold text-baseColor'>{t('Confirmation')}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Button onClick={onClose} label={''}>\n\t\t\t\t\t\t\t\t\t\t<Cross className='text-error' fontSize='14'/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='p-5 space-y-6 font-normal text-center border-b border-solid border-border-primary'>\n\t\t\t\t\t\t\t\t\t<p>{t(warningText)}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t\t\t<div className='flex flex-col items-center justify-end p-5 md:space-x-3 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal mb-2 md:mb-0 w-full md:w-auto min-w-[160px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal w-full md:w-auto min-w-[160px]' onClick={onClose} label={t('No')} title='No'/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{(warningText == 'Are you sure want to change status ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[640px]'>\n\t\t\t\t\t\t\t<div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n\t\t\t\t\t\t\t\t<div className='flex flex-col items-center mb-3'>\n\t\t\t\t\t\t\t\t\t<span className='p-[10px] bg-primary min-w-min rounded-full mb-3 overflow-hidden text-xl-44 md:text-6xl'><Info2 className='fill-white bg-primary' /></span>\n\t\t\t\t\t\t\t\t\t<h4>{t('Confirmation')}</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h6 className='font-semibold text-center mb-7 md:mb-10'>{t(warningText)}</h6>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-center space-x-5 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal min-w-[86px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal min-w-[86px]' onClick={onClose} label={t('No')} title='No' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{(warningText == 'Are you sure want to delete this record ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[640px]'>\n\t\t\t\t\t\t\t<div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n\t\t\t\t\t\t\t\t<div className='flex justify-center mb-5'><span className='p-[22px] md:p-[26px] rounded-full bg-error text-xl-35 md:text-5xl'><Cross2 className='stroke-2 fill-white' /></span></div>\n\t\t\t\t\t\t\t\t<h6 className='font-bold text-center mb-7 md:mb-10'>{t(warningText)}</h6>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-center space-x-5 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal min-w-[86px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal min-w-[86px]' onClick={onClose} label={t('No')} title='No' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default CommonModel;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport Breadcrumb from '@components/breadcrumb/breadcrumb';\nimport { HamburgerMenu } from '@components/icons/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShow } from 'src/redux/courses-management-slice';\n\ninterface UpdatedHeaderProps {\n\theaderActionConst?: any,\n\theaderTitle?: string,\n}\n\nconst UpdatedHeader = ({ headerActionConst, headerTitle }: UpdatedHeaderProps) => {\n\tconst { t } = useTranslation();\n\tconst dispatch = useDispatch();\n\tconst { show } = useSelector(((state: { coursesManagement: { show: boolean } }) => state.coursesManagement));\n\n\tconst location = useLocation();\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2].includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0].toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0].toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst onRenderJsxElement = () => {\n\t\tif (headerActionConst) {\n\t\t\treturn (headerActionConst())\n\t\t}\n\t}\n\n\tconst OnClickHandler = useCallback(() => {\n\t\tdispatch(setShow(!show))\n\t}, [show]);\n\n\treturn (\n\t\t<header className='sticky top-0 z-20 flex bg-white border-b shadow-header xl:shadow-none xl:h-auto xl:block border-border-primary xl:px-2 xl:pt-0'>\n\t\t\t<div onClick={OnClickHandler} className='pt-5 cursor-pointer text-xl-22 xl:hidden'>\n\t\t\t\t<HamburgerMenu className='ml-4' />\n\t\t\t</div>\n\t\t\t<div className='p-2.5 xl:p-[18px] xl:shadow-header max-xl:w-[calc(100%-47px)]'>\n\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-2.5'>\n\t\t\t\t\t<div className='w-full xl:w-auto'>\n\t\t\t\t\t\t<h1 className='mb-1 text-2xl max-xl:truncate xl:text-3xl'>{t(headerTitle ?? moduleName(location.pathname))}</h1>\n\t\t\t\t\t\t<Breadcrumb />\n\t\t\t\t\t</div>\n\t\t\t\t\t{headerActionConst &&\n\t\t\t\t\t\t<div className='flex gap-2.5 max-xl:w-[calc(100%+40px)] lg:gap-5'>\n\t\t\t\t\t\t\t{onRenderJsxElement()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default UpdatedHeader;\n","import { gql } from '@apollo/client';\n\nexport const DELETE_EMPLOYEE_USER = gql`\n  mutation DeleteSubscriberEmployeeUser($subscriberUserId: String!, $userData: DeleteUserDto) {\n    deleteSubscriberEmployeeUser(subscriberUserId: $subscriberUserId, userData: $userData) {\n      message\n    }\n  }\n`\n\nexport const DELETE_TENANT_COMPANY = gql`\nmutation DeleteTenantCompany($tenantBranchId: String!, $tenantCompanyId: String!) {\n  deleteTenantCompany(tenantBranchId: $tenantBranchId, tenantCompanyId: $tenantCompanyId) {\n    message\n  }\n}\n`\n\nexport const DELETE_CONTRACTOR_COMPANY = gql`\nmutation DeleteContractorCompany($contractorBranchId: String!, $contractorCompanyId: String!) {\n  deleteContractorCompany(contractorBranchId: $contractorBranchId, contractorCompanyId: $contractorCompanyId) {\n    message\n  }\n}`","import { gql } from '@apollo/client';\nexport const FETCH_EMPLOYEE_USER_LIST = gql `\nquery GetSubscriberEmployeesUserListWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getSubscriberEmployeesUserListWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        employee {\n          email\n          uuid\n          status\n          first_name\n          last_name\n          user_type\n          phone_number\n          country_code {\n            id\n            uuid\n            name\n            countryCode\n            phoneCode\n          }\n          department\n          company_id {\n            uuid\n            name\n            description\n            type\n            attachments\n            website_url            \n            industryType {\n              uuid\n              name\n              description\n            }\n          }\n          user_roles {\n            uuid\n            role_id {\n              uuid\n              name\n              description\n              status\n            }\n          }\n          user_branches {\n            uuid\n            branch {\n              location\n              city\n              uuid\n            }\n          }\n        }\n        count\n      }\n    }\n  }`\n\n\nexport const FETCH_EMPLOYEE_USER_LIST_VIEW = gql `\nquery GetSubscriberEmployeeById($subscriberUserId: String!, $userType: Float) {\n  getSubscriberEmployeeById(subscriberUserId: $subscriberUserId, userType: $userType) {\n    message\n    data {\n      uuid\n      email\n      pronounce\n      first_name\n      last_name\n      phone_number\n      country_code {\n        id\n        uuid\n        name\n        countryCode\n        phoneCode\n      }\n      preferred_language\n      location\n      department\n      user_roles {\n        uuid\n        role_id {\n          uuid\n          name\n          description\n          status\n        }\n      }\n      reporting_manager_id {\n        id\n        email\n        uuid\n        status\n        pronounce\n        position\n        first_name\n        last_name\n        phone_number\n        country_code\n        profile_picture\n        preferred_language\n        educational_interests\n        organization\n        location\n        department\n        reporting_manager_id\n        user_type\n        company_id\n        branch_id\n        subscriber_id {\n          uuid\n          first_name\n          last_name \n          company_name\n          address\n          phone_number\n          logo\n          subscribe_start\n          subscribe_end\n          email\n          status\n        }\n      }\n    }\n  }\n}\n`\n\nexport const FETCH_TENANT_COMPANY_LIST = gql `\nquery GetTenantsContractorsCompaniesWithPagination($userData: GetCompanyTypeDto!) {\n  getTenantsContractorsCompaniesWithPagination(userData: $userData) {\n    message\n    data {\n      data {\n        status\n        company {\n          uuid\n          name\n          description\n          type\n          attachments\n          website_url          \n          industryType {\n            uuid\n            name\n            description\n          }\n          tenantContractorType {\n            uuid\n            name\n            description\n            type\n          }\n        }\n        branch {\n          uuid\n          location\n          status\n        }        \n        user_count\n      }\n      count\n    }\n  }\n}\n\n`","import React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport TextInput from '@components/textInput/TextInput';\nimport Pagination from '@components/Pagination/Pagination';\nimport Button from '@components/button/button';\nimport filterServiceProps from '@components/filter/filter';\nimport CommonModel from '@components/common/commonModel';\nimport { CHANGE_STATUS_WARNING_TEXT, ContractorStatus, DELETE_WARNING_TEXT, PAGE_LIMIT, PAGE_NUMBER, ROUTES, SHOW_PAGE_COUNT_ARR } from '@config/constant';\nimport { ArrowSortingDown, ArrowSortingUp, Cross, Edit, Eye, GetDefaultIcon, Search, Trash } from '@components/icons/icons';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { PaginationParams, ColArrType } from '@types';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { FETCH_TENANT_COMPANY_LIST } from '@framework/graphql/queries/employeeuser';\nimport { DELETE_TENANT_COMPANY } from '@framework/graphql/mutations/employeeuser';\nimport { setCustomCreateNewAccountStep } from 'src/redux/courses-management-slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserProfileType, UserRoles } from 'src/types/common';\nimport { setCreateNewCompany, userCompanyType } from 'src/redux/user-profile-slice';\nimport { CHANGE_CONTRACTOR_STATUS } from '@framework/graphql/mutations/contractorPage';\ninterface TenantDataTypes {\n    id: number;\n    uuid: string;\n    status: number;\n    name: string;\n    description: string;\n    website_url: string;\n    user_count: number;\n    address: string;\n    company?:{\n        name?: string;\n        website_url?: string;\n        uuid:string;\n    }\n    branch?:{\n        uuid:string;\n        location?: string;\n        status?: number;\n    }\n}\nconst TenantManagement = () => {\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { tenant } = useSelector(((state: { rolesManagement: { tenant: UserRoles } }) => state.rolesManagement));\n    const { userProfileData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n    const [deleteTenantCompany, deleteCompanyLoading] = useMutation(DELETE_TENANT_COMPANY);\n    const [isStatusModelShow, setIsStatusModelShow] = useState<boolean>(false)\n    const [tenantObj, setTenantObj] = useState({} as TenantDataTypes);\n    const [updateContractorStatus, loading] = useMutation(CHANGE_CONTRACTOR_STATUS)\n    const COL_ARR_TENANT_COMPANY = [\n        { name: t('Sr.No'), sortable: false },\n        { name: t('Name'), sortable: true, fieldName: 'createdAt' },\n        { name: t('Location'), sortable: true , fieldName: 'createdAt'},\n        { name: t('Number of User'), sortable: false },\n        { name: t('Website Url'), sortable: true, fieldName: 'createdAt' },\n        { name: t('Status'), sortable: true, fieldName: 'status' },\n    ] as ColArrType[];\n    const [isDeleteCompanyData, setIsDeleteCompanyData] = useState<string>('');\n    const [isDeleteCompanyBranchData, setIsDeleteCompanyBranchData] = useState<string>('');\n    const [isDeleteCompany, setIsDeleteCompany] = useState<boolean>(false);\n    const [isUserCountDelete, setIsUserCountDelete] = useState<boolean>(false);\n    const [filterData, setFilterData] = useState<PaginationParams>({\n        limit: PAGE_LIMIT,\n        page: PAGE_NUMBER,\n        sortOrder: 'descend',\n        search: '',\n        sortField: 'createdAt',\n        index: 0\n    });\n    const [recordsPerPage, setRecordsPerPage] = useState<number>(filterData.limit);\n    const { data: getTenantCompanyData, refetch } = useQuery(FETCH_TENANT_COMPANY_LIST, {\n        variables: {\n            userData: {\n                company_type: 1,\n                limit: filterData.limit,\n                search: filterData.search,\n                sortOrder: filterData.sortOrder,\n                sortField: filterData.sortField,\n                page: filterData.page,\n            },\n        },\n    });\n\n    /**\n        * Method used for Add Subscriber sets data\n    */\n    function handleAddUser() {\n        dispatch(userCompanyType(1));\n        dispatch(setCreateNewCompany(true))\n        dispatch(setCustomCreateNewAccountStep(1))\n        navigate(`/${ROUTES.app}/${ROUTES.create3rdPartyCompanyAccount}/?tenant-company-list=true`)\n    }\n    /**\n     *\n     * @param sortFieldName Method used for storing sort data\n     */\n\n    const onHandleSortUser = (sortFieldName: string) => {\n        setFilterData({\n            ...filterData,\n            sortField: sortFieldName,\n            sortOrder: filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n        });\n    };\n\n    /**\n     *\n     * @param e Method used for change dropdown for page limit\n     */\n    const onPageDrpSelectUser = (e: string) => {\n        setRecordsPerPage(Number(e))\n        const updatedFilterData = {\n            ...filterData,\n            limit: parseInt(e),\n            page: PAGE_NUMBER,\n            index: 0,\n        };\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState('filterEmployeeUser', JSON.stringify(updatedFilterData));\n    };\n\n    const totalUser = getTenantCompanyData?.getTenantsContractorsCompaniesWithPagination?.data?.count || 0; // Need to changes\n    const totalPages = Math.ceil(totalUser / recordsPerPage);\n    const handlePageChange = useCallback((newPage: number): void => {\n        const updatedFilterData = {\n            ...filterData,\n            page: newPage,\n            index: (newPage - 1) * filterData.limit,\n        }\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState('filterEmployeeUser', JSON.stringify(updatedFilterData));\n    }, [filterData.limit])\n\n    useEffect(() => {\n        setRecordsPerPage(filterData.limit);\n    }, [filterData.limit]);\n\n    const deleteUser = useCallback(() => {\n        deleteTenantCompany({\n            variables: {\n                tenantCompanyId: isDeleteCompanyData,\n                tenantBranchId: isDeleteCompanyBranchData\n            },\n        })\n            .then((res) => {\n                const data = res.data\n                toast.success(data.deleteTenantCompany.message)\n                setTimeout(() => {\n                    refetch(filterData).catch((error) => toast.error(error))\n                }, 1000)\n                setIsDeleteCompany(false)\n            })\n            .catch((err) => {\n                toast.error(err?.networkError?.result?.errors[0].message)\n            })\n    }, [isDeleteCompanyData,isDeleteCompanyBranchData]);\n\n    const onSearchUser = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterData({ ...filterData, search: e.target.value })\n    }, [])\n\n    const subscriberUUID = userProfileData?.getProfile?.data?.subscriber_id?.uuid;\n    \n    useEffect(() => {\n        refetch(filterData).catch((err) => toast.error(err))\n    }, [filterData])\n\n    const headerActionConst = () => {\n        return (\n            <>\n                {(subscriberUUID && tenant?.write) && <Button\n                    className='ml-5 btn-normal md: btn btn-secondary'\n                    onClick={handleAddUser}\n                    type='button'\n                    label={t('Create New Tenant')}\n                />}\n            </>\n        )\n    }\n    const onEdit = useCallback((uuid: string | undefined,branchId:string |undefined) => {\n        dispatch(userCompanyType(1));\n        dispatch(setCreateNewCompany(true))\n        dispatch(setCustomCreateNewAccountStep(1))\n        navigate(`/${ROUTES.app}/${ROUTES.create3rdPartyCompanyAccount}/?company_uuid=${uuid}&edit-tenant-company=true&branch_id=${branchId}`)\n    }, []);\n\n    const onView = useCallback((uuid: string|undefined,branchId:string |undefined) => {\n        navigate(`/${ROUTES.app}/${ROUTES.tenantDetailsPage}/?company_uuid=${uuid}&branch_id=${branchId}`)\n    }, [])\n\n    const onDeleteCompany = useCallback((uuid: string | undefined,branchId:string|undefined ,userCount: number) => {\n        if (userCount > 0) {\n            setIsUserCountDelete(true);\n        } else {\n            setIsDeleteCompanyData(uuid ?? '');\n            setIsDeleteCompanyBranchData(branchId ?? '')\n            setIsDeleteCompany(true);\n        }\n    }, [])\n    /**\n* Method used for change Category status model\n*/\n    const onChangeStatus = useCallback((data: TenantDataTypes) => {\n        setIsStatusModelShow(true)\n        setTenantObj(data)\n    }, [])\n\n    const changeCategoryStatus = useCallback(() => {\n        updateContractorStatus({\n            variables: {\n                companyId: tenantObj.company?.uuid,\n                branchId: tenantObj?.branch?.uuid\n            },\n        })\n            .then((res) => {\n                const data = res.data\n                toast.success(data.activeInActiveCompany.message)\n                setIsStatusModelShow(false)\n                setTimeout(() => {\n                    refetch(filterData)\n                }, 1000)\n            })\n            .catch((err) => {\n                toast.error(err?.networkError?.result?.errors[0]?.message)\n            })\n    }, [isStatusModelShow])\n    /**\n* Method used for close model\n*/\n    const onCloseSubscriber = useCallback(() => {\n        setIsStatusModelShow(false)\n    }, []);\n\n    const onCancel = useCallback(() => {\n        setIsUserCountDelete(false);\n    }, [])\n    return (\n        <>\n            <UpdatedHeader headerActionConst={headerActionConst} />\n            <div className='p-3 mb-3 bg-white border rounded-xl border-border-primary mx-7 md:p-5'>\n                <div className='flex flex-col flex-wrap justify-between gap-3 mb-3 md:gap-5 md:mb-5 btn-group md:flex-row'>\n                    <h6 className='w-full leading-7 xmd:w-auto'>{t('Tenant Company List')}</h6>\n                    <div className='w-full md:w-auto'>\n                        <TextInput\n                            type='text'\n                            id='table-search'\n                            value={filterData.search}\n                            placeholder={t('Search')}\n                            onChange={onSearchUser}\n                            inputIcon={<Search fontSize='18' className='font-normal' />}\n                        />\n                    </div>\n                </div>\n                <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                    <table>\n                        <thead key='sorting'>\n                            <tr>\n                                {COL_ARR_TENANT_COMPANY?.map((colValUser: ColArrType, index: number) => {\n                                    return (\n                                        <th scope='col' key={`tenant-management${index + 1}`} className={`${colValUser.name == 'Sr.No' ? 'pl-7' : ''}`}>\n                                            <div className='flex items-center'>\n                                                {colValUser.name}\n                                                {colValUser.sortable && (\n                                                    <button onClick={() => onHandleSortUser(colValUser.fieldName)} title=''>\n                                                        {(filterData.sortOrder === '' || filterData.sortField !== colValUser.fieldName) &&\n                                                            <GetDefaultIcon className='w-3 h-3 ml-1 fill-white' />}\n                                                        {filterData.sortOrder === 'ascend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingUp className=\"ml-1 fill-white\" />}\n                                                        {filterData.sortOrder === 'descend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingDown className=\"ml-1 fill-white\" />}\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </th>\n                                    );\n                                })}\n\n                                <th scope='col'>\n                                    <div className='flex items-center'>{t('Action')}</div>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {getTenantCompanyData?.getTenantsContractorsCompaniesWithPagination?.data?.data?.map((data: TenantDataTypes, index: number) => {\n                                const displayIndex = filterData?.index as number + index + 1;\n                                const branchId=data?.branch?.uuid\n                                return (\n                                    <tr key={`${index + 1}`}>\n\n                                        <td scope='row' className='text-left pl-7'>\n                                            {displayIndex}\n                                        </td>\n                                        <td className='text-left'>{data?.company?.name}</td>\n                                        <td className='text-left'>{data?.branch?.location}</td>\n                                        <td className='text-left'>{data?.user_count}</td>\n                                        <td className='text-left'>{data?.company?.website_url}</td>\n                                        <td className='text-left border-none'>\n                                            <div className='flex'>\n                                                {data?.status === ContractorStatus.ACTIVE ? (\n                                                    <span className='text-bright-green-shade'>\n                                                        Active\n                                                    </span>\n                                                ) : (\n                                                    <span className='text-error'>\n                                                        Inactive\n                                                    </span>\n                                                )}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div className='flex'>\n                                                {(subscriberUUID && tenant?.read) && <Button className='mr-2.5 bg-transparent btn-default' onClick={() => onView(data?.company?.uuid,branchId)} label={''}>\n                                                    <Eye className='text-success' />\n                                                </Button>}\n                                                {(subscriberUUID && tenant?.update) && <Button className='mr-2.5 bg-transparent btn-default' onClick={() => onEdit(data?.company?.uuid, branchId)} label={''}>\n                                                    <Edit />\n                                                </Button>}\n                                                {(subscriberUUID && tenant?.delete) && <Button className='mr-2.5 bg-transparent cursor-pointer btn-default' onClick={() => onDeleteCompany(data?.company?.uuid, branchId, data?.user_count)} label={''} disabled={deleteCompanyLoading?.loading} >\n                                                    <Trash className='fill-error' />\n                                                </Button>}\n                                                <div className='flex justify-center'>\n                                                    {subscriberUUID && tenant?.update && <span\n                                                        className='font-medium text-blue-600 hover:underline'\n                                                    >\n                                                        <label className='relative inline-flex items-center mb-0 cursor-pointer'>\n                                                            <input\n                                                                type='checkbox'\n                                                                className='sr-only peer'\n                                                                value={data?.status}\n                                                                onChange={() => onChangeStatus(data)}\n                                                                checked={data?.status === ContractorStatus.ACTIVE}\n                                                            />\n                                                            <div\n                                                                className={\n                                                                    'w-[30px] h-[14px] bg-secondary rounded-full peer peer-focus:ring-3 peer-focus:ring-red-200 peer-checked:after:translate-x-full peer-checked:after:border-white after:content- after:absolute after:top-[-1px] after:left-0 after:bg-white after:drop-shadow-outline-2 after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-primary'\n                                                                }\n                                                            ></div>\n                                                        </label>\n                                                    </span>}\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                    {(getTenantCompanyData?.getTenantsContractorsCompaniesWithPagination?.data?.count === 0 ||\n                        getTenantCompanyData?.getTenantsContractorsCompaniesWithPagination?.data?.data === null) && (\n                            <div className='flex justify-center'>\n                                <div>{t('No Data')}</div>\n                            </div>\n                        )}\n                </div>\n\n                <div className='flex flex-wrap items-center mt-2 overflow-auto gap-x-5 md:gap-x-7'>\n                    <div className='flex items-center'>\n                        <span className='text-sm font-normal text-gray-700 '>\n                            {t('Per Page')}\n                        </span>\n                        <select\n                            className='border border-border-primary rounded-xl ml-2 px-3 text-sm py-1.5 text-gray-500 w-[70px] h-[36px] appearance-none bg-white'\n                            value={filterData.limit}\n                            onChange={(e) => onPageDrpSelectUser(e.target.value)}\n                        >\n                            {SHOW_PAGE_COUNT_ARR?.map((item: number, index: number) => {\n                                return <option key={`${index + 1}`}>{item}</option>\n                            })}\n                        </select>\n                    </div>\n                    <Pagination currentPage={filterData.page}\n                        totalPages={totalPages}\n                        onPageChange={handlePageChange}\n                        recordsPerPage={recordsPerPage}\n                    />\n                </div>\n                {isDeleteCompany && <CommonModel warningText={DELETE_WARNING_TEXT} onClose={() => setIsDeleteCompany(false)} action={deleteUser} show={isDeleteCompany} />}\n                {isStatusModelShow && (\n                    <CommonModel\n                        warningText={CHANGE_STATUS_WARNING_TEXT}\n                        onClose={onCloseSubscriber}\n                        action={changeCategoryStatus}\n                        show={isStatusModelShow}\n                        disabled={loading?.loading}\n                    />\n                )}\n            </div>\n            {isUserCountDelete && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isUserCountDelete ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${isUserCountDelete ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n                        <div className='w-full mx-5 max-w-[700px]'>\n                            <div className='relative bg-white rounded-xl'>\n                                <div className='flex flex-wrap items-center justify-between gap-4 p-5 border-b bg-accents-2 rounded-t-xl'>\n                                    <p className='text-lg font-bold md:text-xl text-error'>{''}</p>\n                                    <Button onClick={onCancel} label={t('')}  title={`${t('Close')}`} >\n                                        <span className='text-xl-22'><Cross className='text-error' /></span>\n                                    </Button>\n                                </div>\n                                <div className='w-full'>\n                                    <p className='flex items-center justify-center m-5 text-lg font-bold text-center md:text-xl text-error'>{'To delete this company, First delete the associated users then delete this company.'}</p>\n                                    <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                        <Button className='btn-secondary btn-normal w-full md:w-[90px]' label={t('Close')} onClick={onCancel} type='button'  title={`${t('Close')}`}  />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\nexport default TenantManagement;\n\n"],"names":["Breadcrumb","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","location","useLocation","uuid","URLSearchParams","search","get","id","useParams","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","moduleName","pathname","_pathname$split$","modulePath","split","includes","forEach","i","_i$","toUpperCase","slice","_pathname$split$2$","thirdLevelLink","replace","splitPathName","length","substring","join","_data$","removeID","_data$2","urlArray","breadcrumbLinks","useCallback","_jsx","className","children","concat","_jsxs","_Fragment","NavLink","to","ROUTES","app","uuidData","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","React","_ref","onClose","action","show","warningText","disabled","isLoading","addClass","setAddClass","useState","useEffect","setTimeout","tabIndex","Info","fontSize","Button","onClick","label","Cross","title","Info2","Cross2","headerActionConst","headerTitle","dispatch","useDispatch","coursesManagement","OnClickHandler","setShow","HamburgerMenu","onRenderJsxElement","DELETE_EMPLOYEE_USER","gql","_templateObject","_taggedTemplateLiteral","DELETE_TENANT_COMPANY","_templateObject2","DELETE_CONTRACTOR_COMPANY","_templateObject3","FETCH_EMPLOYEE_USER_LIST","FETCH_TENANT_COMPANY_LIST","TenantManagement","_getTenantCompanyData","_getTenantCompanyData2","_getTenantCompanyData3","_getTenantCompanyData4","_getTenantCompanyData5","_getTenantCompanyData6","_getTenantCompanyData7","_getTenantCompanyData8","_getTenantCompanyData9","navigate","useNavigate","tenant","rolesManagement","deleteTenantCompany","deleteCompanyLoading","useMutation","isStatusModelShow","setIsStatusModelShow","tenantObj","setTenantObj","updateContractorStatus","loading","CHANGE_CONTRACTOR_STATUS","COL_ARR_TENANT_COMPANY","name","sortable","fieldName","isDeleteCompanyData","setIsDeleteCompanyData","isDeleteCompanyBranchData","setIsDeleteCompanyBranchData","isDeleteCompany","setIsDeleteCompany","isUserCountDelete","setIsUserCountDelete","filterData","setFilterData","limit","PAGE_LIMIT","page","PAGE_NUMBER","sortOrder","sortField","index","recordsPerPage","setRecordsPerPage","getTenantCompanyData","refetch","useQuery","variables","userData","company_type","handleAddUser","userCompanyType","setCreateNewCompany","setCustomCreateNewAccountStep","create3rdPartyCompanyAccount","totalUser","getTenantsContractorsCompaniesWithPagination","count","totalPages","Math","ceil","handlePageChange","newPage","updatedFilterData","filterServiceProps","saveState","JSON","stringify","deleteUser","tenantCompanyId","tenantBranchId","then","res","toast","success","message","catch","error","err","_err$networkError","_err$networkError$res","networkError","result","errors","onSearchUser","e","target","value","subscriberUUID","subscriber_id","onEdit","branchId","onView","tenantDetailsPage","onDeleteCompany","userCount","onChangeStatus","changeCategoryStatus","_tenantObj$company","_tenantObj$branch","companyId","company","branch","activeInActiveCompany","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","onCloseSubscriber","onCancel","UpdatedHeader","write","type","TextInput","placeholder","onChange","inputIcon","Search","map","colValUser","scope","onHandleSortUser","sortFieldName","GetDefaultIcon","ArrowSortingUp","ArrowSortingDown","_data$branch","_data$company","_data$branch2","_data$company2","displayIndex","user_count","website_url","status","ContractorStatus","ACTIVE","read","_data$company3","Eye","update","_data$company4","Edit","delete","_data$company5","Trash","checked","Number","parseInt","onPageDrpSelectUser","SHOW_PAGE_COUNT_ARR","item","Pagination","currentPage","onPageChange","CommonModel","DELETE_WARNING_TEXT","CHANGE_STATUS_WARNING_TEXT"],"sourceRoot":""}