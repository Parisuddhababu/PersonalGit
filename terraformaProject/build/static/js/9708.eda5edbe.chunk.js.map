{"version":3,"file":"static/js/9708.eda5edbe.chunk.js","mappings":"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","sources":["framework/graphql/mutations/technicalManual.ts","framework/graphql/queries/technicalManual.ts","views/technicalManualsAndGuides/addEditTechnicalManualsGuides.tsx"],"sourcesContent":["\nimport { gql } from '@apollo/client';\nexport const CREATE_MANUAL_CATEGORY = gql`\nmutation CreateManualCategory($manualCategoryData: CreateManualCategoryDto!) {\n    createManualCategory(manualCategoryData: $manualCategoryData) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n        parent {\n          uuid\n          name\n          description\n          image_url\n        }\n      }\n    }\n  }\n`;\n\nexport const UPDATE_MANUAL_CATEGORY= gql`\nmutation UpdateManualCategory($categoryId: String!, $manualCategoryData: UpdateManualCategoryDto!) {\n    updateManualCategory(categoryId: $categoryId, manualCategoryData: $manualCategoryData) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n      }\n    }\n  }\n`\n\nexport const DELETE_MANUAL_CATEGORY= gql`\nmutation DeleteManualCategory($manualCategoryId: String!) {\n  deleteManualCategory(manualCategoryId: $manualCategoryId) {\n    message\n    data {\n      uuid\n      name\n      description\n      image_url\n      parent {\n        uuid\n        name\n        description\n        image_url\n      }\n    }\n  }\n}`","import { gql } from '@apollo/client';\nexport const GET_MANUAL_CATEGORIES_PAGINATION = gql `\nquery GetManualCategories($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n  getManualCategories(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n    message\n    data {\n      manualCategories {\n        uuid\n        name\n        description\n        image_url\n      \n      }\n      count\n    }\n  }\n}\n  `\n  export const GET_PARENT_CATEGORIES = gql `\n  query GetAllParentCategory {\n    getAllParentCategory {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n      }\n    }\n  }`\n\n  export const GET_MANUAL_CATEGORIES_ID = gql `\n  query GetManualCategoryById($manualCategoryId: String!) {\n    getManualCategoryById(manualCategoryId: $manualCategoryId) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n        parent {\n          uuid\n          name\n          description\n          image_url\n        }\n      }\n    }\n  }`\n\nexport const GET_PARENT_MANUAL_CATEGORIES_ID = gql `\n  query GetManualParentCategoryById($manualCategoryId: String!) {\n    getManualParentCategoryById(manualCategoryId: $manualCategoryId) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n        children {\n          uuid\n          name\n          description\n          image_url\n        }\n      }\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback, useEffect, useState, createRef, useRef } from 'react'\nimport Cropper, { ReactCropperElement } from 'react-cropper';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { t } from 'i18next';\nimport logo from '@assets/images/sidebar-logo.png';\nimport { Camera, Cross } from '@components/icons/icons';\nimport TextInput from '@components/textInput/TextInput'\nimport Button from '@components/button/button';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_PARENT_MANUAL_CATEGORIES_ID } from '@framework/graphql/queries/technicalManual';\nimport { CREATE_MANUAL_CATEGORY, UPDATE_MANUAL_CATEGORY } from '@framework/graphql/mutations/technicalManual';\nimport { DATA_URL_TO_FILE, uploadImage } from '@config/constant';\nimport useValidation from '@framework/hooks/validations';\nimport { CreateTechnical } from 'src/types/technicalManual';\nimport { useParams } from 'react-router-dom';\nimport { Dialog } from 'primereact/dialog';\nimport { whiteSpaceRemover } from '@utils/helpers';\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'; // theme\nimport 'primereact/resources/primereact.css'; // core css\nimport 'cropperjs/dist/cropper.css';\n\n\nconst AddEditTechnicalManualsGuides = (props: any) => {\n  const params = useParams()\n  const [createManual] = useMutation(CREATE_MANUAL_CATEGORY);\n  const [updateManual] = useMutation(UPDATE_MANUAL_CATEGORY);\n  const { refetch } = useQuery(GET_PARENT_MANUAL_CATEGORIES_ID, { variables: { manualCategoryId: params.id }, skip: !params.id })\n  const { addTechnicalManualValidationSchema } = useValidation();\n  const [isRoleModelShow, setIsRoleModelShow] = useState<boolean>(false)\n  const [addClass, setAddClass] = useState<boolean>(false);\n  const [isEditTechnicalManual, setIsEditTechnicalManual] = useState<boolean>(false);\n  const [technicalManualImage, setTechnicalManualImage] = useState('');\n  const cropperTechnicalManualRef = createRef<ReactCropperElement>();\n  const [technicalManualCropper, setTechnicalManualCropper] = useState(false);\n  const technicalManualFileInputRef = useRef<HTMLInputElement | null>(null);\n  const [imageTechnicalManualLoader,setTechnicalManualImageLoader] = useState(false);\n  const initialTechnicalManualsValues = {\n    name: '',\n    description: '',\n    image_url: '',\n    parent_id: ''\n  }\n\n  const sendDataToParent = () => {\n    props.onData(refetch);\n  }\n  const formik = useFormik({\n    initialValues: initialTechnicalManualsValues,\n    validationSchema: addTechnicalManualValidationSchema,\n    onSubmit: async (values) => {\n      if (props.onData.uuid) {\n        const manualCategoryData = {\n          name: values.name,\n          description: values.description,\n          parent_id: values.parent_id ? values.parent_id : '',\n          image_url: values.image_url,\n        };\n        updateManual({\n          variables: {\n            manualCategoryData: manualCategoryData,\n            categoryId: String(props.onData.uuid),\n          },\n        })\n          .then((res) => {\n            const data = res.data\n            toast.success(data?.updateManualCategory?.message)\n            formik.resetForm()\n            props.dataRefetch()\n            onCancelTechnicalManual()\n            props.onCloseAddForm()\n\n          })\n          .catch((err) => {\n            toast.error(err?.networkError?.result?.errors[0]?.message)\n          })\n\n      } else {\n        createManual({\n          variables: {\n            manualCategoryData: {\n              name: values.name,\n              description: values.description,\n              parent_id: values.parent_id === '' ? '' : values.parent_id,\n              image_url: values.image_url,\n            },\n          },\n        })\n          .then((res) => {\n            const data = res.data\n            toast.success(data?.createManualCategory?.message)\n            formik.resetForm()\n            sendDataToParent()\n            props.onCloseAddForm()\n          })\n          .catch((err) => {\n            toast.error(err.networkError.result.errors[0].message)\n          })\n      }\n    }\n  })\n\n  useEffect(() => {\n    setIsRoleModelShow(true);\n    setAddClass(true);\n    if (props?.onData?.uuid) {\n      setIsEditTechnicalManual(true);\n    }\n  }, [props])\n\n  /**\n * Method used for get state api with id\n */\n  useEffect(() => {\n    if (params.id) {\n      refetch({ manualCategoryId: (params.id) }).catch((e) => toast.error(e));\n    }\n  }, [params.id]);\n\n  const handleTechnicalManualLogo = useCallback((e: any) => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      if (file.type.startsWith('image/')) {\n        if (file.size > 5 * 1024 * 1024) {\n          toast.error('Image size must be less than 5MB');\n        } else {\n          const reader = new FileReader();\n          reader.onload = () => {\n            setTechnicalManualImage(reader.result as any);\n            setTechnicalManualCropper(true);\n          };\n          reader.readAsDataURL(file);\n        }\n      } else {\n        toast.error('Please select a valid image file');\n      }\n    }\n    if (technicalManualFileInputRef.current) {\n      technicalManualFileInputRef.current.value = '';\n    }\n  }, []);\n\n  /**\n   * \n   * @param fieldName particular field name pass base on error show\n   * @returns \n   */\n  const getErrorTechnicalMessage = (fieldName: keyof CreateTechnical) => {\n    return formik.errors[fieldName] && formik.touched[fieldName]\n      ? formik.errors[fieldName]\n      : ''\n  }\n\n  useEffect(() => {\n    if (props?.onData?.uuid) {\n      formik.setValues({\n        name: props.onData.name,\n        description: props.onData.description,\n        parent_id: props.onData.parent_id,\n        image_url: props.onData.image_url,\n      });\n\n    }\n  }, [props]);\n\n  const onCancelTechnicalManual = useCallback(() => {\n    setIsRoleModelShow(false);\n  }, [])\n\n  /**\n   *  not add empty space logic\n   */\n  const OnTechnicalManualBlur = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n    formik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n  }, []);\n\n  const getTechnicalManualCropData = async (): Promise<void> => {\n    if (typeof cropperTechnicalManualRef.current?.cropper !== 'undefined') {\n      await setTechnicalManualImageLoader(true);\n      let fileName: string | null = null;\n      const file = DATA_URL_TO_FILE(cropperTechnicalManualRef.current?.cropper.getCroppedCanvas().toDataURL(), 'image.png');\n      const formData = new FormData();\n      formData.append('image', file);\n      fileName = await uploadImage(formData,'');\n      if (fileName) {\n        formik.setFieldValue('image_url', fileName);\n        setTechnicalManualCropper(false);\n      }\n      await setTechnicalManualImageLoader(false);\n    }\n  };\n\n  const dialogTechnicalManualActionConst = () => {\n    return (\n      <div className='flex justify-end gap-3 md:gap-5'>\n        <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setTechnicalManualCropper(false)}  title={`${t('Cancel')}`} />\n        {/* <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getTechnicalManualCropData()} title={`${t('Save')}`}  /> */}\n        <Button className=\"btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap\" type=\"button\" disabled={imageTechnicalManualLoader} label={'Save'} onClick={() => getTechnicalManualCropData()} />\t\t\t\t\t\t\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {isRoleModelShow && (\n        <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isRoleModelShow ? '' : 'hidden'}`}>\n          <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n            <div className='w-full mx-5 sm:max-w-[780px]'>\n              {/* <!-- Modal content --> */}\n              <div className='relative bg-white rounded-xl'>\n                {/* <!-- Modal header --> */}\n                <div className='flex items-center justify-between p-5 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                  <h6>{isEditTechnicalManual ? 'Update Manual' : 'Add Manual'}</h6>\n                  {isEditTechnicalManual ? <Button onClick={onCancelTechnicalManual} label={t('')}><span className='text-xl-22'><Cross className='text-error' /></span></Button> : <Button onClick={props.onCloseAddForm} label={t('')}><span className='text-xl-22'><Cross className='text-error' /></span></Button>}\n                </div>\n                {/* <!-- Modal body --> */}\n                <div className='w-full '>\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className='p-5 bg-white max-h-[calc(100vh-260px)] overflow-auto'>\n                      <div className='mb-2 text-right'>\n                        {t('Fields marked with')} <span className='text-red-500'>*</span> {t('are mandatory.')}\n                      </div>\n                      <div className='mb-3'>\n                        <div className='box-border flex flex-col items-center justify-center p-5 mb-5 border border-solid border-border-primary rounded-xl'>\n                          <label\n                            htmlFor='image_url'\n                            className='relative flex flex-col items-center justify-center'>\n                            <div className='flex items-center justify-center w-32 h-32 overflow-hidden border border-gray-300 border-solid rounded-full cursor-pointer sm:w-44 sm:h-44'>\n                              {formik?.values?.image_url ? <img src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${formik.values.image_url}`} alt='image_url' className='object-contain w-full h-full bg-black' /> :\n                                <img src={logo} alt='image_url' className='object-contain w-full h-full bg-black' />}\n                            </div>\n                            <input\n                              type=\"file\"\n                              id=\"image_url\"\n                              name=\"image_url\"\n                              accept=\"image/*\"\n                              onChange={handleTechnicalManualLogo}\n                              ref={technicalManualFileInputRef}\n                              className=\"hidden\"\n                            />\n                            <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                          </label>\n                          {formik.errors.image_url && formik.touched.image_url ? <span className='relative mt-2 md:text-xs-15 error'>{formik.errors.image_url}</span> : ''}\n                        </div>\n                      </div>\n                      <div className='mb-3'>\n                        <TextInput onBlur={OnTechnicalManualBlur} placeholder={t('Name')} required={true} name='name' onChange={formik.handleChange} label={t('Name')} value={formik.values.name} error={getErrorTechnicalMessage('name')} />\n                      </div>\n                      <div>\n                        <TextInput onBlur={OnTechnicalManualBlur} placeholder={t('Description')} required={true} name='description' onChange={formik.handleChange} label={t('Description')} value={formik.values.description} error={getErrorTechnicalMessage('description')} />\n                      </div>\n                    </div>\n                    <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-5 md:flex-row border-border-primary'>\n                      <Button className='btn-primary btn-normal mb-3 md:mb-0 w-full md:w-[160px]' type='submit' label={t('Save')} \n                      title={`${t('Save')}`} />\n                      {isEditTechnicalManual ? <Button className='btn-secondary btn-normal w-full md:w-[160px]' label={t('Cancel')} onClick={onCancelTechnicalManual}  title={`${t('Cancel')}`} />\n                        : <Button className='btn-secondary btn-normal w-full md:w-[160px]' label={t('Cancel')} onClick={props.onCloseAddForm}  title={`${t('Cancel')}`}  />\n                      }\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={technicalManualCropper} style={{ width: '50vw' }} onHide={() => setTechnicalManualCropper(false)} footer={() => dialogTechnicalManualActionConst()}>\n        {\n          technicalManualImage &&\n          <Cropper\n            ref={cropperTechnicalManualRef}\n            style={{ height: 400, width: '100%' }}\n            zoomTo={0.5}\n            aspectRatio={1}\n            preview=\".img-preview\"\n            src={technicalManualImage}\n            viewMode={1}\n            minCropBoxHeight={10}\n            minCropBoxWidth={10}\n            background={false}\n            responsive={true}\n            autoCropArea={1}\n            checkOrientation={false}\n            guides={true}\n            cropBoxResizable={false}\n          />\n        }\n      </Dialog>\n    </>\n  )\n}\n\nexport default AddEditTechnicalManualsGuides"],"names":["CREATE_MANUAL_CATEGORY","gql","_templateObject","_taggedTemplateLiteral","UPDATE_MANUAL_CATEGORY","_templateObject2","DELETE_MANUAL_CATEGORY","_templateObject3","GET_MANUAL_CATEGORIES_PAGINATION","GET_PARENT_CATEGORIES","GET_MANUAL_CATEGORIES_ID","GET_PARENT_MANUAL_CATEGORIES_ID","_templateObject4","props","_formik$values","params","useParams","createManual","useMutation","updateManual","refetch","useQuery","variables","manualCategoryId","id","skip","addTechnicalManualValidationSchema","useValidation","isRoleModelShow","setIsRoleModelShow","useState","addClass","setAddClass","isEditTechnicalManual","setIsEditTechnicalManual","technicalManualImage","setTechnicalManualImage","cropperTechnicalManualRef","createRef","technicalManualCropper","setTechnicalManualCropper","technicalManualFileInputRef","useRef","imageTechnicalManualLoader","setTechnicalManualImageLoader","formik","useFormik","initialValues","name","description","image_url","parent_id","validationSchema","onSubmit","async","onData","uuid","manualCategoryData","values","categoryId","String","then","res","_data$updateManualCat","data","toast","success","updateManualCategory","message","resetForm","dataRefetch","onCancelTechnicalManual","onCloseAddForm","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","error","networkError","result","errors","_data$createManualCat","createManualCategory","useEffect","_props$onData","e","handleTechnicalManualLogo","useCallback","preventDefault","files","target","length","file","type","startsWith","size","reader","FileReader","onload","readAsDataURL","current","value","getErrorTechnicalMessage","fieldName","touched","_props$onData2","setValues","OnTechnicalManualBlur","setFieldValue","whiteSpaceRemover","dialogTechnicalManualActionConst","_jsxs","className","children","_jsx","Button","label","onClick","title","concat","t","disabled","_cropperTechnicalManu","cropper","_cropperTechnicalManu2","fileName","DATA_URL_TO_FILE","getCroppedCanvas","toDataURL","formData","FormData","append","uploadImage","getTechnicalManualCropData","_Fragment","tabIndex","Cross","handleSubmit","htmlFor","src","process","alt","logo","accept","onChange","ref","Camera","TextInput","onBlur","placeholder","required","handleChange","Dialog","header","visible","style","width","onHide","footer","Cropper","height","zoomTo","aspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","guides","cropBoxResizable"],"sourceRoot":""}