{"version":3,"file":"static/js/5797.d2539bea.chunk.js","mappings":"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","sources":["components/breadcrumb/breadcrumb.tsx","components/header/updatedHeader.tsx","framework/graphql/queries/location.ts","framework/graphql/queries/diversionContractor.ts","views/diversionContractors/index.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Breadcrumb = () => {\n\tconst { t } = useTranslation();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst { id } = useParams();\n\tconst { userProfileData } = useSelector(\n\t\t(state: { userProfile: { userProfileData: UserProfileType; } }) => state.userProfile,\n\t);\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? '';\n\n\t\n\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2]?.includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0]?.toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0]?.toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst thirdLevelLink = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\tmodulePath = data?.replace(/-|\\s/g, ' ');\n\t\t\tconst splitPathName = modulePath.split(' ');\n\t\t\tfor (let i = 0; i < splitPathName.length; i++) {\n\t\t\t\tsplitPathName[i] = splitPathName[i][0].toUpperCase() + splitPathName[i].substring(1); // Use substring instead of substr\n\t\t\t}\n\t\t\tmodulePath = splitPathName.join(' ');\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' '; // Using slice as you did previously\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst removeID = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' ';\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst urlArray = location.pathname.split('/');\n\n\tconst breadcrumbLinks = useCallback(() => {\n\t\tif (urlArray?.length > 0) {\n\t\t\tconst length = urlArray?.length\n\t\t\tif (length < 4) {\n\t\t\t\treturn (\n\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 5) {\n\t\t\t\tif (urlArray[3] !== '') {\n\t\t\t\t\tif (urlArray[3].length > 32) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{!removeID(urlArray[3]) &&\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(removeID(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 6) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 7) {\n\t\t\t\tlet uuidData = ''\n\t\t\t\tif (uuid) {\n\t\t\t\t\tuuidData = `?uuid=${uuid}`;\n\t\t\t\t} else if (id) {\n\t\t\t\t\tuuidData = `?uuid=${id}`;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[2]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}/${urlArray[3]}/${(uuid !== '' || id !== '') && uuidData}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[3]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[5] && `${t(thirdLevelLink(urlArray[4]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}, [urlArray]);\n\n\treturn (\n\t\t<div className='w-full'>\n\t\t\t<p className='max-xs:text-xs text-xs-14 max-md:truncate'>\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`)} className='cursor-pointer text-light-grey hover:underline'>\n\t\t\t\t\t\t{t('Home')}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<span className='mx-2 text-light-grey'>{'>'}</span>\n\t\t\t\t</span>\n\n\t\t\t\t{breadcrumbLinks()}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Breadcrumb);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport Breadcrumb from '@components/breadcrumb/breadcrumb';\nimport { HamburgerMenu } from '@components/icons/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShow } from 'src/redux/courses-management-slice';\n\ninterface UpdatedHeaderProps {\n\theaderActionConst?: any,\n\theaderTitle?: string,\n}\n\nconst UpdatedHeader = ({ headerActionConst, headerTitle }: UpdatedHeaderProps) => {\n\tconst { t } = useTranslation();\n\tconst dispatch = useDispatch();\n\tconst { show } = useSelector(((state: { coursesManagement: { show: boolean } }) => state.coursesManagement));\n\n\tconst location = useLocation();\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2].includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0].toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0].toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst onRenderJsxElement = () => {\n\t\tif (headerActionConst) {\n\t\t\treturn (headerActionConst())\n\t\t}\n\t}\n\n\tconst OnClickHandler = useCallback(() => {\n\t\tdispatch(setShow(!show))\n\t}, [show]);\n\n\treturn (\n\t\t<header className='sticky top-0 z-20 flex bg-white border-b shadow-header xl:shadow-none xl:h-auto xl:block border-border-primary xl:px-2 xl:pt-0'>\n\t\t\t<div onClick={OnClickHandler} className='pt-5 cursor-pointer text-xl-22 xl:hidden'>\n\t\t\t\t<HamburgerMenu className='ml-4' />\n\t\t\t</div>\n\t\t\t<div className='p-2.5 xl:p-[18px] xl:shadow-header max-xl:w-[calc(100%-47px)]'>\n\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-2.5'>\n\t\t\t\t\t<div className='w-full xl:w-auto'>\n\t\t\t\t\t\t<h1 className='mb-1 text-2xl max-xl:truncate xl:text-3xl'>{t(headerTitle ?? moduleName(location.pathname))}</h1>\n\t\t\t\t\t\t<Breadcrumb />\n\t\t\t\t\t</div>\n\t\t\t\t\t{headerActionConst &&\n\t\t\t\t\t\t<div className='flex gap-2.5 max-xl:w-[calc(100%+40px)] lg:gap-5'>\n\t\t\t\t\t\t\t{onRenderJsxElement()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default UpdatedHeader;\n","import { gql } from '@apollo/client';\n\nexport const GET_LOCATION = gql`\nquery GetLocationsWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $citySearch: String!, $locationSearch: String!) {\n  getLocationsWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, citySearch: $citySearch, locationSearch: $locationSearch) {\n    message\n    data {\n      location {\n        uuid\n        location\n        city\n        zoneCount\n      }\n      count\n    }\n  }\n}`\n\nexport const GET_ALL_LOCATIONS = gql`query GetLocations {\n  getLocations {\n    message\n    data {\n      uuid\n      location\n      city\n      diversion_percentage\n      zoneCount\n    }\n  }\n}`;\n","import { gql } from '@apollo/client';\n\nexport const GET_DIVERSION_CONTRACTOR_WITH_PAGINATION = gql`query GetDiversionContractorsWithPagination($locationId: String!, $sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getDiversionContractorsWithPagination(locationId: $locationId, sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        count\n        diversionContractors {\n          uuid\n          subscriber {\n            uuid\n          }\n          location {\n            uuid\n            location\n          }\n          contractor_company {\n            name\n            uuid\n          }\n          service_count\n        }\n      }\n    }\n  }`;","import React, { useCallback, useEffect, useState } from 'react';\nimport DropDown from '@components/dropdown/dropDown';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { ArrowSortingDown, ArrowSortingUp,  Edit,  GetDefaultIcon, Map,  } from '@components/icons/icons';\nimport { ColArrType, DropdownOptionType } from '@types';\nimport { useTranslation } from 'react-i18next';\nimport {  PAGE_LIMIT, PAGE_NUMBER,  ROUTES,  SHOW_PAGE_COUNT_ARR, USER_TYPE,  } from '@config/constant';\nimport Pagination from '@components/Pagination/Pagination';\nimport filterServiceProps from '@components/filter/filter';\nimport { GET_ALL_LOCATIONS } from '@framework/graphql/queries/location';\nimport {  useQuery } from '@apollo/client';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { GET_DIVERSION_CONTRACTOR_WITH_PAGINATION } from '@framework/graphql/queries/diversionContractor';\nimport { DiversionContractorType,  setDiversionContractorData } from 'src/redux/diversion-contractor-slice';\nimport { DiversionContractorDataArr } from 'src/types/diversionContractors';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nexport type GetAllLocations ={\n    uuid:string;\n    location:string;\n}\n\n\nconst DiversionContractorList = () => {\n    const { t } = useTranslation();\n    const Navigate = useNavigate();\n    const [branchDrpData, setBranchDrpData] = useState<DropdownOptionType[]>([]);\n    const { userProfileData:userData } = useSelector(((state: { userProfile: { userProfileData:UserProfileType  } }) => state.userProfile));\n    const { data: getAllLocations, loading } = useQuery(GET_ALL_LOCATIONS, { fetchPolicy: 'network-only',skip:(userData?.getProfile?.data?.user_type ===USER_TYPE.SUPER_ADMIN)});\n    const contractorsDetails = useSelector(((state:{diversionContractors:DiversionContractorType})=>state.diversionContractors));\n    const dispatch = useDispatch();\n    const [filterData, setFilterData] = useState({\n        limit: PAGE_LIMIT,\n        page: PAGE_NUMBER,\n        sortOrder: 'descend',\n        search: '',\n        sortField: 'createdAt',\n        locationId:'',\n        index: 0\n    });\n    const { refetch: refetchContractorsList } = useQuery(GET_DIVERSION_CONTRACTOR_WITH_PAGINATION, {\n        fetchPolicy: 'network-only' ,skip :true ,\n    });\n\n    /**\n     * Method used set dropdown data for location\n     */\n    useEffect(() => {\n        if (getAllLocations?.getLocations?.data&&userData?.getProfile?.data?.user_type &&userData?.getProfile?.data?.user_type ===USER_TYPE.SUBSCRIBER_ADMIN) {\n            setBranchDrpData(getAllLocations?.getLocations?.data?.map((data: GetAllLocations) => {\n                return { name: data?.location, key: data?.uuid, uuid: data?.uuid }\n            }));\n            setFilterData((prev)=>{\n                return {...prev,locationId:getAllLocations?.getLocations?.data[0]?.uuid}\n            });\n            refetchContractorsList({\n                limit: PAGE_LIMIT,\n                page: PAGE_NUMBER,\n                sortOrder: 'descend',\n                search: '',\n                sortField: 'createdAt',\n                locationId:getAllLocations?.getLocations?.data[0]?.uuid,\n            }).then((res)=>{\n                dispatch(setDiversionContractorData(res?.data?.getDiversionContractorsWithPagination?.data))\n              \n            }).catch((err)=>toast.error(err?.networkError?.result?.errors[0]?.message));\n            \n        }\n        if(getAllLocations?.getLocations?.data&&userData?.getProfile?.data?.user_type &&userData?.getProfile?.data?.user_type !==USER_TYPE.SUBSCRIBER_ADMIN){\n            setBranchDrpData(getAllLocations?.getLocations?.data?.map((data: GetAllLocations) => {\n                return { name: data?.location, key: data?.uuid, uuid: data?.uuid }\n            }));\n            setFilterData({\n                   ...filterData,\n                    locationId:userData?.getProfile?.data?.branch_locations[0]?.uuid,\n            })\n            refetchContractorsList({\n                limit: PAGE_LIMIT,\n                page: PAGE_NUMBER,\n                sortOrder: 'descend',\n                search: '',\n                sortField: 'createdAt',\n                locationId:userData?.getProfile?.data?.branch_locations[0]?.uuid,\n            }).then((res)=>{\n                dispatch(setDiversionContractorData(res?.data?.getDiversionContractorsWithPagination?.data))\n\n            }).catch((err)=>toast.error(err?.networkError?.result?.errors[0]?.message));\n        }\n    }, [getAllLocations?.getLocations,userData]);\n\n    const [recordsPerPage, setRecordsPerPage] = useState<number>(filterData.limit);\n    const totalService =  contractorsDetails?.contractorData?.count ?? 0;\n    const totalPages = Math.ceil(totalService / recordsPerPage);\n\n    /**\n     * Method used to change the page \n     */\n    const handlePageChange = useCallback((newPage: number): void => {\n        const updatedFilterData = {\n            ...filterData,\n            page: newPage,\n            index: (newPage - 1) * filterData.limit,\n        };\n        setFilterData(updatedFilterData);  \n        refetchContractorsList({\n            limit: filterData?.limit,\n            page: newPage,\n            sortOrder: filterData?.sortOrder,\n            sortField: filterData?.sortField,\n            locationId:filterData?.locationId,\n        }).then((res)=>{\n            dispatch(setDiversionContractorData(res?.data?.getDiversionContractorsWithPagination?.data))\n        }).catch((err)=>toast.error(err?.networkError?.result?.errors[0]?.message));\n\n        filterServiceProps.saveState('filterDiversionReport', JSON.stringify(updatedFilterData));\n    }, [filterData.limit]);\n\n\n    /**\n     * Method sets records per page in filter data when ever it changes\n     */\n    useEffect(() => {\n        setRecordsPerPage(filterData.limit);\n    }, [filterData.limit]);\n\n    const COL_ARR_SERVICE = [\n        { name: t('Sr.No'), sortable: false },\n        { name: t('Title'), sortable: false,fieldName:'contractor_company.name' },\n        { name: t('Services Count'), sortable: false, fieldName: 'service_count' },\n    ] as ColArrType[];\n\n    /**\n     * @param sortFieldName Method used for storing sort data\n     */\n    const onHandleSortDiversionContractor = (sortFieldName: string) => {\n        setFilterData({\n            ...filterData,\n            sortField: sortFieldName,\n            sortOrder: filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n        });\n        refetchContractorsList({\n            limit: filterData?.limit,\n            page: filterData?.page,\n            sortOrder:filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n            sortField:sortFieldName,\n            locationId:filterData?.locationId,\n        }).then((res)=>{\n            dispatch(setDiversionContractorData(res?.data?.getDiversionContractorsWithPagination?.data))\n\n        }).catch((err)=>toast.error(err?.networkError?.result?.errors[0]?.message));\n    };\n\n    /**\n    * @param e Method used for change dropdown for page limit\n    */\n    const onPageDrpSelectDiversionContrctor = (e: string) => {\n        setRecordsPerPage(Number(e))\n        const updatedFilterData = {\n            ...filterData,\n            limit: parseInt(e),\n            page: 1,\n            search: '',\n            index: 0,\n        };\n        \n        refetchContractorsList({\n            limit: parseInt(e),\n            page: 1,\n            sortOrder:filterData.sortOrder ,\n            sortField:filterData?.sortField,\n            locationId:filterData?.locationId,\n        }).then((res)=>{\n            dispatch(setDiversionContractorData(res?.data?.getDiversionContractorsWithPagination?.data))\n\n        }).catch((err)=>toast.error(err?.networkError?.result?.errors[0]?.message));\n\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState('filterDiversionReport', JSON.stringify(updatedFilterData));\n    };\n\n\n    /**\n     * Method used to navigate to diversion report page update the diversion report \n     */\n    const onEditDiversionContractor = useCallback((data:DiversionContractorDataArr) => {\n        Navigate(`/${ROUTES.app}/${ROUTES.diversionContractor}/${ROUTES.createDiversionReport}/?locationId=${data?.location?.uuid}&companyId=${data?.contractor_company?.uuid}&companyName=${data?.contractor_company?.name}`);\n    }, []);\n\n    const onChangeLocation =useCallback((e:React.ChangeEvent<HTMLSelectElement>)=>{\n        setFilterData((prev)=>{\n            return{...prev,\n            locationId:e.target.value}\n        })\n        refetchContractorsList({\n            ...filterData,\n            locationId:e.target.value\n        }).then((res)=>{\n            dispatch(setDiversionContractorData(res?.data?.getDiversionContractorsWithPagination?.data));\n        }).catch((err)=>toast.error(err?.networkError?.result?.errors[0]?.message));\n    },[]);\n\n    /**\n     * Method that provides header content\n     * @returns React Element\n     */\n    const headerActionConst = () => {\n        return (\n            <>\n                {\n                    <div className={`flex w-full gap-3 xmd:gap-5 lg:w-auto ${loading ? 'pointer-events-none' : ''}`}>\n                        <DropDown className='w-[212px] -mt-2 max-md:mr-2' label='' inputIcon={<Map fontSize='18' />} name='diversionReportTemplateData.location_id' onChange={onChangeLocation} value={filterData?.locationId} options={branchDrpData} id='userLocation' disabled={userData?.getProfile?.data?.user_type !== USER_TYPE.SUBSCRIBER_ADMIN} />\n                    </div>\n                }\n            </>\n        )\n    };\n\n    return (\n        <>\n            <UpdatedHeader headerActionConst={headerActionConst} />\n            <div className='mb-3 bg-white rounded-xl overflow-auto border border-[#c8ced3] mx-7 p-3 md:p-5'>\n                <div className='flex flex-col justify-between gap-3 mb-3 sm:gap-5 md:mb-5 btn-group sm:flex-row'>\n                    <h6 className='w-full leading-7 xmd:w-auto'>{t('Contractors')}</h6>\n                </div>\n                <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                    <table>\n                        <thead >\n                            <tr>\n                                {COL_ARR_SERVICE?.map((colValUser: ColArrType) => {\n                                    return (\n                                        <th scope='col' key={colValUser.name}>\n                                            <div className={`flex items-center ${['service_count'].includes(colValUser.fieldName)? 'justify-center' : ''}`}>\n                                                {colValUser.name}\n                                                {colValUser.sortable && (\n                                                    <button onClick={() => onHandleSortDiversionContractor(colValUser.fieldName)}>\n                                                        {(filterData.sortOrder === '' || filterData.sortField !== colValUser.fieldName) &&\n                                                            <GetDefaultIcon className='w-3 h-3 ml-1 fill-white' />}\n                                                        {filterData.sortOrder === 'ascend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingUp className=\"ml-1 fill-white\" />}\n                                                        {filterData.sortOrder === 'descend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingDown className=\"ml-1 fill-white\" />}\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </th>\n                                    );\n                                })}\n                                <th scope='col'>\n                                    <div className='flex items-center'>{t('Action')}</div>\n                                </th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                               {contractorsDetails?.contractorData?.diversionContractors?.map((data:DiversionContractorDataArr,index:number)=>{\n                                   const displayIndex = filterData?.index + index + 1;\n                                return (<tr key={data?.uuid}>\n                                    <td className='text-left'>{displayIndex}</td>\n                                    <td className='text-left'>{data?.contractor_company?.name}</td>\n                                    <td className='text-center'>{data?.service_count}</td>\n                                    <td className='text-left'>\n                                        <div className='btn-group'>\n                                        <button type=\"button\" className='btn bg-transparent cursor-pointer btn-default' onClick={() => onEditDiversionContractor(data)}  ><Edit /></button>\n                                            {/* <EditBtnPopup data={data} setData={setDiversionContractorObj} onClick={() => onEditDiversionContractor(data)} /> */}\n                                            {/* <EditBtn data={data} onClick={() => onEditDiversionContractor(data)} /> */}\n                                            {/* <DeleteBtn data={data} setObj={setDiversionContractorObj} setIsDelete={setIsDeleteDiversionContractor} /> */}\n                                        </div>\n                                    </td>\n                                </tr>)\n                               }) }\n                        </tbody>\n                    </table>\n                    {(contractorsDetails?.contractorData?.count === 0 ||\n                        contractorsDetails?.contractorData?.count === null) && (\n                            <div className='flex justify-center'>\n                                <div>{t('No Data')}</div>\n                            </div>\n                        )}\n                </div>\n                <div className='flex flex-wrap items-center mt-2'>\n                    <div className='flex items-center mr-3 md:mr-7'>\n                        <span className='text-sm font-normal text-gray-700 whitespace-nowrap '>\n                            {t('Per Page')}\n                        </span>\n                        <select value={filterData.limit} className='border border-border-primary rounded-xl ml-2 px-3 text-sm py-1.5 text-gray-500 w-[70px] h-[36px] appearance-none bg-white' onChange={(e) => onPageDrpSelectDiversionContrctor(e.target.value)} >\n                            {SHOW_PAGE_COUNT_ARR?.map((item: number) => {\n                                return <option key={item}>{item}</option>;\n                            })}\n                        </select>\n                    </div>\n                    <Pagination currentPage={filterData.page}\n                        totalPages={totalPages}\n                        onPageChange={handlePageChange}\n                        recordsPerPage={recordsPerPage}\n                    />\n                </div>\n                \n            </div>\n        </>\n    );\n}\n\nexport default DiversionContractorList;\n"],"names":["Breadcrumb","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","location","useLocation","uuid","URLSearchParams","search","get","id","useParams","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","moduleName","pathname","_pathname$split$","modulePath","split","includes","forEach","i","_i$","toUpperCase","slice","_pathname$split$2$","thirdLevelLink","replace","splitPathName","length","substring","join","_data$","removeID","_data$2","urlArray","breadcrumbLinks","useCallback","_jsx","className","children","concat","_jsxs","_Fragment","NavLink","to","ROUTES","app","uuidData","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","React","_ref","headerActionConst","headerTitle","dispatch","useDispatch","show","coursesManagement","OnClickHandler","setShow","onClick","HamburgerMenu","onRenderJsxElement","GET_LOCATION","gql","_templateObject","_taggedTemplateLiteral","GET_ALL_LOCATIONS","_templateObject2","GET_DIVERSION_CONTRACTOR_WITH_PAGINATION","DiversionContractorList","_userData$getProfile","_userData$getProfile$","_contractorsDetails$c","_contractorsDetails$c2","_contractorsDetails$c3","_contractorsDetails$c4","_contractorsDetails$c5","_contractorsDetails$c6","Navigate","useNavigate","branchDrpData","setBranchDrpData","useState","userData","getAllLocations","loading","useQuery","fetchPolicy","skip","contractorsDetails","diversionContractors","filterData","setFilterData","limit","PAGE_LIMIT","page","PAGE_NUMBER","sortOrder","sortField","locationId","index","refetch","refetchContractorsList","useEffect","_getAllLocations$getL","_userData$getProfile2","_userData$getProfile3","_userData$getProfile4","_userData$getProfile5","_getAllLocations$getL8","_userData$getProfile6","_userData$getProfile7","_userData$getProfile8","_userData$getProfile9","_getAllLocations$getL2","_getAllLocations$getL3","_getAllLocations$getL6","_getAllLocations$getL7","_getAllLocations$getL9","_getAllLocations$getL10","_userData$getProfile10","_userData$getProfile11","_userData$getProfile12","_userData$getProfile13","_userData$getProfile14","_userData$getProfile15","getLocations","SUBSCRIBER_ADMIN","map","name","key","prev","_getAllLocations$getL4","_getAllLocations$getL5","then","res","_res$data","_res$data$getDiversio","setDiversionContractorData","getDiversionContractorsWithPagination","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","toast","error","networkError","result","errors","message","branch_locations","_res$data2","_res$data2$getDiversi","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","recordsPerPage","setRecordsPerPage","totalService","contractorData","count","totalPages","Math","ceil","handlePageChange","newPage","updatedFilterData","_res$data3","_res$data3$getDiversi","_err$networkError3","_err$networkError3$re","_err$networkError3$re2","filterServiceProps","saveState","JSON","stringify","COL_ARR_SERVICE","sortable","fieldName","onEditDiversionContractor","_data$location","_data$contractor_comp","_data$contractor_comp2","diversionContractor","createDiversionReport","contractor_company","onChangeLocation","e","target","value","_res$data6","_res$data6$getDiversi","_err$networkError6","_err$networkError6$re","_err$networkError6$re2","UpdatedHeader","_userData$getProfile16","_userData$getProfile17","DropDown","label","inputIcon","Map","fontSize","onChange","options","disabled","colValUser","scope","onHandleSortDiversionContractor","sortFieldName","_res$data4","_res$data4$getDiversi","_err$networkError4","_err$networkError4$re","_err$networkError4$re2","GetDefaultIcon","ArrowSortingUp","ArrowSortingDown","_data$contractor_comp3","displayIndex","service_count","type","Edit","Number","parseInt","_res$data5","_res$data5$getDiversi","_err$networkError5","_err$networkError5$re","_err$networkError5$re2","onPageDrpSelectDiversionContrctor","SHOW_PAGE_COUNT_ARR","item","Pagination","currentPage","onPageChange"],"sourceRoot":""}