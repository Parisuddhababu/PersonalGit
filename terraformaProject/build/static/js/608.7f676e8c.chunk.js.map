{"version":3,"file":"static/js/608.7f676e8c.chunk.js","mappings":"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","sources":["framework/graphql/mutations/titlePage.ts","framework/graphql/queries/titlePage.ts","components/landingPageTab/title.tsx","components/landingPageTab/TitleSubtitle.tsx","framework/graphql/queries/manaeSteps.ts","framework/graphql/mutations/services.ts","components/landingPageTab/services.tsx","framework/graphql/queries/aboutUs.ts","framework/graphql/mutations/about.ts","components/landingPageTab/aboutUs.tsx","framework/graphql/queries/manageClient.ts","framework/graphql/mutations/manageClient.ts","components/landingPageTab/ourClient.tsx","framework/graphql/queries/service.ts","framework/graphql/mutations/wasteCollection.ts","components/landingPageTab/wasteCollection.tsx","framework/graphql/mutations/count.ts","framework/graphql/queries/count.ts","components/landingPageTab/companyRating.tsx","framework/graphql/mutations/whyChooseUs.ts","framework/graphql/queries/whyChooseUs.ts","components/landingPageTab/whyChooseUs.tsx","framework/graphql/queries/aboutCourse.ts","framework/graphql/mutations/aboutCourse.ts","components/landingPageTab/aboutCourses.tsx","framework/graphql/queries/testimonial.ts","framework/graphql/mutations/testimonial.ts","components/landingPageTab/testimonials.tsx","framework/graphql/queries/plan.ts","framework/graphql/mutations/plan.ts","components/landingPageTab/subscriptionPlan.tsx","framework/graphql/queries/tag.ts","framework/graphql/mutations/tag.ts","components/landingPageTab/tag.tsx","views/landingPageManagement/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const UPDATE_TITLE = gql`\nmutation UpdateTitleForWebsite($inputData: UpdateLandingPageTitleDto!) {\n    updateTitleForWebsite(inputData: $inputData) {\n      message\n    }\n  }`\n\n  export const UPDATE_SUBTITLE = gql`\n  mutation UpdateSubtitleForWebsite($inputData: UpdateLandingPageSubtitleDto!) {\n    updateSubtitleForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","import { gql } from '@apollo/client';\nexport const GET_TITLE_WEBSITE = gql`\nquery GetTitleForWebsite {\n    getTitleForWebsite {\n      message\n      data {\n        uuid\n        title\n      }\n    }\n  }`\nexport const GET_SUBTITLE_WEBSITE = gql`\n  query GetSubtitleForWebsite {\n    getSubtitleForWebsite {\n      message\n      data {\n        uuid\n        title\n      }\n    }\n  }`","import React, { useEffect } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { UPDATE_SUBTITLE, UPDATE_TITLE } from '@framework/graphql/mutations/titlePage';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { GET_SUBTITLE_WEBSITE, GET_TITLE_WEBSITE } from '@framework/graphql/queries/titlePage';\nimport useValidation from '@framework/hooks/validations';\n\nfunction TitlePage() {\n    const { t } = useTranslation();\n\tconst [changeTitle] = useMutation(UPDATE_TITLE);\n    const [changeSubTitle] = useMutation(UPDATE_SUBTITLE);\n    const { data , refetch } = useQuery(GET_TITLE_WEBSITE);\n    const { data:subtitleData , refetch:subtitleRefetch } = useQuery(GET_SUBTITLE_WEBSITE)\n    const { changeTitleSubTitle } = useValidation();\n    const initialValues = {\n\t\ttitle: '',\n        subtitle:''\n\t};\n    const formik = useFormik({\n        validationSchema: changeTitleSubTitle,\n\t\tinitialValues,\n\t\tonSubmit: async (values) => {\n\t\t\tif(data?.getTitleForWebsite?.data){\n                changeTitle({\n                    variables: {\n                        inputData: {\n                            title: values?.title,\n                        }\n                    },\n                })\n                    .then((response) => {\n                        toast.success(response?.data?.updateTitleForWebsite?.message);\n                        formik.resetForm()\n                        refetch()\n                    })\n                    .catch((error) => {\n                        toast.error(error.networkError.result.errors[0].message);\n                    });\n            }\n            if(subtitleData?.getSubtitleForWebsite?.data)\n            {\n                changeSubTitle({\n                    variables: {\n                        inputData: {\n                            title: values?.subtitle,\n                        }\n                    },\n                })\n                    .then((response) => {\n                        toast.success(response?.data?.updateTitleForWebsite?.message);\n                        formik.resetForm()\n                        subtitleRefetch()\n                    })\n                    .catch((error) => {\n                        toast.error(error.networkError.result.errors[0].message);\n                    });\n            }\n      \n\t\t},\n\t});\n\n    useEffect(() => {\n\t\tif (data?.getTitleForWebsite?.data && subtitleData?.getSubtitleForWebsite?.data) {\n\t\t\tconst userTitle = data?.getTitleForWebsite?.data;\n            const userSubTitle = subtitleData?.getSubtitleForWebsite?.data\n \t\t\tformik.resetForm({\n\t\t\t\tvalues: {\n\t\t\t\t\ttitle: userTitle?.title,\n                    subtitle:userSubTitle?.title\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [data]);\n\n\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} id='title' name='title' value={formik.values.title} onChange={formik.handleChange} error={formik.errors.title}/>\n                </div>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Sub Title')} label={'Sub Title'} required={true} id='subtitle' name='subtitle' value={formik.values.subtitle} onChange={formik.handleChange} error={formik.errors.subtitle} />\n                </div>\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={formik.handleSubmit}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default TitlePage;\n","import React from 'react'\nimport TitlePage from './title';\n\nfunction Title() {\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <TitlePage/>\n        </div>\n    )\n}\n\nexport default Title;\n","import { gql } from '@apollo/client';\n\nexport const MANAGE_STEPS = gql`\nquery GetStepsForWebsite {\n    getStepsForWebsite {\n      message\n      data {\n        uuid\n        title\n        image\n        description\n        order\n      }\n    }\n  }`","import { gql } from '@apollo/client';\n\nexport const UPDATE_SERVICES=gql`\nmutation UpdateStepDetailsForWebsite($inputData: UpdateLandingPageStepDto!) {\n    updateStepDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef, useCallback, useEffect, useRef, useState } from 'react'\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { Cropper, ReactCropperElement } from 'react-cropper';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { Dialog } from 'primereact/dialog';\nimport 'cropperjs/dist/cropper.css';\nimport Button from '@components/button/button';\nimport logo from '@assets/images/sidebar-logo.png'\nimport TextInput from '@components/textInput/TextInput';\nimport { Camera, Cross } from '@components/icons/icons';\nimport { MANAGE_STEPS } from '@framework/graphql/queries/manaeSteps';\nimport { UPDATE_SERVICES } from '@framework/graphql/mutations/services';\nimport { IMAGE_BASE_URL, API_MEDIA_END_POINT, DATA_URL_TO_FILE, MAX_FILE_SIZE, uploadImage } from '@config/constant';\nimport useValidation from '@framework/hooks/validations';\ninterface Service {\n    description: string;\n    image: string;\n    order: number;\n    title: string;\n    uuid: string;\n    __typename?: string;\n}\n\nfunction Services() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(MANAGE_STEPS);\n    const [image, setImage] = useState(logo);\n    const [cropDataLandingServiceIndex, setCropLandingServiceDataIndex] = useState(0);\n    const [landingServiceCropper, setLandingServiceCropper] = useState(false);\n    const [landingServiceLoading, setLandingServiceLoading] = useState<boolean>(false);\n    const [changeServices] = useMutation(UPDATE_SERVICES);\n    const landingServiceFileInputRef = useRef<HTMLInputElement | null>(null);\n    const cropperLandingServiceRef = createRef<ReactCropperElement>();\n    const { changeServicesValidationSchema } = useValidation();\n    const landingServiceInitialValues: { services: Service[] } = {\n        services: [\n            {\n                description: '',\n                image: '',\n                order: 0,\n                title: '',\n                uuid: '',\n            },\n        ],\n    };\n\n    useEffect(() => {\n        if (data?.getStepsForWebsite?.data?.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const cleanedServices: Service[] = data?.getStepsForWebsite?.data.map(({ __typename, ...rest }: Service) => rest);\n            formik.setFieldValue('services', cleanedServices);\n        }\n    }, [data]);\n\n    const formik = useFormik({\n        validationSchema: changeServicesValidationSchema,\n        initialValues: landingServiceInitialValues,\n        onSubmit: async (values) => {\n            const apiPromises = values.services.map((service) => {\n                return changeServices({\n                    variables: {\n                        inputData: service\n                    },\n                });\n            });\n            try {\n                const responses = await Promise.all(apiPromises);\n                toast.success(responses[0]?.data?.updateStepDetailsForWebsite?.message);\n                refetch();\n            } catch (error: any) {\n                toast.error(error?.networkError?.result?.errors[0]?.message);\n            }\n        },\n    });\n\n    const onLadingServiceDeleteImage = useCallback(async (index: number): Promise<void> => {\n        const data = { fileName: formik.values.services[index].image };\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                formik.setFieldValue(`services[${index}].image`, '');\n            })\n            .catch((error) => {\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik]);\n\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const landingServiceHandleLogo = (e: any, index: number) => {\n        e.preventDefault();\n        setCropLandingServiceDataIndex(index);\n        let files;\n        if (e.dataTransfer) {\n            files = e.dataTransfer.files;\n        } else if (e.target) {\n            files = e.target.files;\n        }\n        if (files && files.length > 0) {\n            const file = files[0];\n            if (file.type.startsWith('image/')) {\n                if (file.size > MAX_FILE_SIZE) {\n                    toast.error('Image size must be less than 5MB');\n                } else {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        setImage(reader.result as any);\n                        setLandingServiceCropper(true);\n                    };\n                    reader.readAsDataURL(file);\n                }\n            } else {\n                toast.error('Please select a valid image file');\n            }\n        }\n        if (landingServiceFileInputRef.current) {\n            landingServiceFileInputRef.current.value = ''; // This clears the input field\n        }\n    };\n\n    const getLandingServiceCropData = async (): Promise<void> => {\n        if (typeof cropperLandingServiceRef.current?.cropper !== 'undefined') {\n            let fileName: string | null = null;\n            const file = DATA_URL_TO_FILE(cropperLandingServiceRef.current?.cropper.getCroppedCanvas().toDataURL(), `services[${cropDataLandingServiceIndex}].image.png`);\n            const formData = new FormData();\n            formData.append('image', file);\n            setLandingServiceLoading(true);\n            fileName = await uploadImage(formData,'website');\n            if (fileName) {\n                setLandingServiceLoading(false);\n                formik.setFieldValue(`services[${cropDataLandingServiceIndex}].image`, fileName);\n                setLandingServiceCropper(false);\n                setCropLandingServiceDataIndex(0);\n            }\n        }\n    };\n\n    const landingServiceDialogActionConst = () => {\n        return (\n            <div className='flex justify-end gap-3 md:gap-5'>\n                <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setLandingServiceCropper(false)}  title={`${t('Cancel')}`} />\n                <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getLandingServiceCropData()} disabled={landingServiceLoading}  title={`${t('Save')}`} />\n            </div>\n        )\n    }\n    const serviceErrors = formik?.errors?.services as any[];\n\n    return (\n        <div className='px-5 pt-2 pb-5'>\n            {formik?.values?.services?.map((serviceData: { image: string, title: string, description: string, uuid: string }, index: number) => (\n                <div key={serviceData?.uuid} className='mb-5'>\n                    <h4 className='mb-5'>{t(`Step ${index + 1}`)}:</h4>\n                    <div className='flex flex-wrap gap-x-5 gap-y-3'>\n                        <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                            <label htmlFor={`image-${index}`}>\n                                {t('Service Image')}\n                            </label>\n                            <div className='box-border border border-solid aspect-video border-border-primary rounded-xl relative flex flex-col items-center justify-center overflow-hidden'>\n                                <label\n                                    htmlFor={`image-${index}`}\n                                    className='relative flex flex-col h-full w-full items-center justify-center'>\n                                    <div className='flex items-center justify-center overflow-hidden border border-solid w-full h-full cursor-pointer border-border-primary'>\n                                        <img src={serviceData?.image?.includes(IMAGE_BASE_URL) ? serviceData.image : IMAGE_BASE_URL + serviceData.image} alt='service_image' className='object-contain w-full h-full bg-black' />\n                                    </div>\n                                    <input\n                                        type='file'\n                                        multiple\n                                        className='focus:bg-transparent absolute top-1/2 opacity-0'\n                                        accept='image/*'\n                                        id={`image-${index}`}\n                                        name={`services[${index}].image`}\n                                        ref={landingServiceFileInputRef}\n                                        onChange={(e) => landingServiceHandleLogo(e, index)}\n                                    />\n                                    <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                                </label>\n                                {serviceData.image &&\n                                    <Button className='absolute p-[6px] rounded-full cursor-pointer top-4 right-4 md:top-3 md:right-4 bg-error text-lg md:text-xl' type='button' label='' onClick={() => onLadingServiceDeleteImage(index)}  title={`${t('Close')}`} >\n                                        <Cross className='fill-white' />\n                                    </Button>\n                                }\n                            </div>\n                            {serviceErrors?.[index]?.image && formik.touched.services?.[index]?.image ? <p className='mt-2 error md:text-xs-15'>{t(serviceErrors?.[index]?.image)}</p> : ''}\n                        </div>\n                        <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                            <TextInput\n                                placeholder={t('Enter Service Title')}\n                                label={'Service Title'}\n                                required={true}\n                                name={`services[${index}].title`}\n                                id={`title-${index}`}\n                                onChange={formik.handleChange}\n                                value={serviceData.title}\n                                error={serviceErrors?.[index]?.title && formik.touched.services?.[index]?.title ? serviceErrors?.[index]?.title : ''}\n                            />\n                        </div>\n                        <div className='w-full 2xl:w-[calc(33.3%-13px)]'>\n                            <TextInput\n                                placeholder={t('Enter Service Description')}\n                                label={'Service Description'}\n                                required={true}\n                                name={`services[${index}].description`}\n                                id={`description-${index}`}\n                                onChange={formik.handleChange}\n                                value={serviceData.description}\n                                error={serviceErrors?.[index]?.description && formik.touched.services?.[index]?.description ? serviceErrors?.[index]?.description : ''}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ))}\n\n            <div className='flex'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n\n            <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={landingServiceCropper} style={{ width: '50vw', borderRadius: '12px' }} onHide={() => setLandingServiceCropper(false)} footer={() => landingServiceDialogActionConst()}>\n                {\n                    image &&\n                    <Cropper\n                        ref={cropperLandingServiceRef}\n                        style={{ height: 400, width: '100%' }}\n                        zoomTo={0.5}\n                        // aspectRatio={1}\n                        preview=\".img-preview\"\n                        src={image}\n                        viewMode={1}\n                        minCropBoxHeight={10}\n                        minCropBoxWidth={10}\n                        background={false}\n                        responsive={true}\n                        autoCropArea={1}\n                        checkOrientation={false}\n                        guides={true}\n                        cropBoxResizable={true}\n                    />\n                }\n            </Dialog>\n        </div>\n    );\n}\n\nexport default Services;\n","import { gql } from '@apollo/client';\nexport const GET_ABOUT_US = gql`\nquery GetAboutUsDetailsForWebsite {\n    getAboutUsDetailsForWebsite {\n      message\n      data {\n        uuid\n        title\n        order\n        description\n        image\n        landing_page_points {\n          uuid\n          title\n          order\n          type\n        }\n      }\n    }\n  }`","import { gql } from '@apollo/client';\n\nexport const UPDATE_ABOUT_US = gql`\nmutation UpdateAboutUsDetailsForWebsite($inputData: UpdateLandingPageAboutUsDto!) {\n    updateAboutUsDetailsForWebsite(inputData: $inputData) {\n      message\n     }\n  }`\n\nexport const UPDATE_ABOUT_US_POINT = gql`\n  mutation AddOrUpdateAboutUsPointForWebsite($inputData: UpdateLandingPagePointsDto!) {\n    addOrUpdateAboutUsPointForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { GET_ABOUT_US } from '@framework/graphql/queries/aboutUs';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { UPDATE_ABOUT_US, UPDATE_ABOUT_US_POINT } from '@framework/graphql/mutations/about';\nimport { toast } from 'react-toastify';\nimport useValidation from '@framework/hooks/validations';\ninterface About {\n    order: number;\n    title: string;\n    uuid: string;\n    __typename?: string;\n}\ninterface InitialValues {\n    title: string;\n    description: string;\n    order: number;\n    image: string;\n    uuid: string;\n    about: About[];\n}\nfunction AboutUs() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(GET_ABOUT_US);\n    const [updateAboutUs] = useMutation(UPDATE_ABOUT_US);\n    const [updateAboutUsPoint] = useMutation(UPDATE_ABOUT_US_POINT);\n    const { changeAboutUsValidationSchema } = useValidation();\n\n    const initialValues: InitialValues = {\n        title: '',\n        description: '',\n        order: 0,\n        image: '',\n        uuid: '',\n        about: [\n            {\n                title: '',\n                order: 0,\n                uuid: '',\n            },\n        ],\n    };\n\n    useEffect(() => {\n        if (data?.getAboutUsDetailsForWebsite?.data) {\n            const about = data?.getAboutUsDetailsForWebsite?.data;\n            const aboutDetails = data?.getAboutUsDetailsForWebsite?.data?.landing_page_points?.map((aboutDetail: { title: string, uuid: string, order: number }) => {\n                return {\n                    title: aboutDetail.title,\n                    order: aboutDetail?.order,\n                    uuid: aboutDetail.uuid,\n                };\n            });\n            formik.resetForm({\n                values: {\n                    title: about?.title,\n                    description: about?.description,\n                    order: about?.order,\n                    image: about?.image,\n                    uuid: about?.uuid,\n                    about: aboutDetails\n                }\n            });\n        }\n    }, [data?.getAboutUsDetailsForWebsite?.data]);\n\n    const handleCheckPoint = async () => {\n        const apiPromises = formik?.values?.about.map((service) => {\n            const inputData = {\n                uuid: service?.uuid,\n                title: service?.title,\n                order: service?.order,\n                landing_page_id: '',\n            };\n\n            return updateAboutUsPoint({\n                variables: {\n                    inputData: inputData,\n                },\n            });\n        });\n        try {\n            const responses = await Promise.all(apiPromises);\n            responses.forEach((response) => {\n                toast.success(response?.data?.updateTitleForWebsite?.message);\n            });\n            formik.resetForm();\n            refetch();\n        } catch (error: any) {\n            toast.error(error?.networkError?.result?.errors[0]?.message);\n        }\n    }\n    const formik = useFormik({\n        validationSchema: changeAboutUsValidationSchema,\n        initialValues,\n        onSubmit: async (values) => {\n            updateAboutUs({\n                variables: {\n                    inputData: {\n                        uuid: values?.uuid,\n                        title: values?.title,\n                        description: values?.description,\n                        image: values?.image,\n                        order: values?.order,\n                    }\n                },\n            })\n                .then((response) => {\n                    toast.success(response?.data?.updateAboutUsDetailsForWebsite?.message);\n                    formik.resetForm()\n                    handleCheckPoint()\n                    refetch()\n                })\n                .catch((error) => {\n                    toast.error(error.networkError.result.errors[0].message);\n                });\n        }\n    });\n\n    const aboutErrors = formik?.errors?.about as any[];\n\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} name='title' id='title' onChange={formik.handleChange} value={formik.values.title} error={formik?.errors?.title} />\n                </div>\n\n                <div className='w-full 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Description')} label={'Description'} required={true} name='description' id='description' onChange={formik.handleChange} value={formik?.values?.description} error={formik?.errors?.description}/>\n                </div>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Video Url')} label={'Video Url'} required={true} name='image' id='image' onChange={formik.handleChange} value={formik.values.image} error={formik?.errors?.image} />\n                </div>\n                <div className='w-full'>\n                    <label className='w-full'>{t('Check Points')}</label><label className='error'>*</label>\n                    <div className='flex flex-wrap gap-x-5 gap-y-3.5'>\n                        {formik?.values?.about.map((point: { title: string, uuid: string }, index: number) => {\n                            return (\n                                (\n                                    <div key={point?.uuid} className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                        <TextInput\n                                            placeholder={t(`Enter Check Points ${index + 1}`)}\n                                            required={true}\n                                            name={`about[${index}].title`}\n                                            value={point?.title}\n                                            onChange={formik?.handleChange}\n                                            id={`title-${index}`}\n                                            error={aboutErrors?.[index]?.title && formik.touched.about?.[index]?.title ? aboutErrors?.[index]?.title : ''}\n                \n                                        />\n                                    </div>\n                                )\n                            )\n                        })}\n                    </div>\n                </div>\n\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default AboutUs;\n","import { gql } from '@apollo/client';\n\nexport const CLIENT_DETAIL = gql`\nquery GetClientsForWebsite {\n    getClientsForWebsite {\n      message\n      data {\n        uuid\n        title\n        description\n        image\n        order\n        type\n      }\n    }\n  }`","import { gql } from '@apollo/client';\n\nexport const UPDATE_CLIENT=gql`\nmutation UpdateClientDetailsForWebsite($inputData: UpdateLandingPageClientDto!) {\n    updateClientDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef, useCallback, useEffect, useRef, useState } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { CLIENT_DETAIL } from '@framework/graphql/queries/manageClient';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { UPDATE_CLIENT } from '@framework/graphql/mutations/manageClient';\nimport logo from '@assets/images/sidebar-logo.png';\nimport { useFormik } from 'formik';\nimport { IMAGE_BASE_URL, API_MEDIA_END_POINT, DATA_URL_TO_FILE, MAX_FILE_SIZE, uploadImage } from '@config/constant';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Camera, Cross } from '@components/icons/icons';\nimport { Dialog } from 'primereact/dialog';\nimport 'cropperjs/dist/cropper.css';\nimport { Cropper, ReactCropperElement } from 'react-cropper';\nimport useValidation from '@framework/hooks/validations';\ninterface Client {\n    title?: string;\n    image: string;\n    uuid: string,\n    __typename?: string;\n}\n\nfunction OurClient() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(CLIENT_DETAIL);\n    const [ourClientImage, setOurClientImage] = useState(logo);\n    const [cropDataIndex, setCropDataIndex] = useState(0);\n    const [ourClientCropper, setOurClientCropper] = useState(false);\n    const ourClientCropperRef = createRef<ReactCropperElement>();\n    const ourClientFileInputRef = useRef<HTMLInputElement | null>(null);\n    const [ourClientLoading, setOurClientLoading] = useState<boolean>(false);\n    const [changeOurClientServices] = useMutation(UPDATE_CLIENT);\n    const { ClientValidationSchema } = useValidation();\n    const ourClientInitialValues: any = {\n        order: 0,\n        title: '',\n        uuid: '',\n        manageClient: [\n            {\n                image: '',\n                uuid: '',\n                title: ''\n            },\n        ],\n    };\n\n\n    const formik = useFormik({\n        validationSchema: ClientValidationSchema,\n        initialValues: ourClientInitialValues,\n        onSubmit: async (values) => {\n            const apiPromises = values?.manageClient.map((service: any) => {                \n                return changeOurClientServices({\n                    variables: {\n                        inputData: {\n                            ...service,\n                            title: values.title\n                        }\n                    },\n                });\n            });\n            try {\n                const responses = await Promise.all(apiPromises);                \n                toast.success(responses[0]?.data?.updateClientDetailsForWebsite?.message);\n                refetch();\n            } catch (error: any) {\n                toast.error(error?.networkError?.result?.errors[0]?.message);\n            }\n        },\n    });\n\n    const onOurClientDeleteImage = useCallback(async (index: number): Promise<void> => {\n        const data = { fileName: formik.values.manageClient[index].image };\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                formik.setFieldValue(`manageClient[${index}].image`, '');\n            })\n            .catch((error) => {\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik]);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleOurClientLogo = (e: any, index: number) => {\n        e.preventDefault();\n        setCropDataIndex(index);\n        let files;\n        if (e.dataTransfer) {\n            files = e.dataTransfer.files;\n        } else if (e.target) {\n            files = e.target.files;\n        }\n        if (files && files.length > 0) {\n            const file = files[0];\n            if (file.type.startsWith('image/')) {\n                if (file.size > MAX_FILE_SIZE) {\n                    toast.error('Image size must be less than 5MB');\n                } else {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        setOurClientImage(reader.result as any);\n                        setOurClientCropper(true);\n                    };\n                    reader.readAsDataURL(file);\n                }\n            } else {\n                toast.error('Please select a valid image file');\n            }\n        }\n        if (ourClientFileInputRef.current) {\n            ourClientFileInputRef.current.value = ''; // This clears the input field\n        }\n    };\n\n    const getOurClientCropData = async (): Promise<void> => {\n        if (typeof ourClientCropperRef.current?.cropper !== 'undefined') {\n            let fileName: string | null = null;\n            const file = DATA_URL_TO_FILE(ourClientCropperRef.current?.cropper.getCroppedCanvas().toDataURL(), `manageClient[${cropDataIndex}].image.png`);\n            const formData = new FormData();\n            formData.append('image', file);\n            setOurClientLoading(true);\n            fileName = await uploadImage(formData, 'website');\n            if (fileName) {\n                setOurClientLoading(false);\n                formik.setFieldValue(`manageClient[${cropDataIndex}].image`, fileName);\n                setOurClientCropper(false);\n                setCropDataIndex(0);\n            }\n        }\n    };\n\n    const ourClientDialogActionConst = () => {\n        return (\n            <div className='flex justify-end gap-3 md:gap-5'>\n                <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setOurClientCropper(false)}  title={`${t('Cancel')}`}/>\n                <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getOurClientCropData()} disabled={ourClientLoading}  title={`${t('Save')}`}/>\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        if (data?.getClientsForWebsite?.data?.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const cleanedServices: Client[] = data?.getClientsForWebsite?.data.map(({ __typename, ...rest }: Client) => rest);\n            const defaultTitle = cleanedServices[0]?.title ?? '';\n            formik.setValues({\n                ...cleanedServices[0],\n                title: defaultTitle,\n                manageClient: cleanedServices.map(service => ({ image: service.image, title: '', uuid: service.uuid, })),\n            });\n        }\n    }, [data]);\n\n    const clientErrors = formik?.errors?.manageClient as any[];\n    \n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n\n            <TextInput\n                placeholder={t('Enter Title')}\n                label={'Enter Title'}\n                required={true}\n                name={'title'}\n                id={'title'}\n                onChange={formik.handleChange}\n                value={formik?.values?.title}\n                error={formik?.errors?.title ? formik?.errors?.title : ''}\n\n            />\n            {formik?.values?.manageClient?.map((serviceData: { image: string, title: string, uuid: string }, index: number) => (\n\n                <div key={`${index + 1}`} className='flex flex-wrap gap-x-5 gap-y-3'>\n\n                    <div key={serviceData.uuid} className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                        <label htmlFor={`image-${index}`}>\n                            {t('Client Company Logo')}\n                        </label>\n                        <div className='box-border border border-solid aspect-video border-border-primary rounded-xl relative flex flex-col items-center justify-center overflow-hidden'>\n                            <label\n                                htmlFor={`image-${index}`}\n                                className='relative flex flex-col h-full w-full items-center justify-center'>\n                                <div className='flex items-center justify-center overflow-hidden border border-solid w-full h-full cursor-pointer border-border-primary'>\n                                    <img src={serviceData?.image?.includes(IMAGE_BASE_URL) ? serviceData.image : IMAGE_BASE_URL + serviceData.image} alt='service_image' className='object-contain w-full h-full bg-black' />\n                                </div>\n                                <input\n                                    type='file'\n                                    multiple\n                                    className='focus:bg-transparent absolute top-1/2 opacity-0'\n                                    accept='image/*'\n                                    id={`image-${index}`}\n                                    name={`manageClient[${index}].image`}\n                                    ref={ourClientFileInputRef}\n                                    onChange={(e) => handleOurClientLogo(e, index)}\n                                />\n                                <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                            </label>\n                            {serviceData.image &&\n                                <Button className='absolute p-[6px] rounded-full cursor-pointer top-4 right-4 md:top-3 md:right-4 bg-error text-lg md:text-xl' type='button' label='' onClick={() => onOurClientDeleteImage(index)}  title={`${t('Close')}`}>\n                                    <Cross className='fill-white' />\n                                </Button>\n                            }\n                        </div>\n                        {clientErrors?.[index]?.image ? <p className='mt-2 error md:text-xs-15'>{t(clientErrors?.[index]?.image)}</p> : ''}\n\n                    </div>\n\n\n                </div>))}\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={formik.handleSubmit}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n            <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={ourClientCropper} style={{ width: '50vw', borderRadius: '12px' }} onHide={() => setOurClientCropper(false)} footer={() => ourClientDialogActionConst()}>\n                {\n                    ourClientImage &&\n                    <Cropper\n                        ref={ourClientCropperRef}\n                        style={{ height: 400, width: '100%' }}\n                        zoomTo={0.5}\n                        // aspectRatio={2/1}\n                        preview=\".img-preview\"\n                        src={ourClientImage}\n                        viewMode={1}\n                        minCropBoxHeight={10}\n                        minCropBoxWidth={10}\n                        background={false}\n                        responsive={true}\n                        autoCropArea={1}\n                        checkOrientation={false}\n                        guides={true}\n                        cropBoxResizable={true}\n                    />\n                }\n            </Dialog>\n        </div>\n    )\n}\n\nexport default OurClient;\n","import { gql } from '@apollo/client';\n\nexport const SERVICE_DETAIL = gql`\nquery GetServicesForWebsite {\n    getServicesForWebsite {\n      message\n      data {\n        uuid\n        title\n        description\n        image\n        order\n        type\n        landing_page_services {\n          uuid\n          title\n          description\n          image\n          order\n          type\n        }\n      }\n    }\n  }`\n\n  ","import { gql } from '@apollo/client';\nexport const UPDATE_WEST_COLLECTION = gql`\nmutation UpdateServiceDetailsForWebsite($inputData: UpdateLandingPageServiceDto!) {\n    updateServiceDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`\n\nexport const UPDATE_WEST_COLLECTION_POINT = gql`\n  mutation UpdateServicePointForWebsite($inputData: UpdateLandingPageServicePointDto!) {\n    updateServicePointForWebsite(inputData: $inputData) {\n      message\n      data {\n        uuid\n        title\n        description\n        image\n        order\n        type\n      }\n    }\n  }`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef, useCallback, useEffect, useRef, useState } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport logo from '@assets/images/sidebar-logo.png';\nimport { SERVICE_DETAIL } from '@framework/graphql/queries/service';\nimport { UPDATE_WEST_COLLECTION, UPDATE_WEST_COLLECTION_POINT } from '@framework/graphql/mutations/wasteCollection';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { IMAGE_BASE_URL, API_MEDIA_END_POINT, DATA_URL_TO_FILE, MAX_FILE_SIZE, uploadImage } from '@config/constant';\nimport { useFormik } from 'formik';\nimport { Dialog } from 'primereact/dialog';\nimport { Cropper, ReactCropperElement } from 'react-cropper';\nimport { Camera, Cross } from '@components/icons/icons';\nimport useValidation from '@framework/hooks/validations';\ninterface About {\n    order: number;\n    title: string;\n    uuid: string;\n    description?: string;\n    image: string;\n    __typename?: string;\n}\ninterface InitialValues {\n    title: string;\n    description: string;\n    order: number;\n    uuid: string;\n    landing_page_services: About[];\n}\n\nfunction WasteCollection() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(SERVICE_DETAIL);\n    const [updateAboutUs] = useMutation(UPDATE_WEST_COLLECTION);\n    const [updateWastPoint] = useMutation(UPDATE_WEST_COLLECTION_POINT);\n    const [cropDataWasteCollection, setCropDataWasteCollection] = useState(0);\n    const [wasteCollectionImage, setWasteCollectionImage] = useState(logo);\n    const [wasteCollectionCropper, setWasteCollectionCropper] = useState(false);\n    const fileWasteCollectionInputRef = useRef<HTMLInputElement | null>(null);\n    const [wasteCollectionCropperLoading, setWasteCollectionLoading] = useState<boolean>(false);\n    const { wasteCollectionValidationSchema } = useValidation();\n    const cropperWasteCollectionRef = createRef<ReactCropperElement>();\n    const wastCollectionInitialValues: InitialValues = {\n        title: '',\n        description: '',\n        order: 0,\n        uuid: '',\n        landing_page_services: [\n            {\n                title: '',\n                description: '',\n                image: '',\n                order: 0,\n                uuid: '',\n            },\n        ],\n    };\n\n    useEffect(() => {\n        if (data?.getServicesForWebsite?.data) {\n            const about = data?.getServicesForWebsite?.data;\n            const aboutDetails = data?.getServicesForWebsite?.data?.landing_page_services?.map((aboutDetail: { title: string, uuid: string, order: number, description: string, image: string }) => {\n                return {\n                    title: aboutDetail?.title,\n                    description: aboutDetail?.description,\n                    image: aboutDetail?.image,\n                    order: aboutDetail?.order,\n                    uuid: aboutDetail?.uuid,\n                };\n            });\n            formik.resetForm({\n                values: {\n                    title: about?.title,\n                    description: about?.description,\n                    order: about?.order,\n                    uuid: about?.uuid,\n                    landing_page_services: aboutDetails\n                }\n            });\n        }\n    }, [data?.getServicesForWebsite?.data]);\n\n    const handleWastCollectionCheckPoint = async () => {\n        const apiWastCollectionPromises = formik?.values?.landing_page_services.map((service) => {\n            const inputData = {\n                uuid: service?.uuid,\n                title: service?.title,\n                order: service?.order,\n                image: service?.image,\n                description: service?.description\n            };\n\n            return updateWastPoint({\n                variables: {\n                    inputData: inputData,\n                },\n            });\n        });\n        try {\n            await Promise.all(apiWastCollectionPromises);\n            formik.resetForm();\n            refetch();\n        } catch (error: any) {\n            toast.error(error?.networkError?.result?.errors[0]?.message);\n        }\n        return true\n    }\n\n    const formik = useFormik({\n        validationSchema: wasteCollectionValidationSchema,\n        initialValues: wastCollectionInitialValues,\n        onSubmit: async (values) => {\n            updateAboutUs({\n                variables: {\n                    inputData: {\n                        // uuid: values?.uuid,\n                        title: values?.title,\n                        description: values?.description,\n                        order: values?.order,\n                    }\n                },\n            })\n                .then((response) => {\n                    toast.success(response?.data?.updateServiceDetailsForWebsite?.message);\n                    formik.resetForm()\n                    handleWastCollectionCheckPoint()\n                    refetch()\n                })\n                .catch((error) => {\n                    toast.error(error.networkError.result.errors[0].message);\n                });\n        }\n    });\n\n    const onDeleteWastCollectionImage = useCallback(async (index: number): Promise<void> => {\n        const data = { fileName: formik.values.landing_page_services[index].image };\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                formik.setFieldValue(`landing_page_services[${index}].image`, '');\n            })\n            .catch((error) => {\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik]);\n\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleWastCollectionLogo = (e: any, index: number) => {\n        e.preventDefault();\n        setCropDataWasteCollection(index);\n        let files;\n        if (e.dataTransfer) {\n            files = e.dataTransfer.files;\n        } else if (e.target) {\n            files = e.target.files;\n        }\n        if (files && files.length > 0) {\n            const file = files[0];\n            if (file.type.startsWith('image/')) {\n                if (file.size > MAX_FILE_SIZE) {\n                    toast.error('Image size must be less than 5MB');\n                } else {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        setWasteCollectionImage(reader.result as any);\n                        setWasteCollectionCropper(true);\n                    };\n                    reader.readAsDataURL(file);\n                }\n            } else {\n                toast.error('Please select a valid image file');\n            }\n        }\n        if (fileWasteCollectionInputRef.current) {\n            fileWasteCollectionInputRef.current.value = ''; // This clears the input field\n        }\n    };\n\n    const getWastCropData = async (): Promise<void> => {\n        if (typeof cropperWasteCollectionRef.current?.cropper !== 'undefined') {\n            let fileName: string | null = null;\n            const file = DATA_URL_TO_FILE(cropperWasteCollectionRef.current?.cropper.getCroppedCanvas().toDataURL(), `landing_page_services[${cropDataWasteCollection}].image.png`);\n            const formData = new FormData();\n            formData.append('image', file);\n            setWasteCollectionLoading(true);\n            fileName = await uploadImage(formData, 'website');\n            if (fileName) {\n                setWasteCollectionLoading(false);\n                formik.setFieldValue(`landing_page_services[${cropDataWasteCollection}].image`, fileName);\n                setWasteCollectionCropper(false);\n                setCropDataWasteCollection(0);\n            }\n        }\n    };\n\n    const dialogWastActionConst = () => {\n        return (\n            <div className='flex justify-end gap-3 md:gap-5'>\n                <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setWasteCollectionCropper(false)} title={`${t('Cancel')}`} />\n                <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getWastCropData()} disabled={wasteCollectionCropperLoading} title={`${t('Save')}`} />\n            </div>\n        )\n    }\n\n    const wasteErrors = formik?.errors?.landing_page_services as any[];\n\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} name='title' id='title' onChange={formik.handleChange} value={formik?.values?.title} error={formik.errors.title} />\n                </div>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter SubTitle')} label={'SubTitle'} required={true} name='description' id='description' onChange={formik.handleChange} value={formik?.values?.description} error={formik.errors.description} />\n                </div>\n                {formik?.values?.landing_page_services?.map((serviceData: About, index: number) => (\n                    <div key={serviceData.uuid} className='w-full'>\n                        <div className='flex flex-wrap py-4 gap-x-5 gap-y-3'>\n                            <h4 className='w-full mb-5'>{t('Waste Collection')} {index + 1}</h4>\n                            <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                <label htmlFor={`image-${index}`}>\n                                    {t('Collection Image')}\n                                </label>\n                                <div className='box-border border border-solid aspect-video border-border-primary rounded-xl relative flex flex-col items-center justify-center overflow-hidden'>\n                                    <label\n                                        htmlFor={`image-${index}`}\n                                        className='relative flex flex-col h-full w-full items-center justify-center'>\n                                        <div className='flex items-center justify-center overflow-hidden border border-solid w-full h-full cursor-pointer border-border-primary'>\n                                            <img src={serviceData?.image?.includes(IMAGE_BASE_URL) ? serviceData.image : IMAGE_BASE_URL + serviceData.image} alt='service_image' className='object-contain w-full h-full bg-black' />\n                                        </div>\n                                        <input\n                                            type='file'\n                                            multiple\n                                            className='focus:bg-transparent absolute top-1/2 opacity-0'\n                                            accept='image/*'\n                                            id={`image-${index}`}\n                                            name={`landing_page_services[${index}].image`}\n                                            ref={fileWasteCollectionInputRef}\n                                            onChange={(e) => handleWastCollectionLogo(e, index)}\n                                        />\n                                        <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                                    </label>\n                                    {serviceData.image &&\n                                        <Button className='absolute p-[6px] rounded-full cursor-pointer top-4 right-4 md:top-3 md:right-4 bg-error text-lg md:text-xl' type='button' label='' onClick={() => onDeleteWastCollectionImage(index)} title={`${t('Close')}`} >\n                                            <Cross className='fill-white' />\n                                        </Button>\n                                    }\n                                </div>\n                                {wasteErrors?.[index]?.image && formik.touched.landing_page_services?.[index]?.image ? <p className='mt-2 error md:text-xs-15'>{t(wasteErrors?.[index]?.image)}</p> : ''}\n                            </div>\n                            <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                <TextInput placeholder={t('Enter Collection Title')} label={'Collection Title'} required={true}\n                                    name={`landing_page_services[${index}].title`}\n                                    id={`title-${index}`}\n                                    onChange={formik.handleChange}\n                                    value={serviceData.title}\n                                    error={wasteErrors?.[index]?.title && formik.touched.landing_page_services?.[index]?.title ? wasteErrors?.[index]?.title : ''}\n                                />\n                            </div>\n                            <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                <TextInput placeholder={t('Enter Collection Description')} label={'Collection Description'} required={true}\n                                    name={`landing_page_services[${index}].description`}\n                                    id={`description-${index}`}\n                                    onChange={formik.handleChange}\n                                    value={serviceData.description}\n                                    error={wasteErrors?.[index]?.description && formik.touched.landing_page_services?.[index]?.description ? wasteErrors?.[index]?.description : ''}\n                                />\n                            </div>\n                        </div>\n                    </div>))}\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n            <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={wasteCollectionCropper} style={{ width: '50vw', borderRadius: '12px' }} onHide={() => setWasteCollectionCropper(false)} footer={() => dialogWastActionConst()}>\n                {\n                    wasteCollectionImage &&\n                    <Cropper\n                        ref={cropperWasteCollectionRef}\n                        style={{ height: 400, width: '100%' }}\n                        zoomTo={0.5}\n                        // aspectRatio={1}\n                        preview=\".img-preview\"\n                        src={wasteCollectionImage}\n                        viewMode={1}\n                        minCropBoxHeight={10}\n                        minCropBoxWidth={10}\n                        background={false}\n                        responsive={true}\n                        autoCropArea={1}\n                        checkOrientation={false}\n                        guides={true}\n                        cropBoxResizable={true}\n                    />\n                }\n            </Dialog>\n        </div>\n    )\n}\n\nexport default WasteCollection;\n","import { gql } from '@apollo/client';\n\nexport const UPDATE_COUNT=gql`\nmutation UpdateStatisticDetailsForWebsite($inputData: UpdateLandingPageStatisticDto!) {\n  updateStatisticDetailsForWebsite(inputData: $inputData) {\n    message\n   \n  }\n}`","import { gql } from '@apollo/client';\n\nexport const GET_COUNT = gql`\nquery GetStatisticsForWebsite {\n    getStatisticsForWebsite {\n      message\n      data {\n        uuid\n        title\n        description\n        order\n        type\n      }\n    }\n  }`\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { UPDATE_COUNT } from '@framework/graphql/mutations/count';\nimport { GET_COUNT } from '@framework/graphql/queries/count';\nimport { toast } from 'react-toastify';\nimport { useFormik } from 'formik';\nimport useValidation from '@framework/hooks/validations';\ninterface Rating {\n    description: string;\n    image?: string;\n    order: number;\n    title: string;\n    uuid?: string;\n    __typename?: string;\n    type?:string\n}\n\nfunction CompanyRating() {\n    const { t } = useTranslation();\n    const [changeCount] = useMutation(UPDATE_COUNT);\n    const { data, refetch } = useQuery(GET_COUNT);\n    const { ratingValidationSchema } = useValidation();\n    const initialValues: { rating: Rating[] } = {\n        rating: [\n            {\n                description: '',\n                order: 0,\n                title: '',\n                image:''\n            },\n        ],\n    };\n\n    useEffect(() => {\n        if (data?.getStatisticsForWebsite?.data?.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const cleanedServices: Rating[] = data?.getStatisticsForWebsite?.data.map(({ __typename,type, ...rest }: Rating) => rest);\n            formik.setFieldValue('rating', cleanedServices);\n        }\n    }, [data]);\n\n    const formik = useFormik({\n        validationSchema: ratingValidationSchema,\n        initialValues,\n        onSubmit: async (values) => {\n            const apiPromises = values.rating.map((service) => {\n                return changeCount({\n                    variables: {\n                        inputData:  service\n                    },\n                });\n            });\n            try {\n                const responses = await Promise.all(apiPromises);\n                toast.success(responses[0]?.data?.updateStatisticDetailsForWebsite?.message);\n                refetch();\n            } catch (error: any) {\n                toast.error(error?.networkError?.result?.errors[0]?.message);\n            }\n        },\n    });\n\n    const ratingErrors = formik?.errors?.rating as any[];\n\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            {formik?.values?.rating?.map((serviceData: { title: string, description: string}, index: number) => (\n                <div key={`${index + 1}`} className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                    <h4 className='w-full mb-2'>{t('Rating')} {index + 1} :</h4>\n                    <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                        <TextInput placeholder={t('Enter Rating')} label={'Rating'} required={true}\n                            name={`rating[${index}].title`}\n                            id={`title-${index}`}\n                            onChange={formik.handleChange}\n                            value={serviceData.title}\n                            error={ratingErrors?.[index]?.title && formik.touched.rating?.[index]?.title ? ratingErrors?.[index]?.title : ''}\n                        />\n                    </div>\n                    <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                        <TextInput placeholder={t('Enter Description')} label={'Description'} required={true}\n                            name={`rating[${index}].description`}\n                            id={`description-${index}`}\n                            onChange={formik.handleChange}\n                            value={serviceData.description}\n                            error={ratingErrors?.[index]?.description && formik.touched.rating?.[index]?.description ? ratingErrors?.[index]?.description : ''}\n                        />\n                    </div>\n                </div>))}\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default CompanyRating;\n","import { gql } from '@apollo/client';\nexport const WHY_CHOOSE_US = gql`\nmutation UpdateWhyChooseUsDetailsForWebsite($inputData: UpdateLandingPageWhyChooseUsDto!) {\n    updateWhyChooseUsDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","import { gql } from '@apollo/client';\n\nexport const WHY_CHOOSE = gql`\nquery GetWhyChooseUsForWebsite {\n    getWhyChooseUsForWebsite {\n      message\n      data {\n        uuid\n        title\n        description\n        image\n        order\n        type\n      }\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef, useCallback, useEffect, useRef, useState } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { WHY_CHOOSE_US } from '@framework/graphql/mutations/whyChooseUs';\nimport { WHY_CHOOSE } from '@framework/graphql/queries/whyChooseUs';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { IMAGE_BASE_URL, API_MEDIA_END_POINT, DATA_URL_TO_FILE, MAX_FILE_SIZE, uploadImage } from '@config/constant';\nimport { Camera, Cross } from '@components/icons/icons';\nimport axios from 'axios';\nimport { Cropper, ReactCropperElement } from 'react-cropper';\nimport logo from '@assets/images/sidebar-logo.png';\nimport { Dialog } from 'primereact/dialog';\nimport useValidation from '@framework/hooks/validations';\ninterface InitialValues {\n    title: string,\n    description: string,\n    image: string,\n    order?: number\n}\nfunction WhyChooseUs() {\n    const { t } = useTranslation();\n    const [changeChooseUs] = useMutation(WHY_CHOOSE_US);\n    const { data, refetch } = useQuery(WHY_CHOOSE);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [image, setImage] = useState(logo);\n    const [cropper, setCropper] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const cropperRef = createRef<ReactCropperElement>();\n    const { whyChooseValidationSchema } = useValidation();\n    const initialValues: InitialValues = {\n        title: '',\n        description: '',\n        image: '',\n        order: 0\n    };\n\n    const formik = useFormik({\n        validationSchema: whyChooseValidationSchema,\n        initialValues,\n        onSubmit: async (values) => {\n            changeChooseUs({\n                variables: {\n                    inputData: {\n                        title: values?.title,\n                        description: values?.description,\n                        image: values?.image,\n                        order: values?.order\n                    }\n                },\n            })\n                .then((response) => {\n                    toast.success(response?.data?.updateWhyChooseUsDetailsForWebsite?.message);\n                    formik.resetForm()\n                    refetch()\n                })\n                .catch((error) => {\n                    toast.error(error.networkError.result.errors[0].message);\n                });\n        }\n    });\n\n    useEffect(() => {\n        if (data?.getWhyChooseUsForWebsite?.data) {\n            const whyChooseUsData = data?.getWhyChooseUsForWebsite?.data;\n\n            formik.resetForm({\n                values: {\n                    title: whyChooseUsData?.title,\n                    description: whyChooseUsData?.description,\n                    image: whyChooseUsData?.image\n                }\n            });\n        }\n    }, [data]);\n\n    const onDeleteImage = useCallback(() => {\n        const data = { fileName: formik.values.image };\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                formik.setFieldValue('image', '');\n            })\n            .catch((error) => {\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik]);\n\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleLogo = (e: any) => {\n        e.preventDefault();\n        let files;\n        if (e.dataTransfer) {\n            files = e.dataTransfer.files;\n        } else if (e.target) {\n            files = e.target.files;\n        }\n        if (files && files.length > 0) {\n            const file = files[0];\n            if (file.type.startsWith('image/')) {\n                if (file.size > MAX_FILE_SIZE) {\n                    toast.error('Image size must be less than 5MB');\n                } else {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        setImage(reader.result as any);\n                        setCropper(true);\n                    };\n                    reader.readAsDataURL(file);\n                }\n            } else {\n                toast.error('Please select a valid image file');\n            }\n        }\n        if (fileInputRef.current) {\n            fileInputRef.current.value = ''; // This clears the input field\n        }\n    };\n\n    const getCropData = async (): Promise<void> => {\n        if (typeof cropperRef.current?.cropper !== 'undefined') {\n            let fileName: string | null = null;\n            const file = DATA_URL_TO_FILE(cropperRef.current?.cropper.getCroppedCanvas().toDataURL(), 'image.image.png');\n            const formData = new FormData();\n            formData.append('image', file);\n            setLoading(true);\n            fileName = await uploadImage(formData, 'website');\n            if (fileName) {\n                setLoading(false);\n                formik.setFieldValue('image', fileName);\n                setCropper(false);\n            }\n        }\n    };\n\n    const dialogActionConst = () => {\n        return (\n            <div className='flex justify-end gap-3 md:gap-5'>\n                <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setCropper(false)}  title={`${t('Cancel')}`} />\n                <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getCropData()} disabled={loading}  title={`${t('Save')}`} />\n            </div>\n        )\n    }\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} name='title' id='title' value={formik.values.title} onChange={formik.handleChange} error={formik.errors.title} />\n                </div>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Description')} label={'Description'} required={true} name='description' id='description' value={formik.values.description} onChange={formik.handleChange} error={formik.errors.description} />\n                </div>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <label htmlFor={'image'}>\n                        {t('Image')}\n                    </label>\n                    <div className='box-border border border-solid aspect-video border-border-primary rounded-xl relative flex flex-col items-center justify-center overflow-hidden'>\n                        <label\n                            htmlFor={'image'}\n                            className='relative flex flex-col h-full w-full items-center justify-center'>\n                            <div className='flex items-center justify-center overflow-hidden border border-solid w-full h-full cursor-pointer border-border-primary'>\n                                <img src={formik.values?.image?.includes(IMAGE_BASE_URL) ? formik.values?.image : IMAGE_BASE_URL + formik.values?.image} alt='service_image' className='object-contain w-full h-full bg-black' />\n                            </div>\n                            <input\n                                type='file'\n                                multiple\n                                className='focus:bg-transparent absolute top-1/2 opacity-0'\n                                accept='image/*'\n                                id={'image'}\n                                name={'image'}\n                                ref={fileInputRef}\n                                onChange={(e) => handleLogo(e)}\n                            />\n                            <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                        </label>\n                        {formik.values?.image &&\n                            <Button className='absolute p-[6px] rounded-full cursor-pointer top-4 right-4 md:top-3 md:right-4 bg-error text-lg md:text-xl' type='button' label='' onClick={() => onDeleteImage()}  title={`${t('Close')}`} >\n                                <Cross className='fill-white' />\n                            </Button>\n                        }\n                    </div>\n                    <p className='mt-2 error md:text-xs-15'>{formik.errors.image}</p>\n                </div>\n\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n            <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={cropper} style={{ width: '50vw', borderRadius: '12px' }} onHide={() => setCropper(false)} footer={() => dialogActionConst()}>\n                {\n                    image &&\n                    <Cropper\n                        ref={cropperRef}\n                        style={{ height: 400, width: '100%' }}\n                        zoomTo={0.5}\n                        // aspectRatio={1}\n                        preview=\".img-preview\"\n                        src={image}\n                        viewMode={1}\n                        minCropBoxHeight={10}\n                        minCropBoxWidth={10}\n                        background={false}\n                        responsive={true}\n                        autoCropArea={1}\n                        checkOrientation={false}\n                        guides={true}\n                        cropBoxResizable={true}\n                    />\n                }\n            </Dialog>\n        </div>\n    )\n}\n\nexport default WhyChooseUs;\n","import { gql } from '@apollo/client';\n\nexport const LIST_ABOUT_COURSE = gql`\nquery GetLearnAboutCoursesForWebsite {\n    getLearnAboutCoursesForWebsite {\n      message\n      data {\n        uuid\n        title\n        description\n        image\n        order\n        type\n        landing_page_points {\n          uuid\n          title\n          order\n          type\n        }   \n      }\n    }\n  }`","import { gql } from '@apollo/client';\n\nexport const  UPDATE_ABOUT_COURSE =gql`\nmutation UpdateAboutCourseDetailsForWebsite($inputData: UpdateLandingPageAboutCourseDto!) {\n    updateAboutCourseDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`\n  export const  UPDATE_ABOUT_COURSE_POINT =gql`\n  mutation UpdateAboutCoursePointForWebsite($inputData: UpdateLandingPagePointsDto!) {\n    updateAboutCoursePointForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { LIST_ABOUT_COURSE } from '@framework/graphql/queries/aboutCourse';\nimport { UPDATE_ABOUT_COURSE, UPDATE_ABOUT_COURSE_POINT } from '@framework/graphql/mutations/aboutCourse';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport useValidation from '@framework/hooks/validations';\ninterface About {\n    order?: number;\n    title?: string;\n    uuid?: string;\n    image?: string;\n    description?: string;\n    landing_page_id?: string;\n    __typename?: string;\n}\ninterface InitialValues {\n    title: string;\n    description: string;\n    order: number;\n    image: string;\n    aboutCoursePoint: About[];\n}\nfunction AboutCourses() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(LIST_ABOUT_COURSE);\n    const [updateAboutCourse] = useMutation(UPDATE_ABOUT_COURSE);\n    const [updateAboutCoursePoint] = useMutation(UPDATE_ABOUT_COURSE_POINT)\n    const { aboutCourseValidationSchema } = useValidation();\n    const initialValues: InitialValues = {\n        title: '',\n        description: '',\n        image: '',\n        order: 0,\n        aboutCoursePoint: [\n            {\n                uuid: '',\n                landing_page_id: '',\n                title: '',\n                order: 0,\n            },\n        ],\n    };\n\n    useEffect(() => {\n        if (data?.getLearnAboutCoursesForWebsite?.data) {\n            const about = data?.getLearnAboutCoursesForWebsite?.data;\n            const aboutDetails = data?.getLearnAboutCoursesForWebsite?.data?.landing_page_points?.map((aboutDetail: { title: string, uuid: string, order: number }) => {\n                return {\n                    title: aboutDetail.title,\n                    order: aboutDetail?.order,\n                    uuid: aboutDetail.uuid,\n                };\n            });\n            formik.resetForm({\n                values: {\n                    title: about?.title,\n                    description: about?.description,\n                    order: about?.order,\n                    image: about?.image,\n                    aboutCoursePoint: aboutDetails\n                }\n            });\n        }\n    }, [data?.getLearnAboutCoursesForWebsite?.data]);\n\n    const handleCheckPointAboutCourse = async () => {\n        const apiPromises = formik?.values?.aboutCoursePoint.map((service) => {\n            const inputData = {\n                uuid: service?.uuid,\n                title: service?.title,\n                order: service?.order,\n                landing_page_id: '',\n            };\n\n            return updateAboutCoursePoint({\n                variables: {\n                    inputData: inputData,\n                },\n            });\n        });\n        try {\n            await Promise.all(apiPromises);\n\n            formik.resetForm();\n            refetch();\n        } catch (error: any) {\n            toast.error(error?.networkError?.result?.errors[0]?.message);\n        }\n    }\n\n    const formik = useFormik({\n        validationSchema: aboutCourseValidationSchema,\n        initialValues,\n        onSubmit: async (values) => {\n            updateAboutCourse({\n                variables: {\n                    inputData: {\n                        title: values?.title,\n                        description: values?.description,\n                        image: '',\n                        order: values?.order,\n                    }\n                },\n            })\n                .then((response) => {\n                    toast.success(response?.data?.updateAboutCourseDetailsForWebsite?.message);\n                    formik.resetForm()\n                    handleCheckPointAboutCourse()\n                    refetch()\n                })\n                .catch((error) => {\n                    toast.error(error.networkError.result.errors[0].message);\n                });\n        }\n    });\n\n    const aboutCourseErrors = formik?.errors?.aboutCoursePoint as any[];\n\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} name='title' id='title' value={formik.values.title} onChange={formik.handleChange} error={formik.errors.title} />\n                </div>\n                <div className='w-full 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Description')} label={'Description'} required={true} name='description' id='description' value={formik.values.description} onChange={formik.handleChange} error={formik.errors.description} />\n                </div>\n                {formik?.values?.aboutCoursePoint.map((point, index: number) => {\n                    return (\n                        <div className='w-full' key={`${index + 1}`}>\n                            <label className='w-full'>{t('Check Points')} {index + 1}<span className='error'> *</span></label>\n                            <div className='flex flex-wrap gap-x-5 gap-y-3.5'>\n                                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                    <TextInput\n                                        placeholder={t('Enter Check Points 1')}\n                                        required={true}\n                                        name={`aboutCoursePoint[${index}].title`}\n                                        value={point?.title}\n                                        onChange={formik?.handleChange}\n                                        id={`title-${index}`}\n                                        error={aboutCourseErrors?.[index]?.title && formik.touched.aboutCoursePoint?.[index]?.title ? aboutCourseErrors?.[index]?.title : ''}\n\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default AboutCourses;\n","import { gql } from '@apollo/client';\n\nexport const UPDATE_TESTIMONIAL = gql`\nmutation UpdateTestimonialDetailsForWebsite($inputData: UpdateLandingPageTestimonialDto!) {\n    updateTestimonialDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`\n\nexport const UPDATE_TESTIMONIAL_POINT = gql`\nmutation UpdateTestimonialPointForWebsite($inputData: UpdateLandingPageTestimonialPointDto!) {\n    updateTestimonialPointForWebsite(inputData: $inputData) {\n      message\n    }\n  }`\n\nexport const ADD_TESTIMONIAL_POINT = gql`\nmutation AddTestimonialPointForWebsite($inputData: AddLandingPageTestimonialPointDto!) {\n  addTestimonialPointForWebsite(inputData: $inputData) {\n      message\n    }\n  }`\n\nexport const DELETE_TESTIMONIAL_POINT = gql`\nmutation DeleteTestimonialPointForWebsite($deleteIds: [String!]!) {\n  deleteTestimonialPointForWebsite(delete_ids: $deleteIds) {\n    message\n  }\n}\n`","import { gql } from '@apollo/client';\n\nexport const LIST_TESTIMONIALS = gql`\nquery GetTestimonialsForWebsite {\n    getTestimonialsForWebsite {\n      message\n      data {\n        title\n        uuid\n        order\n        landing_page_testimonials {\n          uuid\n          name\n          description\n          image\n          order\n          tag\n          type\n        }\n       \n      }\n    }\n  }`\n  ","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef, useCallback, useEffect, useRef, useState } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_TESTIMONIAL_POINT, DELETE_TESTIMONIAL_POINT, UPDATE_TESTIMONIAL, UPDATE_TESTIMONIAL_POINT } from '@framework/graphql/queries/testimonial';\nimport { LIST_TESTIMONIALS } from '@framework/graphql/mutations/testimonial';\nimport useValidation from '@framework/hooks/validations';\nimport { useFormik } from 'formik';\nimport { IMAGE_BASE_URL, API_MEDIA_END_POINT, DATA_URL_TO_FILE, MAX_FILE_SIZE, uploadImage } from '@config/constant';\nimport { Camera, Cross } from '@components/icons/icons';\nimport axios from 'axios';\nimport { Dialog } from 'primereact/dialog';\nimport { toast } from 'react-toastify';\nimport logo from '@assets/images/sidebar-logo.png';\nimport { Cropper, ReactCropperElement } from 'react-cropper';\n\ninterface Testimonial {\n    uuid?: string;\n    name?: string;\n    description?: string;\n    image?: string;\n    order?: number;\n    tag?: string;\n    __typename?: string;\n}\ninterface InitialValues {\n    title?: string;\n    description?: string;\n    image?: string;\n    order?: number;\n    landing_page_testimonials?: Testimonial[];\n}\n\nfunction Testimonials() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(LIST_TESTIMONIALS);\n    const [updateTestimonial] = useMutation(UPDATE_TESTIMONIAL);\n    const [updateTestimonialPoint] = useMutation(UPDATE_TESTIMONIAL_POINT)\n    const [addTestimonialPoint] = useMutation(ADD_TESTIMONIAL_POINT);\n    const [removeTestimonial] = useMutation(DELETE_TESTIMONIAL_POINT);\n    const [cropDataIndex, setCropDataIndex] = useState(0);\n    const [deleteTestimonial, setDeleteTestimonial] = useState<string[]>([]);\n    const [image, setImage] = useState(logo);\n    const [cropper, setCropper] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { testimonialValidationSchema } = useValidation();\n    const cropperRef = createRef<ReactCropperElement>();\n    const initialValues: InitialValues = {\n        title: '',\n        description: '',\n        image: '',\n        order: 0,\n        landing_page_testimonials: [\n            {\n                uuid: '',\n                name: '',\n                description: '',\n                image: '',\n                order: 0,\n                tag: ''\n            },\n        ],\n    };\n\n\n    const formik = useFormik({\n        validationSchema: testimonialValidationSchema,\n        initialValues,\n        onSubmit: async (values) => {\n            updateTestimonial({\n                variables: {\n                    inputData: {\n                        title: values?.title,\n                        order: values?.order,\n                    }\n                },\n            })\n                .then(async (response) => {\n                    await handleCheckPoint()\n                    toast.success(response?.data?.updateTestimonialDetailsForWebsite?.message);\n                    formik.resetForm()\n\n                    refetch()\n                })\n                .catch((error) => {\n                    toast.error(error.networkError.result.errors[0].message);\n                });\n        }\n    });\n\n    useEffect(() => {\n        if (data?.getTestimonialsForWebsite) {\n            const about = data?.getTestimonialsForWebsite?.data;\n            const testimonialsDetails = data?.getTestimonialsForWebsite?.data?.landing_page_testimonials?.map((testimonials: { name: string, uuid: string, order: number, description: string, image: string, tag: string }) => {\n                return {\n                    name: testimonials?.name,\n                    description: testimonials?.description,\n                    image: testimonials?.image,\n                    tag: testimonials?.tag,\n                    order: testimonials?.order,\n                    uuid: testimonials?.uuid,\n                };\n            });\n            formik.resetForm({\n                values: {\n                    title: about?.title,\n                    order: about?.order,\n                    landing_page_testimonials: testimonialsDetails\n                }\n            });\n        }\n    }, [data?.getTestimonialsForWebsite]);\n\n    const handleCheckPoint = async () => {\n        const apiPromises: any = formik?.values?.landing_page_testimonials?.map((service) => {\n            if (service?.uuid) {\n                const inputData = {\n                    uuid: service?.uuid,\n                    name: service?.name,\n                    tag: service?.tag,\n                    order: service?.order,\n                    image: service?.image,\n                    description: service?.description\n                };\n\n                return updateTestimonialPoint({\n                    variables: {\n                        inputData: inputData,\n                    },\n                });\n            } else {\n                const inputData = {\n                    // uuid: service?.uuid,\n                    name: service?.name,\n                    tag: service?.tag,\n                    order: service?.order,\n                    image: service?.image,\n                    description: service?.description\n                };\n\n                return addTestimonialPoint({\n                    variables: {\n                        inputData: inputData,\n                    },\n                });\n\n            }\n\n        });\n        apiPromises.push(\n            removeTestimonial({\n                variables: {\n                    deleteIds: deleteTestimonial\n                }\n            })\n        )\n\n        try {\n            await Promise.all(apiPromises);\n            formik.resetForm();\n            refetch();\n        } catch (error: any) {\n            toast.error(error?.networkError?.result?.errors[0]?.message);\n        }\n\n        return true;\n    }\n\n\n    const onDeleteImage = useCallback(async (index: number): Promise<void> => {\n        const landingPageTestimonials = formik?.values?.landing_page_testimonials;\n\n        if (landingPageTestimonials?.[index]) {\n            const data = { fileName: landingPageTestimonials[index].image };\n            axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n                .then(() => {\n                    formik.setFieldValue(`landing_page_testimonials[${index}].image`, '');\n                })\n                .catch((error) => {\n                    toast.error(error?.response?.data?.message);\n                });\n        }\n    }, [formik]);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handleLogo = (e: any, index: number) => {\n        e.preventDefault();\n        setCropDataIndex(index);\n        let files;\n        if (e.dataTransfer) {\n            files = e.dataTransfer.files;\n        } else if (e.target) {\n            files = e.target.files;\n        }\n        if (files && files.length > 0) {\n            const file = files[0];\n            if (file.type.startsWith('image/')) {\n                if (file.size > MAX_FILE_SIZE) {\n                    toast.error('Image size must be less than 5MB');\n                } else {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        setImage(reader.result as any);\n                        setCropper(true);\n                    };\n                    reader.readAsDataURL(file);\n                }\n            } else {\n                toast.error('Please select a valid image file');\n            }\n        }\n        if (fileInputRef.current) {\n            fileInputRef.current.value = ''; // This clears the input field\n        }\n    };\n\n    const getCropData = async (): Promise<void> => {\n        if (typeof cropperRef.current?.cropper !== 'undefined') {\n            let fileName: string | null = null;\n            const file = DATA_URL_TO_FILE(cropperRef.current?.cropper.getCroppedCanvas().toDataURL(), `landing_page_testimonials[${cropDataIndex}].image.png`);\n            const formData = new FormData();\n            formData.append('image', file);\n            setLoading(true);\n            fileName = await uploadImage(formData, 'website');\n            if (fileName) {\n                setLoading(false);\n                formik.setFieldValue(`landing_page_testimonials[${cropDataIndex}].image`, fileName);\n                setCropper(false);\n                setCropDataIndex(0);\n            }\n        }\n    };\n\n    const dialogActionConst = () => {\n        return (\n            <div className='flex justify-end gap-3 md:gap-5'>\n                <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setCropper(false)} title={`${t('Cancel')}`} />\n                <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getCropData()} disabled={loading} title={`${t('Save')}`} />\n            </div>\n        )\n    }\n\n    function handleAddTestimonial() {\n\n        formik.setFieldValue('landing_page_testimonials', [\n            ...formik?.values?.landing_page_testimonials || [],\n            {\n                uuid: '',\n                name: '',\n                description: '',\n                image: '',\n                order: formik?.values?.landing_page_testimonials?.length || 0 + 1,\n                tag: ''\n            }\n        ])\n    }\n\n    const handleDeleteTestimonial = (index: number, serviceData: Testimonial) => {\n        const testimonialsList = [...formik?.values?.landing_page_testimonials || []];\n        testimonialsList.splice(index, 1);\n        formik.setFieldValue('landing_page_testimonials', testimonialsList);\n        if (serviceData?.uuid) {\n            setDeleteTestimonial([...deleteTestimonial || [], serviceData?.uuid])\n        }\n\n    };\n    const testimonialsErrors = formik?.errors?.landing_page_testimonials as unknown as any[];\n\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} id='title' name='title' value={formik.values.title} onChange={formik.handleChange} error={formik.errors.title} />\n                </div>\n\n                <div className='w-full my-4'>\n                    <h4 className='w-full mb-5'>{t('Author Details')}</h4>\n                    {formik?.values?.landing_page_testimonials?.map((serviceData: Testimonial, index: number) => (\n                        <>\n                            <div className='w-full flex py-5 mt-auto justify-end'>\n                                <Button\n                                    className='btn-error btn-normal whitespace-nowrap md:w-[120px]'\n                                    type='button'\n                                    label={t('Delete')}\n                                    onClick={() => handleDeleteTestimonial(index, serviceData)}\n                                    title={`${t('Delete')}`}\n                                />\n                            </div>\n                            <div key={`${index + 1}`} className='flex flex-wrap gap-x-5 gap-y-3.5'>\n\n                                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                    <TextInput placeholder={t('Enter Name')} label={'Name'} required={true}\n                                        name={`landing_page_testimonials[${index}].name`}\n                                        id={`name-${index}`}\n                                        onChange={formik.handleChange}\n                                        value={serviceData.name}\n                                        error={testimonialsErrors?.[index]?.name}\n                                    />\n                                </div>\n                                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                    <TextInput placeholder={t('Enter Description')} label={'Description'} required={true}\n                                        name={`landing_page_testimonials[${index}].description`}\n                                        id={`description-${index}`}\n                                        onChange={formik.handleChange}\n                                        value={serviceData.description}\n                                        error={testimonialsErrors?.[index]?.description}\n                                    />\n                                </div>\n                                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                    <TextInput placeholder={t('Enter Tag')} label={'Tag'} required={true}\n                                        name={`landing_page_testimonials[${index}].tag`}\n                                        id={`tag-${index}`}\n                                        onChange={formik.handleChange}\n                                        value={serviceData.tag}\n                                        error={testimonialsErrors?.[index]?.tag}\n                                    />\n                                </div>\n\n                                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                                    <label htmlFor={`image-${index}`}>\n                                        {t('Author Image')}\n                                    </label>\n                                    <div className='box-border border border-solid aspect-video border-border-primary rounded-xl relative flex flex-col items-center justify-center overflow-hidden'>\n                                        <label\n                                            htmlFor={`image-${index}`}\n                                            className='relative flex flex-col h-full w-full items-center justify-center'>\n                                            <div className='flex items-center justify-center overflow-hidden border border-solid w-full h-full cursor-pointer border-border-primary'>\n                                                <img src={serviceData?.image?.includes(IMAGE_BASE_URL) ? serviceData.image : IMAGE_BASE_URL + serviceData.image} alt='service_image' className='object-contain w-full h-full bg-black' />\n                                            </div>\n                                            <input\n                                                type='file'\n                                                multiple\n                                                className='focus:bg-transparent absolute top-1/2 opacity-0'\n                                                accept='image/*'\n                                                id={`image-${index}`}\n                                                name={`landing_page_testimonials[${index}].image`}\n                                                ref={fileInputRef}\n                                                onChange={(e) => handleLogo(e, index)}\n                                            />\n                                            <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                                        </label>\n                                        {serviceData.image &&\n                                            <Button className='absolute p-[6px] rounded-full cursor-pointer top-4 right-4 md:top-3 md:right-4 bg-error text-lg md:text-xl' type='button' label='' onClick={() => onDeleteImage(index)}>\n                                                <Cross className='fill-white' />\n                                            </Button>\n                                        }\n                                    </div>\n                                    <p className='mt-2 error md:text-xs-15'>{t(testimonialsErrors?.[index]?.image)}</p>\n                                </div>\n\n                            </div>\n                        </>\n\n                    ))}\n\n                </div>\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Add More')}\n                    onClick={() => handleAddTestimonial()}\n                    title={`${t('Add More')}`}\n                />\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n            <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={cropper} style={{ width: '50vw', borderRadius: '12px' }} onHide={() => setCropper(false)} footer={() => dialogActionConst()}>\n                {\n                    image &&\n                    <Cropper\n                        ref={cropperRef}\n                        style={{ height: 400, width: '100%' }}\n                        zoomTo={0.5}\n                        aspectRatio={1}\n                        preview=\".img-preview\"\n                        src={image}\n                        viewMode={1}\n                        minCropBoxHeight={10}\n                        minCropBoxWidth={10}\n                        background={false}\n                        responsive={true}\n                        autoCropArea={1}\n                        checkOrientation={false}\n                        guides={true}\n                        cropBoxResizable={false}\n                    />\n                }\n            </Dialog>\n        </div>\n    )\n}\n\nexport default Testimonials;\n","import { gql } from '@apollo/client';\n\nexport const LIST_PLAN = gql`\nquery GetSubscriptionPlansForWebsite {\n    getSubscriptionPlansForWebsite {\n      message\n      data {\n        title\n        uuid\n        subscription_plans {\n          uuid\n          name\n          price\n          order\n          tag\n          type\n          subscription_plan_points {\n            uuid\n            title\n            description\n            order\n          }\n        }\n      }\n    }\n  }`\n  ","import { gql } from '@apollo/client';\n\nexport const UPDATE_SUBSCRIPTION_PLAN = gql`\nmutation UpdateSubscriptionPlanDetailsForWebsite($inputData: UpdateLandingPageSubscriptionPlanDto!) {\n    updateSubscriptionPlanDetailsForWebsite(inputData: $inputData) {\n      message\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect } from 'react'\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { LIST_PLAN } from '@framework/graphql/queries/plan';\nimport { useFormik } from 'formik';\nimport { UPDATE_SUBSCRIPTION_PLAN } from '@framework/graphql/mutations/plan';\nimport { toast } from 'react-toastify';\nimport useValidation from '@framework/hooks/validations';\n\ninterface SubscriptionPlanPoint {\n    title: string;\n    uuid?: string;\n    description?: string;\n  }\n  \n  interface SubscriptionPlanData {\n    uuid?: string;\n    name: string;\n    price: string;\n    description?: string;\n    subscription_plan_points: SubscriptionPlanPoint[];\n  }\n  \n  interface SubscriptionPlanValues {\n    uuid?: string;\n    title: string;\n    description?: string;\n    subscription_plans: SubscriptionPlanData[];\n  }\n\n  \nfunction SubscriptionPlan() {\n    const { t } = useTranslation();\n    const { data, refetch } = useQuery(LIST_PLAN);\n    const [changeSubscription] = useMutation(UPDATE_SUBSCRIPTION_PLAN);\n    const { planValidationSchema } = useValidation();\n\n    const initialValues: SubscriptionPlanValues = {\n        uuid: '',\n        title: '',\n        subscription_plans: [\n            {\n                uuid: '',\n                name: '',\n                price: '',\n                subscription_plan_points: [\n                    {\n                        title: '',\n                        uuid: ''\n                    }\n                ]\n            },\n        ],\n    };\n\n    const formik = useFormik({\n        validationSchema: planValidationSchema,\n        initialValues,\n        onSubmit: async (values) => {\n            const { title } = values;\n            const apiPromises = values?.subscription_plans?.map((service) => {\n                const { name, price, subscription_plan_points } = service;\n    \n                const updatedSubscriptionPlanPoints = subscription_plan_points?.map((point: SubscriptionPlanPoint) => ({\n                    ...point,\n                    uuid: point?.uuid ,\n                    title: point?.title ,\n                    description: point?.description,\n                }));\n    \n                return changeSubscription({\n                    variables: {\n                        inputData: {\n                            uuid: data?.getSubscriptionPlansForWebsite?.data?.uuid,\n                            title: title,\n                            subscription_plans: [\n                                {\n                                    uuid: service.uuid,\n                                    name: name,\n                                    price: price,\n                                    subscription_plan_points: updatedSubscriptionPlanPoints,\n                                },\n                            ],\n                            description: values.description,\n                        },\n                    },\n                });\n            });\n    \n            try {\n                const responses = await Promise.all(apiPromises);\n                toast.success(responses[0]?.data?.updateSubscriptionPlanDetailsForWebsite?.message);\n\n                formik.resetForm();\n                refetch();\n            } catch (error: any) {\n                toast.error(error?.networkError?.result?.errors[0]?.message);\n            }\n        },\n    });\n\n    useEffect(() => {\n        if (data?.getSubscriptionPlansForWebsite?.data) {\n            const title = data?.getSubscriptionPlansForWebsite?.data?.title;\n            const subscriptionPlans = data?.getSubscriptionPlansForWebsite?.data?.subscription_plans?.map((plan: { subscription_plan_points: SubscriptionPlanPoint[]; name: string; price: string; uuid: string; }) => {\n                const subscriptionPoint = plan.subscription_plan_points?.map((point) => {\n                    return {\n                        title: point.title,\n                        uuid: point.uuid,\n                    };\n                });\n\n                return {\n                    name: plan.name,\n                    price: plan.price,\n                    uuid: plan.uuid,\n                    subscription_plan_points: subscriptionPoint,\n                };\n            });\n\n            formik.resetForm({\n                values: {\n                    title: title,   \n                    subscription_plans: subscriptionPlans,\n                },\n            });\n        }\n    }, [data?.getSubscriptionPlansForWebsite?.data]);\n\n    const planErrors = formik?.errors?.subscription_plans as any[];\n    return (\n        <div className='flex flex-col h-full px-5 py-2'>\n            <div className='flex flex-wrap mb-5 gap-x-5 gap-y-3'>\n                <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n                    <TextInput placeholder={t('Enter Title')} label={'Title'} required={true} name='title' id='title' value={formik.values.title} onChange={formik.handleChange} />\n                </div>\n                <div className='w-full'>\n                    <div className='my-5 '>\n                        {formik?.values?.subscription_plans?.map((serviceData: { name: string, price: string, subscription_plan_points: SubscriptionPlanPoint[] }, index: number) => (\n                          <div key={`serviceData-${index + 1}`}>\n                            <h4 key={`${index + 1}`} className='w-full mb-4'>{t('Plan')} {index + 1} :</h4>\n                            <div className='w-full grid grid-cols-2 gap-x-5 gap-y-3.5 '>\n                                <div className='w-full '>\n                                    <TextInput placeholder={t('Enter Plan')} label={'Plan'} required={true}\n                                        name={`subscription_plans[${index}].name`}\n                                        id={`name-${index}`}\n                                        onChange={formik.handleChange}\n                                        value={serviceData?.name}\n                                        error={planErrors?.[index]?.name}\n\n                                    />\n                                </div>\n                                <div className='w-full '>\n                                    <TextInput placeholder={t('Enter Price')} label={'Price'} required={true}\n                                        name={`subscription_plans[${index}].price`}\n                                        id={`price-${index}`}\n                                        onChange={formik.handleChange}\n                                        value={serviceData?.price}\n                                        error={planErrors?.[index]?.price}\n                                    />\n                                </div>\n                                {serviceData?.subscription_plan_points?.map((points: {title:string},subindex:number) => {\n                                  return(\n                                    <div key={`${index + 1}`} className='w-full mt-3'>\n                                    <label className='w-full'>{t('Key Points')} {subindex + 1} <span className='error'> *</span></label>\n                                    <div className='flex flex-wrap gap-x-5 gap-y-3.5'>\n                                        <div className='w-full '>\n                                            <TextInput placeholder={t('Enter Key Points')} required={true} \n                                             name={`subscription_plans[${index}]subscription_plan_points[${subindex}]title`}\n                                             id={`title-[${subindex}]`}\n                                             onChange={formik.handleChange}\n                                             value={points?.title}\n                                             error={planErrors?.[index]?.subscription_plan_points?.[subindex]?.title}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>)})}\n                            </div>\n                            </div>\n                        ))}\n\n                    </div>\n\n                </div>\n            </div>\n            <div className='flex py-5 mt-auto'>\n                <Button\n                    className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n                    type='button'\n                    label={t('Submit')}\n                    onClick={() => formik.handleSubmit()}\n                    title={`${t('Submit')}`}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SubscriptionPlan;\n","import { gql } from '@apollo/client';\n\nexport const LIST_TAG = gql`\nquery GetTags {\n    getTags {\n      message\n      data {\n        uuid\n        title\n        description\n        image\n        type\n      }\n    }\n  }`","import { gql } from '@apollo/client';\n\nexport const UPDATE_TAG = gql`\nmutation UpdateTag($tagData: UpdateTagsDto!) {\n    updateTag(tagData: $tagData) {\n      message\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect } from 'react'\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Button from '@components/button/button';\nimport TextInput from '@components/textInput/TextInput';\nimport useValidation from '@framework/hooks/validations';\nimport { LIST_TAG } from '@framework/graphql/queries/tag';\nimport { UPDATE_TAG } from '@framework/graphql/mutations/tag';\ninterface Type {\n  title: string;\n  description: string;\n  type: string;\n  uuid: string;\n  image?: string | null;\n  __typename?: string;\n}\n\nfunction Tag() {\n  const { t } = useTranslation();\n  const { data, refetch } = useQuery(LIST_TAG);\n  const [changeServices] = useMutation(UPDATE_TAG);\n  const { tagValidationSchema } = useValidation();\n  const initialValues: { type: Type[] } = {\n    type: [\n      {\n        title: '',\n        description: '',\n        type: '',\n        uuid: '',\n        image: ''\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (data?.getTags?.data?.length > 0) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const cleanedServices: Type[] = data?.getTags?.data.map(({ __typename, ...rest }: Type) => rest);\n      formik.setFieldValue('type', cleanedServices);\n    }\n  }, [data]);\n\n  const formik = useFormik({\n    validationSchema: tagValidationSchema,\n    initialValues,\n    onSubmit: async (values) => {\n      const apiPromises = values.type.map((service) => {\n        service.image = 'null';\n        return changeServices({\n          variables: {\n            tagData: {\n              updateTags: service\n            }\n          },\n        });\n      });\n      try {\n        const responses = await Promise.all(apiPromises);\n        toast.success(responses[0]?.data?.updateTag?.message);\n        refetch();\n      } catch (error: any) {\n        toast.error(error?.networkError?.result?.errors[0]?.message);\n      }\n    },\n  });\n\n\n  const serviceErrors = formik?.errors?.type as any[];\n\n  return (\n    <div className='px-5 pt-2 pb-5'>\n      {formik?.values?.type?.map((serviceData: { type: string, title: string, description: string, uuid: string }, index: number) => (\n        <div key={serviceData?.uuid} className='mb-5'>\n          <h4 className='mb-5'>{t(`Tag ${index + 1}`)}:</h4>\n          <div className='flex flex-wrap gap-x-5 gap-y-3'>\n\n            <div className='w-full 2lg:w-[calc(50%-10px)] 2xl:w-[calc(33.3%-13px)]'>\n              <TextInput\n                placeholder={t('Enter Title')}\n                label={'Title'}\n                required={true}\n                name={`type[${index}].title`}\n                id={`title-${index}`}\n                onChange={formik.handleChange}\n                value={serviceData.title}\n                error={serviceErrors?.[index]?.title && formik.touched.type?.[index]?.title ? serviceErrors?.[index]?.title : ''}\n              />\n            </div>\n            <div className='w-full 2xl:w-[calc(33.3%-13px)]'>\n              <TextInput\n                placeholder={t('Enter Description')}\n                label={'Description'}\n                required={true}\n                name={`type[${index}].description`}\n                id={`description-${index}`}\n                onChange={formik.handleChange}\n                value={serviceData.description}\n                error={serviceErrors?.[index]?.description && formik.touched.type?.[index]?.description ? serviceErrors?.[index]?.description : ''}\n              />\n            </div>\n            <div className='w-full 2xl:w-[calc(33.3%-13px)]'>\n              <TextInput\n                placeholder={t('Enter Type')}\n                label={'Type'}\n                required={true}\n                name={`type[${index}].type`}\n                id={`type-${index}`}\n                onChange={formik.handleChange}\n                value={serviceData.type}\n                error={serviceErrors?.[index]?.type && formik.touched.type?.[index]?.type ? serviceErrors?.[index]?.type : ''}\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n\n      <div className='flex'>\n        <Button\n          className='w-full ml-auto btn btn-primary whitespace-nowrap md:w-[140px]'\n          type='button'\n          label={t('Submit')}\n          onClick={() => formik.handleSubmit()}\n          title={`${t('Submit')}`}\n        />\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Tag;\n","import React from 'react';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport Tabs from '@components/whatIsOrganicWaste/tabs';\nimport { Tab } from 'src/types/component'\nimport Title from '@components/landingPageTab/TitleSubtitle';\nimport Services from '@components/landingPageTab/services';\nimport AboutUs from '@components/landingPageTab/aboutUs';\nimport OurClient from '@components/landingPageTab/ourClient';\nimport WasteCollection from '@components/landingPageTab/wasteCollection';\nimport CompanyRating from '@components/landingPageTab/companyRating';\nimport WhyChooseUs from '@components/landingPageTab/whyChooseUs';\nimport AboutCourses from '@components/landingPageTab/aboutCourses';\nimport Testimonials from '@components/landingPageTab/testimonials';\nimport SubscriptionPlan from '@components/landingPageTab/subscriptionPlan';\nimport Tag from '@components/landingPageTab/tag';\n\nconst Index = () => {\n\tconst tabs: Tab[] = [\n\t\t{ label: 'Title & Sub-Title', content: <Title />, id: 1 },\n\t\t{ label: 'Services', content: <Services />, id: 2 },\n\t\t{ label: 'About Us', content: <AboutUs />, id: 3 },\n\t\t{ label: 'Our Client', content: <OurClient />, id: 4 },\n\t\t{ label: 'Waste Collection', content: <WasteCollection />, id: 5 },\n\t\t{ label: 'Company Rating', content: <CompanyRating />, id: 6 },\n\t\t{ label: 'Why Choose Us', content: <WhyChooseUs />, id: 7 },\n\t\t{ label: 'About Course', content: <AboutCourses />, id: 8 },\n\t\t{ label: 'Testimonials', content: <Testimonials />, id: 9 },\n\t\t{ label: 'Subscription Plan', content: <SubscriptionPlan />, id: 10 },\n\t\t{ label: 'Tag', content: <Tag />, id: 11 },\n\t];\n\treturn (\n\t\t<>\n\t\t\t<UpdatedHeader />\n\t\t\t<div className='mb-5 [&>.tab]:h-full [&_.tab-item]:w-auto [&_.active]:h-full md:h-[calc(100%-155px)] h-[calc(100%-118px)] [&_.tab-content]:overflow-auto [&_.tab-list]:whitespace-nowrap [&_.tab-list]:pb-2 [&_.tab-item]:px-4 [&_.tab-list]:overflow-auto [&_.tab-content]:h-[calc(100%-70px)]'>\n\t\t\t\t<Tabs tabs={tabs} containerMinimize={false} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Index;\n"],"names":["UPDATE_TITLE","gql","_templateObject","_taggedTemplateLiteral","UPDATE_SUBTITLE","_templateObject2","GET_TITLE_WEBSITE","GET_SUBTITLE_WEBSITE","t","useTranslation","changeTitle","useMutation","changeSubTitle","data","refetch","useQuery","subtitleData","subtitleRefetch","changeTitleSubTitle","useValidation","formik","useFormik","validationSchema","initialValues","title","subtitle","onSubmit","async","_data$getTitleForWebs","_subtitleData$getSubt","getTitleForWebsite","variables","inputData","values","then","response","_response$data","_response$data$update","toast","success","updateTitleForWebsite","message","resetForm","catch","error","networkError","result","errors","getSubtitleForWebsite","_response$data2","_response$data2$updat","useEffect","_data$getTitleForWebs2","_subtitleData$getSubt2","_data$getTitleForWebs3","_subtitleData$getSubt3","userTitle","userSubTitle","_jsxs","className","children","_jsx","TextInput","placeholder","label","required","id","name","value","onChange","handleChange","Button","type","onClick","handleSubmit","concat","TitlePage","MANAGE_STEPS","UPDATE_SERVICES","_formik$errors","_formik$values","_formik$values$servic","image","setImage","useState","logo","cropDataLandingServiceIndex","setCropLandingServiceDataIndex","landingServiceCropper","setLandingServiceCropper","landingServiceLoading","setLandingServiceLoading","changeServices","landingServiceFileInputRef","useRef","cropperLandingServiceRef","createRef","changeServicesValidationSchema","_data$getStepsForWebs","_data$getStepsForWebs2","getStepsForWebsite","length","_data$getStepsForWebs3","cleanedServices","map","_ref","__typename","rest","setFieldValue","services","description","order","uuid","apiPromises","service","_responses$","_responses$$data","_responses$$data$upda","responses","Promise","all","updateStepDetailsForWebsite","_error$networkError","_error$networkError$r","_error$networkError$r2","onLadingServiceDeleteImage","useCallback","fileName","index","axios","delete","API_MEDIA_END_POINT","_error$response","_error$response$data","landingServiceDialogActionConst","_cropperLandingServic","current","cropper","_cropperLandingServic2","file","DATA_URL_TO_FILE","getCroppedCanvas","toDataURL","formData","FormData","append","uploadImage","getLandingServiceCropData","disabled","serviceErrors","serviceData","_serviceData$image","_serviceErrors$index","_formik$touched$servi","_formik$touched$servi2","_serviceErrors$index2","_serviceErrors$index3","_formik$touched$servi3","_formik$touched$servi4","_serviceErrors$index4","_serviceErrors$index5","_formik$touched$servi5","_formik$touched$servi6","_serviceErrors$index6","htmlFor","src","includes","IMAGE_BASE_URL","alt","multiple","accept","ref","e","landingServiceHandleLogo","files","preventDefault","dataTransfer","target","startsWith","size","MAX_FILE_SIZE","reader","FileReader","onload","readAsDataURL","Camera","Cross","touched","Dialog","header","visible","style","width","borderRadius","onHide","footer","Cropper","height","zoomTo","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","guides","cropBoxResizable","GET_ABOUT_US","UPDATE_ABOUT_US","UPDATE_ABOUT_US_POINT","_data$getAboutUsDetai6","_formik$errors2","_formik$values2","_formik$errors3","_formik$errors4","_formik$values3","updateAboutUs","updateAboutUsPoint","changeAboutUsValidationSchema","_data$getAboutUsDetai","getAboutUsDetailsForWebsite","_data$getAboutUsDetai2","_data$getAboutUsDetai3","_data$getAboutUsDetai4","_data$getAboutUsDetai5","about","aboutDetails","landing_page_points","aboutDetail","updateAboutUsDetailsForWebsite","landing_page_id","forEach","handleCheckPoint","aboutErrors","point","_aboutErrors$index","_formik$touched$about","_formik$touched$about2","_aboutErrors$index2","CLIENT_DETAIL","UPDATE_CLIENT","_formik$values2$manag","ourClientImage","setOurClientImage","cropDataIndex","setCropDataIndex","ourClientCropper","setOurClientCropper","ourClientCropperRef","ourClientFileInputRef","ourClientLoading","setOurClientLoading","changeOurClientServices","ClientValidationSchema","manageClient","updateClientDetailsForWebsite","onOurClientDeleteImage","ourClientDialogActionConst","_ourClientCropperRef$","_ourClientCropperRef$2","getOurClientCropData","_data$getClientsForWe","_data$getClientsForWe2","getClientsForWebsite","_data$getClientsForWe3","_cleanedServices$0$ti","_cleanedServices$","defaultTitle","setValues","clientErrors","_clientErrors$index","_clientErrors$index2","handleOurClientLogo","SERVICE_DETAIL","UPDATE_WEST_COLLECTION","UPDATE_WEST_COLLECTION_POINT","_data$getServicesForW6","_formik$values4","_formik$values4$landi","updateWastPoint","cropDataWasteCollection","setCropDataWasteCollection","wasteCollectionImage","setWasteCollectionImage","wasteCollectionCropper","setWasteCollectionCropper","fileWasteCollectionInputRef","wasteCollectionCropperLoading","setWasteCollectionLoading","wasteCollectionValidationSchema","cropperWasteCollectionRef","_data$getServicesForW","getServicesForWebsite","_data$getServicesForW2","_data$getServicesForW3","_data$getServicesForW4","_data$getServicesForW5","landing_page_services","updateServiceDetailsForWebsite","apiWastCollectionPromises","handleWastCollectionCheckPoint","onDeleteWastCollectionImage","dialogWastActionConst","_cropperWasteCollecti","_cropperWasteCollecti2","getWastCropData","wasteErrors","_wasteErrors$index","_formik$touched$landi","_formik$touched$landi2","_wasteErrors$index2","_wasteErrors$index3","_formik$touched$landi3","_formik$touched$landi4","_wasteErrors$index4","_wasteErrors$index5","_formik$touched$landi5","_formik$touched$landi6","_wasteErrors$index6","handleWastCollectionLogo","UPDATE_COUNT","GET_COUNT","_formik$values$rating","changeCount","ratingValidationSchema","_data$getStatisticsFo","_data$getStatisticsFo2","getStatisticsForWebsite","_data$getStatisticsFo3","rating","updateStatisticDetailsForWebsite","ratingErrors","_ratingErrors$index","_formik$touched$ratin","_formik$touched$ratin2","_ratingErrors$index2","_ratingErrors$index3","_formik$touched$ratin3","_formik$touched$ratin4","_ratingErrors$index4","WHY_CHOOSE_US","WHY_CHOOSE","_formik$values$image","changeChooseUs","loading","setLoading","setCropper","fileInputRef","cropperRef","whyChooseValidationSchema","updateWhyChooseUsDetailsForWebsite","_data$getWhyChooseUsF","getWhyChooseUsForWebsite","_data$getWhyChooseUsF2","whyChooseUsData","onDeleteImage","dialogActionConst","_cropperRef$current","_cropperRef$current2","getCropData","handleLogo","LIST_ABOUT_COURSE","UPDATE_ABOUT_COURSE","UPDATE_ABOUT_COURSE_POINT","_data$getLearnAboutCo6","updateAboutCourse","updateAboutCoursePoint","aboutCourseValidationSchema","_data$getLearnAboutCo","getLearnAboutCoursesForWebsite","_data$getLearnAboutCo2","_data$getLearnAboutCo3","_data$getLearnAboutCo4","_data$getLearnAboutCo5","aboutCoursePoint","updateAboutCourseDetailsForWebsite","handleCheckPointAboutCourse","aboutCourseErrors","_aboutCourseErrors$in","_aboutCourseErrors$in2","UPDATE_TESTIMONIAL","UPDATE_TESTIMONIAL_POINT","ADD_TESTIMONIAL_POINT","_templateObject3","DELETE_TESTIMONIAL_POINT","_templateObject4","LIST_TESTIMONIALS","_formik$values6","_formik$values6$landi","updateTestimonial","updateTestimonialPoint","addTestimonialPoint","removeTestimonial","deleteTestimonial","setDeleteTestimonial","testimonialValidationSchema","landing_page_testimonials","tag","updateTestimonialDetailsForWebsite","getTestimonialsForWebsite","_data$getTestimonials","_data$getTestimonials2","_data$getTestimonials3","_data$getTestimonials4","testimonialsDetails","testimonials","_formik$values$landin","push","deleteIds","landingPageTestimonials","testimonialsErrors","_testimonialsErrors$i","_testimonialsErrors$i2","_testimonialsErrors$i3","_testimonialsErrors$i4","_Fragment","handleDeleteTestimonial","_formik$values5","testimonialsList","splice","handleAddTestimonial","aspectRatio","LIST_PLAN","UPDATE_SUBSCRIPTION_PLAN","_data$getSubscription9","_formik$values$subscr","changeSubscription","planValidationSchema","subscription_plans","price","subscription_plan_points","_values$subscription_","_data$getSubscription","_data$getSubscription2","updatedSubscriptionPlanPoints","getSubscriptionPlansForWebsite","updateSubscriptionPlanDetailsForWebsite","_data$getSubscription3","_data$getSubscription4","_data$getSubscription5","_data$getSubscription6","_data$getSubscription7","_data$getSubscription8","subscriptionPlans","plan","_plan$subscription_pl","subscriptionPoint","planErrors","_planErrors$index","_planErrors$index2","_serviceData$subscrip","points","subindex","_planErrors$index3","_planErrors$index3$su","_planErrors$index3$su2","LIST_TAG","UPDATE_TAG","_formik$values$type","tagValidationSchema","_data$getTags","_data$getTags$data","getTags","_data$getTags2","tagData","updateTags","updateTag","_formik$touched$type","_formik$touched$type$","_formik$touched$type2","_formik$touched$type3","_formik$touched$type4","_formik$touched$type5","Index","tabs","content","Title","Services","AboutUs","OurClient","WasteCollection","CompanyRating","WhyChooseUs","AboutCourses","Testimonials","SubscriptionPlan","Tag","UpdatedHeader","Tabs","containerMinimize"],"sourceRoot":""}