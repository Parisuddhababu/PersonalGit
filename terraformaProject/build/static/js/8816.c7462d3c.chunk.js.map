{"version":3,"file":"static/js/8816.c7462d3c.chunk.js","mappings":"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","sources":["components/playlists/createNewPlaylist.tsx","components/playlists/playlists.tsx","framework/graphql/mutations/course.ts"],"sourcesContent":["import Button from '@components/button/button'\nimport { Cross, UploadImage } from '@components/icons/icons'\nimport TextInput from '@components/textInput/TextInput'\nimport React, { createRef, useCallback, useRef, useState } from 'react'\nimport { useFormik } from 'formik';\nimport { v4 as uuidv4 } from 'uuid';\nimport { whiteSpaceRemover } from '@utils/helpers';\nimport { createPlaylist } from '@framework/graphql/graphql';\nimport { CREATE_NEW_PLAYLIST } from '@framework/graphql/mutations/course';\nimport axios from 'axios';\nimport { Dialog } from 'primereact/dialog';\nimport Cropper, { ReactCropperElement } from 'react-cropper';\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'; // theme\nimport 'primereact/resources/primereact.css'; // core css\nimport 'cropperjs/dist/cropper.css';\nimport { API_MEDIA_END_POINT, DATA_URL_TO_FILE, MAX_FILE_SIZE, uploadImage } from '@config/constant';\nimport { useMutation } from '@apollo/client';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\n\ntype PlayListCallbackType = (data: boolean, getRefetchData: { refetch: boolean }) => void;\n\ninterface Props {\n    playList: boolean;\n    playListCallBack: PlayListCallbackType;\n}\n\nfunction CreateNewPlaylist({ playList, playListCallBack }: Readonly<Props>) {\n    const { t } = useTranslation();\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const [cropper, setCropper] = useState(false);\n    const [image, setImage] = useState('');\n    const cropperRef = createRef<ReactCropperElement>();\n    const [createNewPlaylist, playListLoading] = useMutation(CREATE_NEW_PLAYLIST);\n    const [imageLoader,setImageLoader] = useState(false);\n    const initialValues = {\n        playlistName: '',\n        playListImageUploadFileName: '',\n    }\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: () => {\n            //\n        },\n    });\n\n    const addNewPlayList = useCallback(() => {\n        if (formik.values.playlistName.length > 1 && formik.values.playlistName.length < 31 && formik.values.playListImageUploadFileName) {\n            createNewPlaylist({\n                variables: {\n                    playlistData: {\n                        name: formik.values.playlistName,\n                        image: formik.values.playListImageUploadFileName,\n                    }\n                },\n            }).then((res) => {\n                const data = res.data.createPlaylist as createPlaylist;\n                toast.success(data?.message);\n                formik.resetForm();\n                playListCallBack(false, { refetch: true });\n            })\n                .catch((err) => {\n                    toast.error(err?.networkError?.result?.errors?.[0]?.message);\n                });\n        }\n        if (formik.values.playlistName.length < 2) {\n            formik.setFieldError('playlistName', 'Playlist Name must be at least 2 characters')\n        }\n        if (formik.values.playlistName.length > 100) {\n            formik.setFieldError('playlistName', 'Playlist Name must be at most 100 characters')\n        }\n        if (formik.values.playlistName.length === 0) {\n            formik.setFieldError('playlistName', 'Please Enter Playlist Name')\n        }\n        if (!formik.values.playListImageUploadFileName) {\n            formik.setFieldError('playListImageUploadFileName', 'Please upload playlist image.')\n        }\n    }, [formik]);\n\n    const onCancel = () => {\n        playListCallBack(false, { refetch: false });\n        formik.resetForm();\n    };\n\n    const OnBlurBanner = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n        formik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n    }, []);\n\n    const onDeleteImage = useCallback(async (): Promise<void> => {\n        const data = { fileName: formik.values.playListImageUploadFileName };\n        // Attempt to Delete the Image\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                formik.setFieldValue('playListImageUploadFileName', '')\n            })\n            .catch((error) => {\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik]);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const handlePlaylistProfileImage = useCallback((e: any) => {\n        e.preventDefault();\n        playListCallBack(false, { refetch: false });\n        let files;\n        if (e.dataTransfer) {\n            files = e.dataTransfer.files;\n        } else if (e.target) {\n            files = e.target.files;\n        }\n        if (files && files?.length > 0) {\n            const file = files[0];\n            if (file.type.startsWith('image/')) {\n                if (file.size > MAX_FILE_SIZE) {\n                    toast.error('Image size must be less than 5MB');\n                    playListCallBack(true, { refetch: false });\n                } else {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        setImage(reader.result as any);\n                        setCropper(true);\n                    };\n                    reader.readAsDataURL(file);\n                }\n            } else {\n                toast.error('Please select a valid image file');\n                playListCallBack(true, { refetch: false });\n            }\n        }\n        if (fileInputRef.current) {\n            fileInputRef.current.value = ''; // This clears the input field\n        }\n    }, []);\n\n    const getCropData = async (): Promise<void> => {\n        if (typeof cropperRef.current?.cropper !== 'undefined') {\n            await setImageLoader(true);\n            let fileName: string | null = null;\n            const file = DATA_URL_TO_FILE(cropperRef.current?.cropper.getCroppedCanvas().toDataURL(), 'PlaylistProfilePreview.png');\n            const formData = new FormData();\n            formData.append('image', file);\n            fileName = await uploadImage(formData,'courseImage');\n            if (fileName) {\n                formik.setFieldValue('playListImageUploadFileName', fileName)\n                playListCallBack(true, { refetch: false });\n            }\n            setCropper(false);\n            await setImageLoader(false);\n        }\n    }\n\n    const dialogActionConst = () => {\n        return (\n            <div className='flex justify-end gap-3 md:gap-5'>\n                <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setCropper(false)} title='Cancel' />\n                <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" disabled={imageLoader} onClick={() => getCropData()} title='Save'/>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {playList && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${playList ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${playList ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n                        <div className='w-full mx-5 max-w-[700px]'>\n                            <div className='relative bg-white rounded-xl'>\n                                <div className='flex flex-wrap items-center justify-between gap-4 p-5 border-b bg-accents-2 rounded-t-xl'>\n                                    <p className='text-lg font-bold md:text-xl text-baseColor'>{'Add New Playlist'}</p>\n                                    <Button onClick={onCancel} label={t('')} title={`${t('Close')}`}>\n                                        <span className='text-xl-22'><Cross className='text-error' /></span>\n                                    </Button>\n                                </div>\n                                <div className='w-full'>\n                                    <div className='p-5 bg-white max-h-[calc(100vh-260px)] overflow-auto'>\n                                        <TextInput placeholder={t('Add Name')} name='playlistName' onChange={formik.handleChange} label={t('Playlist Name')} value={formik.values.playlistName} id='playlistName' required={true} error={formik.errors.playlistName} onBlur={OnBlurBanner} />\n                                    </div>\n\n                                    <div className=\"w-full flex flex-col h-[176px] lg:w-[calc(50%-10px)] xl:min-w-[480px] xl:w-[calc(33.3%-14px)] mx-auto\">\n                                        <label\n                                            htmlFor='Playlist Profile Image'\n                                            className='relative flex items-center justify-center h-full p-5 overflow-hidden bg-white border border-solid cursor-pointer rounded-xl border-border-primary hover:bg-gray-100'\n                                        >\n                                            <div className='flex flex-col items-center justify-center h-full overflow-hidden rounded-xl'>\n                                                {!formik.values.playListImageUploadFileName && <span className='text-xl-50'><UploadImage className='mb-2 fill-secondary' /></span>}\n                                                {formik.values.playListImageUploadFileName && <img src={process.env.REACT_APP_IMAGE_BASE_URL + '/' + formik.values.playListImageUploadFileName} alt='Playlist Profile Image' className='object-fill w-full h-full' />}\n                                                {!formik.values.playListImageUploadFileName && <p className='text-xl text-light-grey'>{t('Upload Image')}</p>}\n                                            </div>\n                                            {formik.values.playListImageUploadFileName && <Button className='absolute p-[6px] rounded-full cursor-pointer top-4 right-4 md:top-5 md:right-5 bg-error' type='button' label='' onClick={() => onDeleteImage()} title={`${t('Close')}`} >\n                                                <Cross className='fill-white' fontSize='12' />\n                                            </Button>}\n                                            <input\n                                                id='Playlist Profile Image'\n                                                type=\"file\"\n                                                accept=\".png, .jpeg\"\n                                                ref={fileInputRef}\n                                                onChange={handlePlaylistProfileImage}\n                                                className=\"hidden\"\n                                                key={uuidv4()}\n                                            />\n                                        </label>\n                                        {formik?.errors?.playListImageUploadFileName ? <span className='-mt-1 md:text-xs-15 error'>{formik?.errors?.playListImageUploadFileName}</span> : ''}\n                                    </div>\n\n                                    <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                        <Button className='btn-primary btn-normal w-full md:w-[90px]' label={t('Add')} onClick={addNewPlayList} type='button' disabled={playListLoading.loading} title={`${t('Add')}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={cropper} style={{ width: '50vw', borderRadius: '12px' }} onHide={() => setCropper(false)} footer={() => dialogActionConst()}>\n                {\n                    image &&\n                    <Cropper\n                        ref={cropperRef}\n                        style={{ height: 400, width: '100%' }}\n                        zoomTo={0.5}\n                        aspectRatio={1}\n                        preview=\".img-preview\"\n                        src={image}\n                        viewMode={1}\n                        minCropBoxHeight={10}\n                        minCropBoxWidth={10}\n                        background={false}\n                        responsive={true}\n                        autoCropArea={1}\n                        checkOrientation={false}\n                        guides={true}\n                        cropBoxResizable={false}\n                    />\n                }\n            </Dialog>\n        </>\n    )\n}\n\nexport default CreateNewPlaylist\n","import { PlayIcon, PlayIcon2, Search } from '@components/icons/icons';\nimport TextInput from '@components/textInput/TextInput';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '@assets/images/login-img.jpg';\nimport Button from '@components/button/button';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTES } from '@config/constant';\nimport { useQuery } from '@apollo/client';\nimport { GET_PLAYLIST_DATA } from '@framework/graphql/queries/getCourses';\nimport { DropdownOptionType, PaginationParams } from '@types';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { toast } from 'react-toastify';\nimport CreateNewPlaylist from './createNewPlaylist';\nimport { useSelector } from 'react-redux';\nimport { UserRoles } from 'src/types/common';\nimport ButtonWithoutLoader from '@components/button/buttonWithoutLoader';\n\ntype PlaylistsProps = {\n\tslider: boolean\n};\n\ntype PlaylistData = {\n\tname: string,\n\tuuid: string,\n\tlogo?: string,\n\tcourseCount?: string,\n\tcourse_count?: number,\n\timage: string\n}\n\nconst Playlists = ({ slider }: PlaylistsProps) => {\n\tconst { t } = useTranslation();\n\tconst navigate = useNavigate();\n\tconst [onViewMore, setOnViewMore] = useState<boolean>(false);\n\tconst [isRefetching, setIsRefetching] = useState<boolean>(false);\n\tconst [playList, setPlayList] = useState<boolean>(false);\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tconst [isTemplateData, setIsTemplateData] = useState<any[]>([]);\n\tconst { data: getAllPlaylistData, refetch, loading } = useQuery(GET_PLAYLIST_DATA, { variables: { limit: 8, page: 1, sortField: 'createdAt', sortOrder: 'descend', search: '' } });\n\tconst [filterData, setFilterData] = useState<PaginationParams>({ limit: 8, page: 1, sortField: 'createdAt', sortOrder: 'descend', search: '' });\n\n\tconst settings = {\n\t\tdots: false,\n\t\tinfinite: false,\n\t\tarrows: true,\n\t\tspeed: 500,\n\t\tslidesToShow: 4,\n\t\tslidesToScroll: 4,\n\t\tinitialSlide: 0,\n\t\tresponsive: [\n\t\t\t{\n\t\t\t\tbreakpoint: 1600,\n\t\t\t\tsettings: {\n\t\t\t\t\tslidesToShow: 3,\n\t\t\t\t\tslidesToScroll: 3,\n\t\t\t\t\tinitialSlide: 3,\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tbreakpoint: 1199,\n\t\t\t\tsettings: {\n\t\t\t\t\tslidesToShow: 2,\n\t\t\t\t\tslidesToScroll: 2,\n\t\t\t\t\tinitialSlide: 2,\n\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tbreakpoint: 991,\n\t\t\t\tsettings: {\n\t\t\t\t\tslidesToShow: 1,\n\t\t\t\t\tslidesToScroll: 1,\n\t\t\t\t\tinitialSlide: 1,\n\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\tconst courseDetailsPage = useCallback((id: string) => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.allPlayListCourse}/?playlist_id=${id}`)\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst tempDataArr: DropdownOptionType[] = [];\n\t\tgetAllPlaylistData?.getPlayLists?.data?.playlists?.map((data: PlaylistData) => {\n\t\t\ttempDataArr.push(data);\n\t\t});\n\t\tif (onViewMore) {\n\t\t\tsetIsTemplateData((prev) => {\n\t\t\t\treturn [...prev, ...tempDataArr]\n\t\t\t});\n\t\t\tsetOnViewMore(onViewMore ?? !onViewMore);\n\t\t} else {\n\t\t\tsetIsTemplateData(tempDataArr);\n\t\t}\n\t}, [getAllPlaylistData]);\n\n\t/**\n   *\n   * @param e Method used for store search value\n   */\n\tconst handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetFilterData({ ...filterData, search: e.target.value })\n\t}, [filterData])\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tsetIsRefetching(true);\n\t\t\ttry {\n\t\t\t\tawait refetch({ ...filterData });\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t} catch (error: any) {\n\t\t\t\ttoast.error(error?.networkError?.result?.errors?.[0]?.message)\n\t\t\t} finally {\n\t\t\t\tsetIsRefetching(false);\n\t\t\t\tsetOnViewMore(onViewMore ?? !onViewMore);\n\t\t\t}\n\t\t};\n\t\tif (filterData) {\n\t\t\tfetchData();\n\t\t}\n\t}, [filterData]);\n\n\tconst viewMore = () => {\n\t\tsetOnViewMore(true);\n\t\tsetFilterData({\n\t\t\t...filterData,\n\t\t\tpage: filterData.page + 1,\n\t\t});\n\t}\n\n\tconst onAddPlayList = () => {\n\t\tsetPlayList(true);\n\t}\n\n\tconst { templates } = useSelector(((state: { rolesManagement: { templates: UserRoles } }) => state.rolesManagement));\n\n\tconst headerActionConst = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{templates?.write &&\n\t\t\t\t\t<Button className='border-primary border btn-secondary btn ml-auto mr-2 px-6' type='button' label={'Create new playlist'} onClick={() => onAddPlayList()} />\n\t\t\t\t}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst playListCallBack = useCallback((data: boolean, getRefetchData: { refetch: boolean }) => {\n\t\tsetPlayList(data);\n\t\tif (getRefetchData?.refetch) {\n\t\t\trefetch();\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t{!slider && <UpdatedHeader headerTitle='Manage Course Playlists' headerActionConst={headerActionConst} />}\n\t\t\t<div className='p-5 border border-solid border-border-primary rounded-xl'>\n\t\t\t\t<div className=\"flex flex-wrap items-center justify-between gap-3 mb-5 md:gap-5\">\n\t\t\t\t\t<h6>{t('All Playlists')}</h6>\n\t\t\t\t\t{slider && <Button className='btn btn-normal bg-primary text-white text-xs w-full sm:w-[80px] h-[36px] whitespace-nowrap' label={t('View All')} type='button' onClick={() => navigate(`/${ROUTES.app}/${ROUTES.playlist}`)} title={`${t('View All')}`} />}\n\t\t\t\t\t{!slider && <TextInput placeholder={t('Search')} type='text' id='table-search' value={filterData.search} onChange={handleChange} inputIcon={<Search fontSize='18' />} />}\n\t\t\t\t</div>\n\n\t\t\t\t{!slider &&\n\t\t\t\t\t<div className=\"flex flex-wrap justify-center gap-5 sm:justify-start\">\n\t\t\t\t\t\t{getAllPlaylistData?.getPlayLists?.data?.count > 0 ? <>\n\t\t\t\t\t\t\t{isTemplateData?.map((data: PlaylistData) => (\n\t\t\t\t\t\t\t\t<div onClick={() => courseDetailsPage(data.uuid)} className='2xl:w-[calc(25%-15px)] xl:w-[calc(33.3%-15px)] lg:w-[calc(50%-15px)] border-border-primary rounded-xl w-full relative flex flex-col rounded-t-xl' key={data.uuid}>\n\t\t\t\t\t\t\t\t\t<picture className='w-full h-[200px] block'>\n\t\t\t\t\t\t\t\t\t\t<img src={(!data?.image||data?.image==='') ? logo:process.env.REACT_APP_IMAGE_BASE_URL + '/' + data?.image} alt=\"image\" title='image' className='object-cover w-full h-full rounded-t-xl' />\n\t\t\t\t\t\t\t\t\t</picture>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-start justify-between w-full gap-2 p-5 border-b border-solid border-x border-border-primary rounded-b-xl\">\n\t\t\t\t\t\t\t\t\t\t<span className='font-bold leading-5 break-words max-w-[190px]'>{data.name}</span>\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center min-w-[105px]\">\n\t\t\t\t\t\t\t\t\t\t\t<span className='text-xl-22'><PlayIcon2 className='pt-1 fill-secondary' /></span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{`${data?.course_count} Courses`}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='absolute top-0 left-0 flex flex-col items-center justify-center w-full h-full transition duration-300 ease-in-out opacity-0 rounded-xl bg-playlist hover:opacity-100 hover:transition hover:duration-300 hover:ease-in-out hover:cursor-pointer'>\n\t\t\t\t\t\t\t\t\t\t<Button type='button' label='' className='bg-white w-[60px] h-[60px] rounded-full text-center p-2.5 block mb-2.5 play-btn' title={`${t('Play')}`}><span className='text-xl-40'><PlayIcon className='fill-secondary' /></span></Button>\n\t\t\t\t\t\t\t\t\t\t<span className='text-sm leading-5 text-white'>View All Courses</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</> : <div>No Records Found!!!</div>}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{!slider && <div className=\"flex items-center justify-center my-6\">\n\t\t\t\t\t<ButtonWithoutLoader className='btn-secondary btn-normal w-full md:w-[120px]' label={isRefetching && onViewMore ? t('Loading...!') : t('Load More')} onClick={() => viewMore()} disabled={loading || isRefetching || (getAllPlaylistData?.getPlayLists?.data?.count === isTemplateData?.length)} title={`${isRefetching && onViewMore ? t('Loading...!') : t('Load More')}`} />\n\t\t\t\t</div>}\n\n\t\t\t\t{slider && <Slider {...settings}>\n\t\t\t\t\t{getAllPlaylistData?.getPlayLists?.data?.count > 0 && isTemplateData?.map((data: PlaylistData) => (\n\t\t\t\t\t\t<div className=\"px-2 5\" key={data?.uuid} onClick={() => courseDetailsPage(data.uuid)}>\n\t\t\t\t\t\t\t<div className='relative w-full h-full border-border-primary rounded-t-xl' key={data?.uuid}>\n\t\t\t\t\t\t\t\t<picture className='w-full h-[200px] block'>\n\t\t\t\t\t\t\t\t\t<img src={(!data?.image||data?.image==='') ? logo: process.env.REACT_APP_IMAGE_BASE_URL + '/' + data?.image} alt=\"image\" title='image' className='object-cover w-full h-full rounded-t-xl' />\n\t\t\t\t\t\t\t\t</picture>\n\t\t\t\t\t\t\t\t<div className=\"flex items-start justify-between w-full gap-2 p-5 border-b border-solid border-x border-border-primary rounded-b-xl\">\n\t\t\t\t\t\t\t\t\t<span className='font-bold leading-5 break-words max-w-[190px]'>{data.name}</span>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center min-w-[105px]\">\n\t\t\t\t\t\t\t\t\t\t<span className='text-xl-22'><PlayIcon2 className='pt-1 fill-secondary' /></span>\n\t\t\t\t\t\t\t\t\t\t<span>{`${data?.course_count} Courses`}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='absolute top-0 left-0 flex flex-col items-center justify-center w-full h-full transition duration-300 ease-in-out opacity-0 rounded-xl bg-playlist hover:opacity-100 hover:transition hover:duration-300 hover:ease-in-out hover:cursor-pointer'>\n\t\t\t\t\t\t\t\t\t<Button type='button' label='' className='bg-white w-[60px] h-[60px] rounded-full text-center p-2.5 block mb-2.5 play-btn'><span className='text-xl-40'><PlayIcon className='fill-secondary' /></span></Button>\n\t\t\t\t\t\t\t\t\t<span className='text-sm leading-5 text-white'>View All Courses</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</Slider>}\n\t\t\t</div>\n\n\t\t\t<CreateNewPlaylist playListCallBack={playListCallBack} playList={playList} />\n\t\t</>\n\t);\n};\nexport default Playlists;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_NEW_PLAYLIST = gql`\nmutation CreatePlaylist($playlistData: CreatePlaylistDto!) {\n    createPlaylist(playlistData: $playlistData) {\n        data {\n          uuid\n          name\n        }\n        message\n    }\n  }\n`\n\nexport const CREATE_NEW_COURSE = gql`\n mutation CourseCreateStepFour($courseData: CreateCourseStepFourDto!) {\n  courseCreateStepFour(courseData: $courseData) {\n    message\n  }\n}\n`\n\nexport const UPDATE_COURSE = gql`\n  mutation UpdateCourse($courseData: UpdateCourseDto!) {\n    updateCourse(courseData: $courseData) {\n      message\n      data {\n        description\n        image\n        instructor_name\n        instructor_profile\n        instructor_qualification\n        is_certification\n        is_template\n        level\n        prerequisite\n        reward_point\n        subtitle\n        thumbnails\n        title\n        total_duration\n        uuid\n      }\n    }\n  }\n`\n\nexport const DELETE_COURSE = gql`\n  mutation DeleteCourse($courseId: String!) {\n    deleteCourse(courseId: $courseId) {\n      message   \n    }\n  }\n`\n\nexport const COURSE_CREATE = gql`\nmutation CourseCreateStepOne($courseData: CreateCourseDto!) {\n  courseCreateStepOne(courseData: $courseData) {\n    message\n    data {\n      uuid\n      title\n      description\n      category {\n        name\n        uuid\n      }\n      prerequisite\n      course_image\n      banner_image\n      instructor_profile\n      instructor_name\n      instructor_qualification\n      is_template\n      is_draft\n      createdAt\n      highlights {\n        id\n        uuid\n        name\n      }\n    }\n  }\n}`;\n\nexport const CREATE_CONTENT_STEP_2 = gql`mutation CourseCreateStepTwo($courseData: CreateCourseStepOneDto!) {\n  courseCreateStepTwo(courseData: $courseData) {\n    message\n    data {\n      course_chapters {\n        chapter_content {\n          image\n          uuid\n          description\n          youtube_url\n          pdf_url\n        }\n        uuid\n        title\n        type\n        order\n        user_course_progress {\n          uuid\n          video_last_check_time\n          is_chapter_completed\n        }\n        chapter_quiz {\n          uuid\n          question\n          order\n          type\n          quiz_question {\n            uuid\n            option\n            is_correct\n            order\n          }\n        }\n      }\n      uuid\n      is_draft\n      category {\n        uuid\n        name\n        description\n        status\n        image_url\n      }\n      is_template\n    }\n  }\n}`;\n\nexport const CREATE_FAQ_STEP_3 = gql`mutation CourseCreateStepThree($courseData: CreateCourseStepThreeDto!) {\n  courseCreateStepThree(courseData: $courseData) {\n    message\n    data {\n      id\n      uuid\n      question\n      answer\n      order\n    }\n  }\n}`;\n\n\n"],"names":["_ref","_formik$errors","_formik$errors2","playList","playListCallBack","t","useTranslation","fileInputRef","useRef","cropper","setCropper","useState","image","setImage","cropperRef","createRef","createNewPlaylist","playListLoading","useMutation","CREATE_NEW_PLAYLIST","imageLoader","setImageLoader","formik","useFormik","initialValues","playlistName","playListImageUploadFileName","onSubmit","addNewPlayList","useCallback","values","length","variables","playlistData","name","then","res","data","createPlaylist","toast","success","message","resetForm","refetch","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","_err$networkError$res3","error","networkError","result","errors","setFieldError","OnBlurBanner","e","setFieldValue","target","whiteSpaceRemover","onDeleteImage","async","fileName","axios","delete","concat","API_MEDIA_END_POINT","_error$response","_error$response$data","response","handlePlaylistProfileImage","_files","files","preventDefault","dataTransfer","file","type","startsWith","size","MAX_FILE_SIZE","reader","FileReader","onload","readAsDataURL","current","value","dialogActionConst","_jsxs","className","children","_jsx","Button","label","onClick","title","disabled","_cropperRef$current","_cropperRef$current2","DATA_URL_TO_FILE","getCroppedCanvas","toDataURL","formData","FormData","append","uploadImage","getCropData","_Fragment","id","tabIndex","onCancel","Cross","TextInput","placeholder","onChange","handleChange","required","onBlur","htmlFor","UploadImage","src","process","alt","fontSize","accept","ref","uuidv4","loading","Dialog","header","visible","style","width","borderRadius","onHide","footer","Cropper","height","zoomTo","aspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","guides","cropBoxResizable","_getAllPlaylistData$g4","_getAllPlaylistData$g5","_getAllPlaylistData$g6","_getAllPlaylistData$g7","_getAllPlaylistData$g8","_getAllPlaylistData$g9","slider","navigate","useNavigate","onViewMore","setOnViewMore","isRefetching","setIsRefetching","setPlayList","isTemplateData","setIsTemplateData","getAllPlaylistData","useQuery","GET_PLAYLIST_DATA","limit","page","sortField","sortOrder","search","filterData","setFilterData","courseDetailsPage","ROUTES","app","allPlayListCourse","useEffect","_getAllPlaylistData$g","_getAllPlaylistData$g2","_getAllPlaylistData$g3","tempDataArr","getPlayLists","playlists","map","push","prev","_error$networkError","_error$networkError$r","_error$networkError$r2","_error$networkError$r3","fetchData","templates","useSelector","state","rolesManagement","getRefetchData","UpdatedHeader","headerTitle","headerActionConst","write","playlist","inputIcon","Search","count","uuid","logo","PlayIcon2","course_count","PlayIcon","ButtonWithoutLoader","Slider","dots","infinite","arrows","speed","slidesToShow","slidesToScroll","initialSlide","breakpoint","settings","CreateNewPlaylist","gql","_templateObject","_taggedTemplateLiteral","CREATE_NEW_COURSE","_templateObject2","DELETE_COURSE","_templateObject3","_templateObject4","COURSE_CREATE","_templateObject5","CREATE_CONTENT_STEP_2","_templateObject6","CREATE_FAQ_STEP_3","_templateObject7"],"sourceRoot":""}