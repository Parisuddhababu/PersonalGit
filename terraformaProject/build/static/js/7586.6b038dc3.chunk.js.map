{"version":3,"file":"static/js/7586.6b038dc3.chunk.js","mappings":"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","sources":["framework/graphql/queries/getCompanyBranches.ts","framework/graphql/mutations/updateSubscriberEmployeeUser.ts","views/user/userDetails/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_COMPANY_BRANCHES = gql`\n  query GetCompanyBranches($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!, $companyId: String!) {\n    getCompanyBranches(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search, companyId: $companyId) {\n      message\n      data {\n        count\n        branches {          \n          uuid\n          branch {\n            location\n            uuid\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_COMPANY_TENANT_DETAILS = gql`\n  query GetCompanyTenantDetails($companyId: String!, $branchId: String!) {\n    getCompanyTenantDetails(company_id: $companyId, branch_id: $branchId) {\n      message\n      data {\n        email\n        company_name\n        website\n        authorized_person\n        industry_type\n        type        \n        phone_number\n        country_code\n        location\n        total_employees\n      }\n    }\n  }\n`\n\nexport const GET_COMPANY_CONTRACTOR_DETAILS = gql`\nquery GetCompanyContractorDetails($branchId: String!, $companyId: String!) {\n  getCompanyContractorDetails(branch_id: $branchId, company_id: $companyId) {\n    message\n    data {\n      authorized_person\n      company_name\n      email\n      industry_type\n      location\n      total_employees\n      phone_number\n      country_code\n      type\n      website\n    }\n  }\n}\n`\n\nexport const GET_COMPANY_TENANT_EMPLOYEE_LIST = gql`\nquery GetCompanyTenantEmployeeList($userData: GetSubscriberDto!) {\n  getCompanyTenantEmployeeList(userData: $userData) {\n    data {\n      employee {\n        email\n        uuid\n        status\n        first_name\n        last_name\n        phone_number\n        country_code {\n          name\n          id\n          uuid\n          countryCode\n          phoneCode\n        }\n        department\n        user_type\n        company_id {\n          uuid\n          name\n          description\n          type\n          attachments          \n          website_url          \n          industryType {\n            name\n            uuid\n            description\n          }\n        }\n      }\n      count\n    }\n  }\n}\n`\nexport const GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST = gql`\nquery GetCompanyContractorsList($userData: GetSubscriberDto!) {\n  getCompanyContractorsList(userData: $userData) {\n    message\n    data {\n      employee {\n        email\n        uuid\n        status\n        first_name\n        last_name\n        phone_number\n        country_code {         \n          uuid\n          name\n          phoneCode\n        }        \n        department\n        user_type\n        company_id {\n          uuid\n          name\n          description\n          type\n          attachments\n          website_url          \n          industryType {\n            uuid\n            name            \n          }\n          tenantContractorType {\n            uuid\n            name            \n            type\n          }\n        }\n        user_roles {\n          uuid\n          role_id {\n            uuid\n            name\n            description\n            status\n          }\n        }\n      }\n      count\n    }\n  }\n}\n`\n\nexport const GET_USER_DETAILS_BY_ID = gql`\n  query GetUserById($userId: String!) {\n    getUserById(userId: $userId) {\n      message\n      data {\n        user {\n          country_code {\n            countryCode\n            name\n            phoneCode\n            uuid\n          }\n          position\n          email\n          educational_interests\n          first_name\n          last_name\n          user_type\n          is_required_reset_password\n          organization\n          phone_number\n          preferred_language\n          profile_picture\n          role_name\n          uuid\n          pronounce\n          reporting_manager_id {\n            uuid\n            profile_picture\n            last_name\n            first_name\n            location\n            organization\n          }\n          department\n          location\n        }\n        location\n        role_id {\n          name\n          status\n          uuid\n        }\n        role\n      }\n    }\n  }\n`","import { gql } from '@apollo/client';\n\nexport const UPDATE_SUBSCRIBER_EMPLOYEE_USER = gql`\nmutation UpdateSubscriberEmployeeUser($subscriberUserData: UpdateSubscriberEmployeeDto!, $subscriberUserId: String!) {\n  updateSubscriberEmployeeUser(subscriberUserData: $subscriberUserData, subscriberUserId: $subscriberUserId) {\n    message\n  }\n}\n`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef, useCallback, useEffect, useRef, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport logo from '@assets/images/sidebar-logo.png'\nimport TextInput from '@components/textInput/TextInput';\nimport Button from '@components/button/button';\nimport { Camera, DropdownArrowDown } from '@components/icons/icons';\nimport { AUTHORIZE_PERSON_USER_TYPE, DATA_URL_TO_FILE, IMAGE_BASE_URL, MAX_FILE_SIZE, SettingsDrpData, USER_TYPE, uploadImage } from '@config/constant';\nimport { whiteSpaceRemover } from '@utils/helpers';\nimport { Dialog } from 'primereact/dialog';\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'; // theme\nimport 'primereact/resources/primereact.css'; // core css\nimport Cropper, { ReactCropperElement } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport { t } from 'i18next';\nimport DropDown from '@components/dropdown/dropDown';\nimport { GET_USER_DETAILS_BY_ID } from '@framework/graphql/queries/getCompanyBranches';\nimport { DropdownOptionType } from '@types';\nimport { GET_REPORTING_MANAGERS, GET_ACTIVE_ROLES_DATA } from '@framework/graphql/queries/role';\nimport { StateDataArr } from '@framework/graphql/graphql';\nimport { toast } from 'react-toastify';\nimport { UPDATE_SUBSCRIBER_EMPLOYEE_USER } from '@framework/graphql/mutations/updateSubscriberEmployeeUser';\nimport useValidation from '@framework/hooks/validations';\nimport { GET_COUNTRY } from '@framework/graphql/queries/subscriber';\n\ninterface UserDetailsInitialType {\n\tlogo?: string,\n\tlast_name: string,\n\tfirst_name: string,\n\temail: string,\n\tmobile_number: string,\n\trole: string,\n\tpreferredLanguage: string,\n\tdepartment: string,\n\treportingManager: string,\n\tbranchId: any,\n\tcountry_code: string,\n\tposition: string,\n\tisReportingManager: boolean | undefined\n}\n\nfunction Index() {\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst branchId = queryParams.get('branchId');\n\tconst companyId = queryParams.get('company_id');\n\tconst isSubAdminString = queryParams.get('Is_subAdmin');\n\tconst isSubAdmin = isSubAdminString === 'true';\n\tconst { updateUserValidationSchema } = useValidation();\n\tconst userType = queryParams.get('userTypeId');\n\tconst userTypeValue = queryParams.get('userTypeValue');\n\tconst readUserData = queryParams.get('read_Data');\n\tconst companyType = queryParams.get('userCompanyType');\n\tconst { data: getUserDetailsData, refetch: getUserDetailsRefetch, loading: getUserDetailsLoading } = useQuery(GET_USER_DETAILS_BY_ID, { variables: { userId: uuid } });\n\tconst { data: getRolesData } = useQuery(GET_ACTIVE_ROLES_DATA, { variables: { limit: 500, page: 1, search: '', sortOrder: '', sortField: 'name' } });\n\tconst [updateSubscriberEmployeeUser, updateSubscriberEmployeeUserLoading] = useMutation(UPDATE_SUBSCRIBER_EMPLOYEE_USER);\n\tconst [image, setImage] = useState('');\n\tconst [cropper, setCropper] = useState(false);\n\tconst navigate = useNavigate();\n\tconst cropperRef = createRef<ReactCropperElement>();\n\tconst [reportingManagerDrpData, setReportingManagerDrpData] = useState<DropdownOptionType[]>([]);\n\tconst [roleDrpData, setRoleDrpData] = useState<DropdownOptionType[]>([]);\n\tconst fileInputRef = useRef<HTMLInputElement | null>(null);\n\tconst [loading, setLoading] = useState<boolean>(false)\n\tconst [stateDrpData, setStateDrpData] = useState<DropdownOptionType[]>([]);\n\tconst { data } = useQuery(GET_COUNTRY);\n\tconst [countryDrpData, setCountryDrpData] = useState<DropdownOptionType[]>([]);\n\tconst userContractorDataType = (companyType === '2') ? AUTHORIZE_PERSON_USER_TYPE.CONTRACTOR : AUTHORIZE_PERSON_USER_TYPE.USER;\n\tconst userDataType = (companyType === '1') ? AUTHORIZE_PERSON_USER_TYPE.TENANT : userContractorDataType;\n\tconst { data: getReportingManagersData, refetch } = useQuery(GET_REPORTING_MANAGERS, { variables: { userData: { search: '', companyId: companyId ?? '', branchId: branchId ?? '', user_type: userDataType, userId: uuid } } });\n\t/**\n\t * set the initial values\n\t*/\n\tconst initialValues: UserDetailsInitialType = {\n\t\tlogo: '',\n\t\tfirst_name: '',\n\t\tlast_name: '',\n\t\temail: '',\n\t\tmobile_number: '',\n\t\trole: '',\n\t\tpreferredLanguage: '',\n\t\tdepartment: '',\n\t\treportingManager: '',\n\t\tbranchId: '',\n\t\tcountry_code: '',\n\t\tposition: '',\n\t\tisReportingManager: !isSubAdmin,\n\t};\n\n\tuseEffect(() => {\n\t\tif (getReportingManagersData) {\n\t\t\trefetch();\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tgetUserDetailsRefetch();\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst tempDataArr = [] as DropdownOptionType[];\n\t\tgetRolesData?.getActiveRoles?.data?.role?.map((data: StateDataArr) => {\n\t\t\ttempDataArr.push({ name: data?.name, key: data?.uuid });\n\t\t});\n\t\tsetRoleDrpData(tempDataArr);\n\t}, [getRolesData])\n\n\tuseEffect(() => {\n\t\tconst tempDataArr = [] as DropdownOptionType[];\n\t\tgetReportingManagersData?.getReportingManagers?.data?.map((data: { first_name: string, last_name: string, uuid: string }) => {\n\t\t\ttempDataArr.push({ name: `${data?.first_name} ${data?.last_name}`, key: data?.uuid });\n\t\t});\n\t\tsetReportingManagerDrpData(tempDataArr);\n\t}, [getReportingManagersData])\n\n\tuseEffect(() => {\n\t\tif (getUserDetailsData) {\n\t\t\tconst data = getUserDetailsData?.getUserById?.data;\n\t\t\tformik.resetForm({\n\t\t\t\tvalues: {\n\t\t\t\t\tfirst_name: data?.user?.first_name,\n\t\t\t\t\tlast_name: data?.user?.last_name,\n\t\t\t\t\temail: data?.user?.email,\n\t\t\t\t\tmobile_number: data?.user?.phone_number,\n\t\t\t\t\trole: data?.role_id?.uuid,\n\t\t\t\t\tpreferredLanguage: data?.user?.preferred_language,\n\t\t\t\t\tdepartment: data?.user?.department,\n\t\t\t\t\treportingManager: data?.user?.reporting_manager_id?.uuid,\n\t\t\t\t\tlogo: data?.user?.profile_picture,\n\t\t\t\t\tbranchId: branchId,\n\t\t\t\t\tcountry_code: data?.user?.country_code?.uuid,\n\t\t\t\t\tposition: data?.user?.position,\n\t\t\t\t\tisReportingManager: !isSubAdmin,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [getUserDetailsData])\n\n\t/**\n\t * cancel button click\n\t */\n\tconst onCancelClick = useCallback(() => {\n\t\tnavigate(-1);\n\t}, []);\n\n\tconst formik = useFormik({\n\t\tinitialValues,\n\t\tvalidationSchema: updateUserValidationSchema,\n\t\tonSubmit: async (values) => {\n\t\t\tlet user_Type = '' as string | number;\n\t\t\tif (companyType) {\n\t\t\t\tif (companyType === '2') {\n\t\t\t\t\tuser_Type = USER_TYPE.SUBSCRIBER_CONTRACTOR;\n\t\t\t\t\tif (isSubAdmin) {\n\t\t\t\t\t\tuser_Type = USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tuser_Type = USER_TYPE.SUBSCRIBER_TENANT;\n\t\t\t\t\tif (isSubAdmin) {\n\t\t\t\t\t\tuser_Type = USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (userType && userTypeValue) {\n\t\t\t\tuser_Type = +userTypeValue;\n\t\t\t}\n\n\t\t\tupdateSubscriberEmployeeUser({\n\t\t\t\tvariables: {\n\t\t\t\t\tsubscriberUserData: {\n\t\t\t\t\t\tprofile_picture: values?.logo ?? '',\n\t\t\t\t\t\tcountry_code: values?.country_code,\n\t\t\t\t\t\tdepartment: values?.department,\n\t\t\t\t\t\tfirst_name: values?.first_name,\n\t\t\t\t\t\tlast_name: values?.last_name,\n\t\t\t\t\t\tphone_number: values?.mobile_number,\n\t\t\t\t\t\tpreferred_language: values?.preferredLanguage,\n\t\t\t\t\t\t// pronounce: getUserDetailsData?.getUserById?.data?.user?.pronounce,\n\t\t\t\t\t\treporting_manager_id: isSubAdmin ? null : values.reportingManager,\n\t\t\t\t\t\trole_id: values?.role,\n\t\t\t\t\t\tuser_type: user_Type ?? '',\n\t\t\t\t\t\tposition: values?.position,\n\t\t\t\t\t\t// branchId:values?.branchId,\n\t\t\t\t\t},\n\t\t\t\t\tsubscriberUserId: uuid,\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\ttoast.success(res?.data?.updateSubscriberEmployeeUser?.message)\n\t\t\t\t\tnavigate(-1);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\ttoast.error(err?.networkError?.result?.errors?.[0]?.message)\n\t\t\t\t})\n\t\t}\n\n\t});\n\n\tuseEffect(() => {\n\t\tconst userLocation = getUserDetailsData?.getUserById?.data?.location;\n\t\tif (userLocation) {\n\t\t\tconst tempDataArr = [{ name: userLocation, key: userLocation }] as DropdownOptionType[];\n\t\t\tsetStateDrpData(tempDataArr);\n\t\t}\n\t}, [getUserDetailsData]);\n\n\tconst dialogActionConst = () => {\n\t\treturn (\n\t\t\t<div className='flex justify-end gap-5'>\n\t\t\t\t<Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setCropper(false)} />\n\t\t\t\t<Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" onClick={() => getCropData()} disabled={loading} />\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst handleLogo = useCallback((e: any) => {\n\t\te.preventDefault();\n\t\tlet files;\n\t\tif (e.dataTransfer) {\n\t\t\tfiles = e.dataTransfer.files;\n\t\t} else if (e.target) {\n\t\t\tfiles = e.target.files;\n\t\t}\n\t\tif (files && files.length > 0) {\n\t\t\tconst file = files[0];\n\t\t\tif (file.type.startsWith('image/')) {\n\t\t\t\tif (file.size > MAX_FILE_SIZE) {\n\t\t\t\t\ttoast.error('Image size must be less than 5MB');\n\t\t\t\t} else {\n\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\tsetImage(reader.result as any);\n\t\t\t\t\t\tsetCropper(true);\n\t\t\t\t\t};\n\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttoast.error('Please select a valid image file');\n\t\t\t}\n\t\t}\n\t\tif (fileInputRef.current) {\n\t\t\tfileInputRef.current.value = ''; // This clears the input field\n\t\t}\n\t}, []);\n\n\tconst getCropData = async (): Promise<void> => {\n\t\tif (typeof cropperRef.current?.cropper !== 'undefined') {\n\t\t\tlet fileName: string | null = null;\n\t\t\tconst file = DATA_URL_TO_FILE(cropperRef.current?.cropper.getCroppedCanvas().toDataURL(), 'employeeImage.png');\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('image', file);\n\t\t\tsetLoading(true);\n\t\t\tfileName = await uploadImage(formData,'profile');\n\t\t\tif (fileName) {\n\t\t\t\tformik.setFieldValue('logo', fileName);\n\t\t\t\tsetCropper(false);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  not add empty space logic\n\t */\n\tconst OnBlur = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n\t\tformik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst tempDataArr = [] as DropdownOptionType[];\n\t\tdata?.getCountries?.data?.map((data: { phoneCode: number, uuid: string }) => {\n\t\t\ttempDataArr.push({ name: `+${data?.phoneCode}`, key: data?.uuid });\n\t\t});\n\t\tsetCountryDrpData(tempDataArr);\n\t}, [data])\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<h1 className='font-bold text-size-30'>User Details</h1>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t\t<div className='flex flex-wrap items-start justify-center p-5 border border-solid sm:justify-start lg:flex-nowrap mb-7 border-border-primary rounded-xl'>\n\t\t\t\t\t\t<div className='flex items-center justify-center w-full max-w-[400px] lg:mr-5 h-full aspect-square lg:w-1/3 lg:max-w-[480px] lg:min-w-[320px] xl:min-w-[410px] border border-border-primary border-solid rounded-xl mb-8 lg:mb-0'>\n\t\t\t\t\t\t\t<div className={`box-border flex items-center justify-center ${readUserData ? 'pointer-events-none' : ''}`}>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='logo'\n\t\t\t\t\t\t\t\t\tclassName='relative flex flex-col items-center justify-center'>\n\t\t\t\t\t\t\t\t\t<p className='error'>{formik.errors.logo && formik.touched.logo ? t(formik.errors.logo) : ''}</p>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center justify-center w-32 h-32 overflow-hidden border border-gray-300 border-solid rounded-full cursor-pointer sm:w-44 sm:h-44'>\n\t\t\t\t\t\t\t\t\t\t<img src={formik?.values?.logo ? IMAGE_BASE_URL + formik?.values?.logo : logo} alt='logo' className='object-contain w-full h-full bg-black' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid='logo'\n\t\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\t\tname='logo'\n\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\tclassName=\"hidden\"\n\t\t\t\t\t\t\t\t\t\taccept=\".png, .jpeg\"\n\t\t\t\t\t\t\t\t\t\tref={fileInputRef}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleLogo(e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='flex flex-wrap w-full gap-5 lg:w-2/3'>\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<TextInput placeholder={t('First Name')} type='text' id='first_name' name='first_name' label={t('First Name')} value={formik.values.first_name} onChange={formik.handleChange} required={true} error={formik.errors.first_name && formik.touched.first_name && formik.errors.first_name} onBlur={OnBlur} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<TextInput placeholder={t('Last Name')} type='text' id='last_name' name='last_name' label={t('Last Name')} value={formik.values.last_name} onChange={formik.handleChange} required={true} error={formik.errors.last_name && formik.touched.last_name && formik.errors.last_name} onBlur={OnBlur} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<TextInput placeholder={t('Email')} type='text' id='email' name='email' label={t('Email')} value={formik.values.email} onChange={formik.handleChange} required={true} error={formik.errors.email && formik.touched.email && formik.errors.email} onBlur={OnBlur} disabled={true} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* <div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<TextInput placeholder={t('Mobile Number')} type='number' id='mobile_number' name='mobile_number' label={t('Mobile Number')} value={formik.values.mobile_number} onChange={formik.handleChange} required={true} error={formik.errors.mobile_number && formik.touched.mobile_number ? formik.errors.mobile_number : ''} onBlur={OnBlur} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div> */}\n\n\t\t\t\t\t\t\t<div className=\"w-full lg:w-[calc(50%-10px)]\">\n\t\t\t\t\t\t\t\t<label >{t('Mobile Number')}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='flex'>\n\t\t\t\t\t\t\t\t\t<DropDown placeholder={t('Code')} className='min-w-[96px]' onChange={formik.handleChange} value={formik.values.country_code} options={countryDrpData} name='country_code' id='country_code' error={formik.errors.country_code && formik.touched.country_code ? formik.errors.country_code : ''} disabled={!!readUserData} />\n\t\t\t\t\t\t\t\t\t<TextInput placeholder={t('Mobile Number')} type='tel' id='mobile_number' name='mobile_number' value={formik.values.mobile_number} onChange={formik.handleChange} error={formik.errors.mobile_number && formik.touched.mobile_number && formik.errors.mobile_number} onBlur={OnBlur} disabled={!!readUserData} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<DropDown placeholder={t('Role')} name='role' onChange={formik.handleChange} value={formik.values.role} options={roleDrpData} id='role' error={formik.errors.role && formik.touched.role ? formik.errors.role : ''} required={true} label={t('Role')} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<DropDown placeholder={t('Select Preferred Language')} name='preferredLanguage' onChange={formik.handleChange} value={formik.values.preferredLanguage} options={SettingsDrpData} id='category' error={formik.errors.preferredLanguage && formik.touched.preferredLanguage ? formik.errors.preferredLanguage : ''}  label={t('Preferred Language')} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<TextInput placeholder={t('Department')} type='text' id='department' name='department' label={t('Department')} value={formik.values.department} onChange={formik.handleChange}  error={formik.errors.department && formik.touched.department && formik.errors.department } onBlur={OnBlur} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"w-full lg:w-[calc(50%-10px)]\">\n\t\t\t\t\t\t\t\t<DropDown disabled placeholder={t('Select Location')} className='w-full' label={t('Location')} inputIcon={<span className='text-xs'><DropdownArrowDown className='fill-dark-grey' /></span>} onChange={formik.handleChange} value={formik.values.branchId} options={stateDrpData} name='branchId' id='branchId' required={true} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{!isSubAdmin && <div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<DropDown placeholder={t('Reporting Manager')} name='reportingManager' onChange={formik.handleChange} value={formik.values.reportingManager} options={reportingManagerDrpData} id='reportingManager' error={formik.errors.reportingManager && formik.touched.reportingManager ? formik.errors.reportingManager : ''} required={true} label={t('Reporting Manager')} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t<div className='inline-block w-full xl:w-[calc(50%-10px)]'>\n\t\t\t\t\t\t\t\t<TextInput placeholder={t('Position')} type='text' id='position' name='position' label={t('Position')} value={formik.values.position} onChange={formik.handleChange}  error={formik.errors.position && formik.touched.position && formik.errors.position} onBlur={OnBlur} disabled={!!readUserData} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!readUserData && <Button className='mr-5 btn-primary btn-normal mb-3 md:mb-0 w-full md:w-[166px]' type='submit' label={t('Update Changes')} disabled={getUserDetailsLoading || loading || updateSubscriberEmployeeUserLoading?.loading}\n\t\t\t\t\t title={`${t('Update Changes')}`}  />}\n\t\t\t\t\t<Button className='btn-secondary btn-normal w-full md:w-[166px]' label={t('Cancel')} onClick={() => onCancelClick()} \n\t\t\t\t\t title={`${t('Cancel')}`}  />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={cropper} style={{ width: '50vw' }} onHide={() => setCropper(false)} footer={() => dialogActionConst()}>\n\t\t\t\t{\n\t\t\t\t\timage &&\n\t\t\t\t\t<Cropper\n\t\t\t\t\t\tref={cropperRef}\n\t\t\t\t\t\tstyle={{ height: 400, width: '100%' }}\n\t\t\t\t\t\tzoomTo={0.5}\n\t\t\t\t\t\taspectRatio={1}\n\t\t\t\t\t\tpreview=\".img-preview\"\n\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\tviewMode={1}\n\t\t\t\t\t\tminCropBoxHeight={10}\n\t\t\t\t\t\tminCropBoxWidth={10}\n\t\t\t\t\t\tbackground={false}\n\t\t\t\t\t\tresponsive={true}\n\t\t\t\t\t\tautoCropArea={1}\n\t\t\t\t\t\tcheckOrientation={false}\n\t\t\t\t\t\tguides={true}\n\t\t\t\t\t\tcropBoxResizable={false}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</Dialog>\n\t\t</>\n\t)\n}\n\nexport default Index;"],"names":["GET_COMPANY_BRANCHES","gql","_templateObject","_taggedTemplateLiteral","GET_COMPANY_TENANT_DETAILS","_templateObject2","GET_COMPANY_CONTRACTOR_DETAILS","_templateObject3","GET_COMPANY_TENANT_EMPLOYEE_LIST","_templateObject4","GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST","_templateObject5","GET_USER_DETAILS_BY_ID","_templateObject6","UPDATE_SUBSCRIBER_EMPLOYEE_USER","_formik$values","_formik$values2","queryParams","URLSearchParams","location","search","uuid","get","branchId","companyId","isSubAdmin","updateUserValidationSchema","useValidation","userType","userTypeValue","readUserData","companyType","data","getUserDetailsData","refetch","getUserDetailsRefetch","loading","getUserDetailsLoading","useQuery","variables","userId","getRolesData","GET_ACTIVE_ROLES_DATA","limit","page","sortOrder","sortField","updateSubscriberEmployeeUser","updateSubscriberEmployeeUserLoading","useMutation","image","setImage","useState","cropper","setCropper","navigate","useNavigate","cropperRef","createRef","reportingManagerDrpData","setReportingManagerDrpData","roleDrpData","setRoleDrpData","fileInputRef","useRef","setLoading","stateDrpData","setStateDrpData","GET_COUNTRY","countryDrpData","setCountryDrpData","userContractorDataType","AUTHORIZE_PERSON_USER_TYPE","CONTRACTOR","USER","userDataType","TENANT","getReportingManagersData","GET_REPORTING_MANAGERS","userData","user_type","initialValues","logo","first_name","last_name","email","mobile_number","role","preferredLanguage","department","reportingManager","country_code","position","isReportingManager","useEffect","_getRolesData$getActi","_getRolesData$getActi2","_getRolesData$getActi3","tempDataArr","getActiveRoles","map","push","name","key","_getReportingManagers","_getReportingManagers2","getReportingManagers","concat","_getUserDetailsData$g","_data$user","_data$user2","_data$user3","_data$user4","_data$role_id","_data$user5","_data$user6","_data$user7","_data$user7$reporting","_data$user8","_data$user9","_data$user9$country_c","_data$user10","getUserById","formik","resetForm","values","user","phone_number","role_id","preferred_language","reporting_manager_id","profile_picture","onCancelClick","useCallback","useFormik","validationSchema","onSubmit","async","_values$logo","_user_Type","user_Type","USER_TYPE","SUBSCRIBER_CONTRACTOR","SUBSCRIBER_SUB_ADMIN_CONTRACTOR","SUBSCRIBER_TENANT","SUBSCRIBER_TENANT_SUB_ADMIN","subscriberUserData","subscriberUserId","then","res","_res$data","_res$data$updateSubsc","toast","success","message","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","_err$networkError$res3","error","networkError","result","errors","_getUserDetailsData$g2","_getUserDetailsData$g3","userLocation","handleLogo","e","files","preventDefault","dataTransfer","target","length","file","type","startsWith","size","MAX_FILE_SIZE","reader","FileReader","onload","readAsDataURL","current","value","getCropData","_cropperRef$current","_cropperRef$current2","fileName","DATA_URL_TO_FILE","getCroppedCanvas","toDataURL","formData","FormData","append","uploadImage","setFieldValue","OnBlur","whiteSpaceRemover","_data$getCountries","_data$getCountries$da","getCountries","phoneCode","_jsxs","_Fragment","children","_jsx","className","handleSubmit","htmlFor","touched","t","src","IMAGE_BASE_URL","alt","id","multiple","accept","ref","onChange","Camera","TextInput","placeholder","label","handleChange","required","onBlur","disabled","DropDown","options","SettingsDrpData","inputIcon","DropdownArrowDown","Button","title","onClick","Dialog","header","visible","style","width","onHide","footer","Cropper","height","zoomTo","aspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","guides","cropBoxResizable"],"sourceRoot":""}