{"version":3,"file":"static/js/3480.2d71f313.chunk.js","mappings":"qOASA,MAAMA,EAAaA,KAAO,IAADC,EAAAC,EAAAC,EACxB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MAEXC,EADc,IAAIC,gBAAgBH,EAASI,QACxBC,IAAI,SACvB,GAAEC,IAAOC,EAAAA,EAAAA,MACT,gBAAEC,IAAoBC,EAAAA,EAAAA,KAC1BC,GAAkEA,EAAMC,cAEpEC,EAAuD,QAA/CjB,EAAkB,OAAfa,QAAe,IAAfA,GAA2B,QAAZZ,EAAfY,EAAiBK,kBAAU,IAAAjB,GAAM,QAANC,EAA3BD,EAA6BkB,YAAI,IAAAjB,OAAlB,EAAfA,EAAmCkB,iBAAS,IAAApB,EAAAA,EAAI,GAK3DqB,EAAcC,IAAsB,IAADC,EACxC,IAAIC,EAAa,GACjB,GAA0B,QAA1BD,EAAID,EAASG,MAAM,KAAK,UAAE,IAAAF,GAAtBA,EAAwBG,SAAS,KAAM,CAM1C,OALaJ,EAASG,MAAM,KAAK,GAAGA,MAAM,KACrCE,SAASC,IAAe,IAADC,EAE3B,OADAL,EAAaA,GAAiB,QAAPK,EAAGD,EAAE,UAAE,IAAAC,OAAA,EAAJA,EAAMC,eAAgBF,EAAEG,MAAM,GAAK,IACtDP,CAAU,IAEXA,CACR,CAAQ,IAADQ,EAEN,OADAR,GAAsC,QAAzBQ,EAAAV,EAASG,MAAM,KAAK,GAAG,UAAE,IAAAO,OAAA,EAAzBA,EAA2BF,eAAgBR,EAASG,MAAM,KAAK,GAAGM,MAAM,GAC9EP,CACR,EAGKS,EAAkBd,IACvB,IAAIK,EAAa,GACjB,GAAQ,OAAJL,QAAI,IAAJA,GAAAA,EAAMO,SAAS,KAAM,CACxBF,EAAiB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMe,QAAQ,QAAS,KACpC,MAAMC,EAAgBX,EAAWC,MAAM,KACvC,IAAK,IAAIG,EAAI,EAAGA,EAAIO,EAAcC,OAAQR,IACzCO,EAAcP,GAAKO,EAAcP,GAAG,GAAGE,cAAgBK,EAAcP,GAAGS,UAAU,GAGnF,OADAb,EAAaW,EAAcG,KAAK,KACzBd,CACR,CAAQ,IAADe,EAEN,OADAf,GAAiB,OAAJL,QAAI,IAAJA,GAAS,QAALoB,EAAJpB,EAAO,UAAE,IAAAoB,OAAL,EAAJA,EAAWT,gBAAqB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,MAAM,IAAM,IACpDP,CACR,EAGKgB,EAAYrB,IACjB,IAAIK,EAAa,GACjB,OAAQ,OAAJL,QAAI,IAAJA,GAAAA,EAAMO,SAAS,OAGlBF,GAAiB,OAAJL,QAAI,IAAJA,GAAS,QAALsB,EAAJtB,EAAO,UAAE,IAAAsB,OAAL,EAAJA,EAAWX,gBAAqB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,MAAM,IAAM,KAFpDP,EACA,IAADiB,CAGP,EAGKC,EAAWrC,EAASiB,SAASG,MAAM,KAEnCkB,GAAkBC,EAAAA,EAAAA,cAAY,KACnC,IAAY,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUN,QAAS,EAAG,CACzB,MAAMA,EAAiB,OAARM,QAAQ,IAARA,OAAQ,EAARA,EAAUN,OACzB,GAAIA,EAAS,EACZ,OACCS,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAE8B,EAAeS,EAAS,QAIhD,GAAIN,EAAS,EACZ,MAAoB,KAAhBM,EAAS,GACRA,EAAS,GAAGN,OAAS,IAEvBa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,CACEP,EAASE,EAAS,MAAOG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,UACvDF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAE,IAAAJ,OAAMK,EAAAA,GAAOC,IAAG,KAAAN,OAAIN,EAAS,IAAMI,UAAU,kCAAiCC,SAAA,GAAAC,OAAK7C,EAAEkB,EAAWhB,EAASiB,gBAEpHkB,EAASE,EAAS,MAAOG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SAC9D,OAEAP,EAASE,EAAS,MACnBG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAE8B,EAAeS,EAAS,SAG/CG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAEqC,EAASE,EAAS,YAMzCO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,UAC7BF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAE,IAAAJ,OAAMK,EAAAA,GAAOC,IAAG,KAAAN,OAAIN,EAAS,IAAMI,UAAU,kCAAiCC,SAAA,GAAAC,OAAK7C,EAAEkB,EAAWhB,EAASiB,iBAErHuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SACpC,OAEFF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAE8B,EAAeS,EAAS,YAOhDG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAE8B,EAAeS,EAAS,QAKjD,GAAIN,EAAS,EACZ,OACCa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,UAC7BF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAE,IAAAJ,OAAMK,EAAAA,GAAOC,IAAG,KAAAN,OAAIN,EAAS,IAAMI,UAAU,kCAAiCC,SAAA,GAAAC,OAAK7C,EAAEkB,EAAWhB,EAASiB,iBAErHuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SACpC,OAEFF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAE8B,EAAeS,EAAS,WAKjD,GAAIN,EAAS,EAAG,CACf,IAAImB,EAAW,GAMf,OALIhD,EACHgD,EAAQ,SAAAP,OAAYzC,GACVI,IACV4C,EAAQ,SAAAP,OAAYrC,KAGpBsC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,UAC7BF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAE,IAAAJ,OAAMK,EAAAA,GAAOC,IAAG,KAAAN,OAAIN,EAAS,IAAMI,UAAU,kCAAiCC,SAAE5C,EAAE8B,EAAeS,EAAS,UAEtHG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SACpC,OAEFF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,UAC7BF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAE,IAAAJ,OAAMK,EAAAA,GAAOC,IAAG,KAAAN,OAAIN,EAAS,GAAE,KAAAM,OAAIN,EAAS,GAAE,KAAAM,QAAc,KAATzC,GAAsB,KAAPI,IAAc4C,GAAYT,UAAU,kCAAiCC,SAAE5C,EAAE8B,EAAeS,EAAS,UAE/KG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SACpC,OAEFF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAC5BL,EAAS,IAAE,GAAAM,OAAO7C,EAAE8B,EAAeS,EAAS,UAIjD,CACD,IACE,CAACA,IAEJ,OACCG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACtBE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,4CAA2CC,SAAA,EACvDE,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EACCF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,IAAII,EAAAA,EAAAA,IAAsBvC,EAASwC,EAAAA,GAAUC,YAAY,IAADV,OAAKK,EAAAA,GAAOC,IAAG,KAAAN,OAAIK,EAAAA,GAAOM,WAAS,IAAAX,OAAOK,EAAAA,GAAOC,IAAG,KAAAN,OAAIK,EAAAA,GAAOO,aAAed,UAAU,iDAAgDC,SACvM5C,EAAE,WAEJ0C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SAAE,SAGxCJ,QAEG,EAIR,EAAekB,EAAAA,KAAW9D,E,2DC5K1B,QAPA,WAEI,OACI8C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iJAEvB,C,8HCOA,MAsDA,EAtDsBgB,IAA6D,IAA5D,kBAAEC,EAAiB,YAAEC,GAAiCF,EAC5E,MAAM,EAAE3D,IAAMC,EAAAA,EAAAA,MACR6D,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASrD,EAAAA,EAAAA,KAAcC,GAAoDA,EAAMqD,oBAEnF/D,GAAWC,EAAAA,EAAAA,MAuBX+D,GAAiBzB,EAAAA,EAAAA,cAAY,KAClCqB,GAASK,EAAAA,EAAAA,KAASH,GAAM,GACtB,CAACA,IAEJ,OACClB,EAAAA,EAAAA,MAAA,UAAQH,UAAU,iIAAgIC,SAAA,EACjJF,EAAAA,EAAAA,KAAA,OAAK0B,QAASF,EAAgBvB,UAAU,2CAA0CC,UACjFF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAa,CAAC1B,UAAU,YAE1BD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gEAA+DC,UAC7EE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,sDAAqDC,SAAA,EACnEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAE5C,EAAa,OAAX6D,QAAW,IAAXA,EAAAA,EAjC9C1C,KACnB,IAAIE,EAAa,GACjB,GAAIF,EAASG,MAAM,KAAK,GAAGC,SAAS,KAAM,CAMzC,OALaJ,EAASG,MAAM,KAAK,GAAGA,MAAM,KACrCE,SAASC,IACbJ,EAAaA,EAAaI,EAAE,GAAGE,cAAgBF,EAAEG,MAAM,GAAK,IACrDP,KAEDA,CACR,CAEC,OADAA,EAAaF,EAASG,MAAM,KAAK,GAAG,GAAGK,cAAgBR,EAASG,MAAM,KAAK,GAAGM,MAAM,GAC7EP,CACR,EAqBgFH,CAAWhB,EAASiB,cAChGuB,EAAAA,EAAAA,KAAC9C,EAAAA,EAAU,OAEXgE,IACAlB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,SAtB3C0B,MAC1B,GAAIV,EACH,OAAQA,GACT,EAoBMU,YAKG,C,oGC9DwBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6OAA/B,MAeMC,GAAwBH,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iVAmB3BG,GAAcL,EAAAA,EAAAA,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wIAMjBK,GAAmBP,EAAAA,EAAAA,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+KAatBO,GAAiBT,EAAAA,EAAAA,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uN,6ECrD1B,MAAMS,GAAgCX,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kaAcnCU,GAAkBZ,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gKAWCF,EAAAA,EAAAA,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sN,uKCzB/B,MAAMW,GAA8Bb,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+RAYjCY,GAA4Bd,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8wBAwC/Ba,GAAyCf,EAAAA,EAAAA,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,ioC,+CC1CzD,MA+IA,EA/I+Bc,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjC,MAAM,EAAE7F,IAAMC,EAAAA,EAAAA,MACR6D,GAAWC,EAAAA,EAAAA,MACX+B,GAAqBnF,EAAAA,EAAAA,KAAcC,GAA6DA,EAAMmF,wBACtG,KAAE/E,EAAI,QAACgF,IAAYC,EAAAA,EAAAA,GAASZ,EAA2B,CACzDa,YAAY,eAAeC,OAAwB,OAAlBL,QAAkB,IAAlBA,GAAAA,EAAoBM,YAAYC,UAAU,CACvED,WAA8B,OAAlBN,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBM,eAGjCxF,EAAO0F,IAAYC,EAAAA,EAAAA,UAA2B,IAC/CC,EAAkB,CACpB,CAAEC,KAAMzG,EAAE,gBAAiB0G,UAAU,GACrC,CAAED,KAAMzG,EAAE,qBAAsB0G,UAAU,EAAOC,UAAW,qBAC5D,CAAEF,KAAMzG,EAAE,iBAAkB0G,UAAU,EAAOC,UAAW,iBACxD,CAAEF,KAAMzG,EAAE,aAAc0G,UAAU,EAAOC,UAAW,aACpD,CAAEF,KAAMzG,EAAE,UAAW0G,UAAU,EAAOC,UAAW,WAyC/CC,GAAWnE,EAAAA,EAAAA,cAAY,KACzBqB,GAAS+C,EAAAA,EAAAA,IAA4B,OAALjG,QAAK,IAALA,OAAK,EAALA,EAAOkG,KAAK9F,IAAQ,IAAD+F,EAC/C,OAAW,OAAJ/F,QAAI,IAAJA,GAA+B,QAA3B+F,EAAJ/F,EAAMgG,iCAAyB,IAAAD,OAA3B,EAAJA,EAAiC3G,IAAI,MAEhD0D,GAASmD,EAAAA,EAAAA,IAAsCrG,IAC/CkD,GAASoD,EAAAA,EAAAA,KAAyC,GAAO,GAC1D,CAACtG,IAEJ,OAAQ8B,EAAAA,EAAAA,KAAA,OAAAE,UACJF,EAAAA,EAAAA,KAAA,OAAKlC,GAAG,eAAe2G,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQxE,UAAW,yDAAyDC,UAChJF,EAAAA,EAAAA,KAAA,OAAKlC,GAAG,wBAAwB2G,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQxE,UAAU,2EAA0EC,UACzKF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAE1CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+BAA8BC,SAAA,EAEzCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yFAAwFC,SAAA,EACnGF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,8CAA6CC,SAAC,qBAC3DF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,CAAChD,QAASA,IAAMN,GAASoD,EAAAA,EAAAA,KAAyC,IAASG,MAAOrH,EAAE,IAAI4C,UAC3FF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,UAACF,EAAAA,EAAAA,KAAC4E,EAAAA,GAAK,CAAC3E,UAAU,uBAGtDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEC,UACnFE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0GAAyGC,SAAA,EACpHE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CACoB,OAAf4D,QAAe,IAAfA,OAAe,EAAfA,EAAiBM,KAAKS,IAEf7E,EAAAA,EAAAA,KAAA,MAAI8E,MAAM,MAAK5E,UACXF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,qBAAAE,OAA0C,UAAnB0E,EAAWd,KAAmB,iBAAmB,IAAK7D,SACtF2E,EAAWd,QAFCgB,OAAOC,iBAQpChF,EAAAA,EAAAA,KAAA,MAAI8E,MAAM,MAAK5E,UACXF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE5C,EAAE,oBAIlD8C,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CACCoD,IACDtD,EAAAA,EAAAA,KAAA,MAAAE,UAEAF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uHAIX,OAAJ3B,QAAI,IAAJA,GAA8B,QAA1BwE,EAAJxE,EAAM2G,gCAAwB,IAAAnC,GAAM,QAANC,EAA9BD,EAAgCxE,YAAI,IAAAyE,OAAhC,EAAJA,EAAsCqB,KAAK9F,IAA4B,IAAD4G,EAAAC,EAAAC,EAAAC,EACnE,OACIjF,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAMgH,gBACjCtF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAAc,QAAV4G,EAAJ5G,EAAMiH,gBAAQ,IAAAL,OAAV,EAAJA,EAAgBnB,QAC3C/D,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAAmB,QAAf6G,EAAJ7G,EAAMkH,qBAAa,IAAAL,OAAf,EAAJA,EAAqBM,QAChDzF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAAe,QAAX8G,EAAJ9G,EAAMoH,iBAAS,IAAAN,OAAX,EAAJA,EAAiBrB,QAC5C/D,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAAY,QAAR+G,EAAJ/G,EAAMqH,cAAM,IAAAN,OAAR,EAAJA,EAAcM,UACzC3F,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,SAAOyF,KAAK,WAAW/D,QAASA,IAnGrEpD,KACf,MAAMsH,EAAyB,CAC3BtB,0BAA2B,CACvB5G,KAAU,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,KACZgI,UAAe,OAAJpH,QAAI,IAAJA,OAAI,EAAJA,EAAMoH,UACjBH,SAAc,OAAJjH,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,SAChBC,cAAoB,OAAJlH,QAAI,IAAJA,OAAI,EAAJA,EAAMkH,cACtBF,aAAkB,OAAJhH,QAAI,IAAJA,OAAI,EAAJA,EAAMgH,aACpBK,OAAa,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAMqH,OACfnI,SAAa,OAAJc,QAAI,IAAJA,OAAI,EAAJA,EAAMd,UAEnBqI,UAAW,EACXC,mBAAmB,CACfpI,KAAK,GACLqG,KAAK,IAETgC,UAAU,CAACA,UAAU,KAAKC,eAAe,GAAGtI,KAAK,IACjDqD,WAAgB,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAMyC,WAClBkF,KAAM,CACFC,WAAW,GACXC,UAAU,GACVzI,KAAK,IAET0I,KAAM,CACF5I,SAAU,GACVE,KAAK,IAETA,KAAM,GACN2I,cAAc,GAElBzC,GAAU0C,GACFA,EAAKC,MAAMjI,IAAI,IAAAkI,EAAAC,EAAA,OAAO,OAAJnI,QAAI,IAAJA,GAA+B,QAA3BkI,EAAJlI,EAAMgG,iCAAyB,IAAAkC,OAA3B,EAAJA,EAAiC9I,SAAc,OAAPkI,QAAO,IAAPA,GAAkC,QAA3Ba,EAAPb,EAAStB,iCAAyB,IAAAmC,OAA3B,EAAPA,EAAoC/I,KAAK,IAG5F4I,EAAKI,QAAQpI,IAAI,IAAAqI,EAAAC,EAAA,OAAO,OAAJtI,QAAI,IAAJA,GAA+B,QAA3BqI,EAAJrI,EAAMgG,iCAAyB,IAAAqC,OAA3B,EAAJA,EAAiCjJ,SAAc,OAAPkI,QAAO,IAAPA,GAAkC,QAA3BgB,EAAPhB,EAAStB,iCAAyB,IAAAsC,OAA3B,EAAPA,EAAoClJ,KAAK,IAFrG,IAAI4I,EAAMV,IAIvB,EA+DwFiB,CAAUvI,WAR/C,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,KAWV,WAIoC,QAA3C,OAAJY,QAAI,IAAJA,GAA8B,QAA1B0E,EAAJ1E,EAAM2G,gCAAwB,IAAAjC,GAAM,QAANC,EAA9BD,EAAgC1E,YAAI,IAAA2E,OAAhC,EAAJA,EAAsC1D,cAA8DuH,KAA3C,OAAJxI,QAAI,IAAJA,GAA8B,QAA1B4E,EAAJ5E,EAAM2G,gCAAwB,IAAA/B,GAAM,QAANC,EAA9BD,EAAgC5E,YAAI,IAAA6E,OAAhC,EAAJA,EAAsC5D,WACjGS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCF,EAAAA,EAAAA,KAAA,OAAAE,SAAM5C,EAAE,qBAKxB0C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kHAAiHC,UAC3HF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,CAACC,MAAM,MAAM1E,UAAW,wDAAyDwF,KAAK,SAAS/D,QAASwC,gBAMlI,E,0ECnJH,MAAM6C,GAAsClF,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wMAMzCiF,GAAsCnF,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6J,0BCmBtD,MAiTA,EAjT8BkF,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAChC,MAAM,EAAEpK,IAAMC,EAAAA,EAAAA,MACR6F,GAAqBnF,EAAAA,EAAAA,KAAcC,GAA6DA,EAAMmF,wBACrGsE,EAAcC,IAAmB/D,EAAAA,EAAAA,UAA+B,IACjEzC,GAAWC,EAAAA,EAAAA,OACVwG,IAAUC,EAAAA,EAAAA,MACXC,EAAYF,EAAOhK,IAAI,aACvB6F,EAAamE,EAAOhK,IAAI,cACxBmK,EAAaH,EAAOhK,IAAI,eACxBiG,EAAkB,CACpB,CAAEC,KAAMzG,EAAE,eAAgB0G,UAAU,GACpC,CAAED,KAAMzG,EAAE,gBAAiB0G,UAAU,GACrC,CAAED,KAAMzG,EAAE,qBAAsB0G,UAAU,EAAOC,UAAW,qBAC5D,CAAEF,KAAMzG,EAAE,iBAAkB0G,UAAU,EAAMC,UAAW,iBACvD,CAAEF,KAAMzG,EAAE,aAAc0G,UAAU,EAAMC,UAAW,aACnD,CAAEF,KAAMzG,EAAE,UAAW0G,UAAU,EAAMC,UAAW,UAChD,CAAEF,KAAMzG,EAAE,YAAa0G,UAAU,EAAMC,UAAW,YAClD,CAAEF,KAAMzG,EAAE,oBAAqB0G,UAAU,EAAMC,UAAW,sBAGxD,KAAE3F,IAASiF,EAAAA,EAAAA,GAASb,EAA8B,CACpDc,YAAa,eAAgBC,MAAQsE,IAAcrE,EAAaC,UAAW,CACvEoE,UAAWA,EACXrE,WAAYA,MAGZpF,KAAM2J,IAAsC1E,EAAAA,EAAAA,GAASX,EAAwC,CACjGY,YAAa,eAAgBC,MAAOsE,EAAWpE,UAAW,CACtDoE,UAAWA,EACXrE,WAAYA,EACZwE,MAAO,GACPC,KAAM,MAGPC,GAAkC9E,QAAS+E,KAAkBC,EAAAA,EAAAA,GAAYvB,IACzEwB,GAAmCjF,QAASkF,KAAkBF,EAAAA,EAAAA,GAAYtB,IACzE1I,KAAMmK,IAAgBlF,EAAAA,EAAAA,GAASd,EAAAA,GAAiB,CAAEe,YAAa,kBAChEkF,IAASJ,EAAAA,EAAAA,GAAYhG,EAAAA,KACrBqG,EAAwBC,IAA6B/E,EAAAA,EAAAA,UAA+B,CAAC,CAAEE,KAAM,sBAAuB8E,IAAK,OACzHC,GAAsBC,KAA2BlF,EAAAA,EAAAA,UAA+B,CAAC,CAAEE,KAAM,mBAAoB8E,IAAK,OACnH,sCAAEG,KAA0CC,EAAAA,EAAAA,KAM5CC,IAASC,EAAAA,EAAAA,IAAU,CACrBC,cAN0F,CAC1FC,QAAS,GACTC,YAAa,IAKbC,iBAAkBP,GAClB9E,SAAUsF,UAAmB,IAADC,EACxB,MAAMC,EAA4B,OAAlBtG,QAAkB,IAAlBA,GAAsD,QAApCqG,EAAlBrG,EAAoBuG,0CAAkC,IAAAF,OAApC,EAAlBA,EAAwDrF,KAAI,CAAC9F,EAAMsL,KACM,IAADC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAC,EAAAC,EAAAC,EAAAC,EAApF,GAAuB,OAAlBjH,QAAkB,IAAlBA,IAAAA,EAAoBkH,iBAAiBzL,SAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,OAAuB,KAAV,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,MACpE,MAAO,CACHmI,YAAkB,OAAN0E,QAAM,IAANA,GAAmB,QAAbV,EAANU,EAAQjB,mBAAW,IAAAO,GAAS,QAATC,EAAnBD,EAAsBD,UAAM,IAAAE,OAAtB,EAANA,EAA8BjE,WAC1CwD,QAAe,OAANkB,QAAM,IAANA,OAAM,EAANA,EAAQlB,QACjBmB,WAAYzC,EACZ0C,aAAoB,OAANF,QAAM,IAANA,GAAmB,QAAbR,EAANQ,EAAQjB,mBAAW,IAAAS,GAAS,QAATC,EAAnBD,EAAsBH,UAAM,IAAAI,OAAtB,EAANA,EAA8BS,aAC5CC,YAAahH,EACbiH,YAAiB,OAAJrM,QAAI,IAAJA,GAA+B,QAA3BkI,EAAJlI,EAAMgG,iCAAyB,IAAAkC,OAA3B,EAAJA,EAAiC9I,KAC9CkN,QAAmD,eAApC,OAANL,QAAM,IAANA,GAAmB,QAAbN,EAANM,EAAQjB,mBAAW,IAAAW,GAAS,QAATC,EAAnBD,EAAsBL,UAAM,IAAAM,OAAtB,EAANA,EAA8BU,SAAgC,OAANL,QAAM,IAANA,GAAmB,QAAbJ,EAANI,EAAQjB,mBAAW,IAAAa,GAAS,QAATC,EAAnBD,EAAsBP,UAAM,IAAAQ,OAAtB,EAANA,EAA8BQ,QAAU,GACzGC,WAAsB,QAAZR,EAAM,OAAJ/L,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,YAAI,IAAA2M,EAAAA,EAAI,GAElC,IAEJ,GAAIX,EACA,IAAK,IAADoB,EAAAC,EACA,MAAMC,QAAiBzC,EAAgC,CAAE5E,UAAW,CAAEsH,UAA6B,OAAlB7H,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBkH,oBAErG,GADAlJ,GAAS8J,EAAAA,EAAAA,IAAkB,KACf,OAARF,QAAQ,IAARA,GAAc,QAANF,EAARE,EAAU1M,YAAI,IAAAwM,GAAkC,QAAlCC,EAAdD,EAAgBK,wCAAgC,IAAAJ,GAAhDA,EAAkDK,QAAS,CAAC,IAADC,EAAAC,EAC3D,MAAMN,QAAiB5C,EAA+B,CAAEzE,UAAW,CAAE2F,YAAaI,KAClF6B,EAAAA,GAAMC,QAAgB,OAARR,QAAQ,IAARA,GAAc,QAANK,EAARL,EAAU1M,YAAI,IAAA+M,GAAkC,QAAlCC,EAAdD,EAAgBI,wCAAgC,IAAAH,OAAxC,EAARA,EAAkDF,QACpE,CACJ,CACA,MAAOM,GACHH,EAAAA,GAAMI,MAAOD,EAA4DE,aAAaC,OAAOC,OAAO,GAAGV,QAC3G,CACJ,KAIRW,EAAAA,EAAAA,YAAU,KACN3K,GAAS4K,EAAAA,EAAAA,IAA2C,KAChDtI,IACAtC,GAAS6K,EAAAA,EAAAA,IAAcvI,IACvBgF,EAAM,CACF/E,UAAW,CACPuI,OAAQxI,KAEbyI,MAAMC,IACLxE,GAAgB,KAAO,IAADyE,EAAAC,EAAAC,EAOd,MAAO,CAAC,CAACxI,KAAK,eAAe,CAAEA,KAAM,YAAa8E,IAAK,gBANjC,OAAHuD,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAK9N,YAAI,IAAA+N,GAAiB,QAAjBC,EAATD,EAAWG,uBAAe,IAAAF,GAAM,QAANC,EAA1BD,EAA4BhO,YAAI,IAAAiO,OAA7B,EAAHA,EAAkCnI,KAAKgC,IACnD,CACHrC,KAAU,OAAJqC,QAAI,IAAJA,OAAI,EAAJA,EAAM5I,SACZqL,IAAS,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAM1I,SAGyE,GAE9F,IACH+O,OAAOf,IAAG,IAAAgB,EAAAC,EAAAC,EAAA,OAAKrB,EAAAA,GAAMI,MAAS,OAAHD,QAAG,IAAHA,GAAiB,QAAdgB,EAAHhB,EAAKE,oBAAY,IAAAc,GAAQ,QAARC,EAAjBD,EAAmBb,cAAM,IAAAc,GAAW,QAAXC,EAAzBD,EAA2Bb,OAAO,UAAE,IAAAc,OAAjC,EAAHA,EAAsCxB,QAAQ,IAChF,GACD,KAEHW,EAAAA,EAAAA,YAAU,KACN,GAAqC,OAAjC9D,QAAiC,IAAjCA,GAAAA,EAAmCA,kCAAmC,CAAC,IAAD4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtE,MAAM7C,EAA0B,OAAXhC,QAAW,IAAXA,GAA2B,QAAhBoE,EAAXpE,EAAa8E,sBAAc,IAAAV,GAAM,QAANC,EAA3BD,EAA6BvO,YAAI,IAAAwO,OAAtB,EAAXA,EAAmCpG,QAAQX,GAA2D,MAAlB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWC,kBACrGgF,EAA4C,OAAjC/C,QAAiC,IAAjCA,GAAoE,QAAnC8E,EAAjC9E,EAAmCA,yCAAiC,IAAA8E,GAAM,QAANC,EAApED,EAAsEzO,YAAI,IAAA0O,OAAzC,EAAjCA,EAA4EQ,mBAec,IAADC,EAAAC,EAAAC,EAA1G,GAdiC,OAAjC1F,QAAiC,IAAjCA,GAAoE,QAAnCgF,EAAjChF,EAAmCA,yCAAiC,IAAAgF,GAAM,QAANC,EAApED,EAAsE3O,YAAI,IAAA4O,GAAoB,QAApBC,EAA1ED,EAA4EM,0BAAkB,IAAAL,GAA9FA,EAAgGrO,SAAQ,CAACR,EAAsCsL,KAAmB,IAADgE,EAAAjH,EAItJkH,EAG8DC,EAEhEC,GARL7E,GAAO8E,cAAc,UAAe,OAAJ1P,QAAI,IAAJA,GAAU,QAANsP,EAAJtP,EAAM2H,YAAI,IAAA2H,OAAN,EAAJA,EAAYlQ,MACpC,OAAJY,QAAI,IAAJA,GAAAA,EAAM+H,cACN6C,GAAO8E,cAAc,gBAAD7N,OAAiByJ,EAAK,aAAa,aAEvDV,GAAO8E,cAAc,gBAAD7N,OAAiByJ,EAAK,aAAiB,OAAJtL,QAAI,IAAJA,GAAU,QAANuP,EAAJvP,EAAM8H,YAAI,IAAAyH,OAAN,EAAJA,EAAYnQ,MAEpB,qBAA5C,OAAJY,QAAI,IAAJA,GAA+B,QAA3BqI,EAAJrI,EAAMgG,iCAAyB,IAAAqC,OAA3B,EAAJA,EAAiCrB,cAChC4D,GAAO8E,cAAc,gBAAD7N,OAAiByJ,EAAK,kBAA6B,OAAZa,QAAY,IAAZA,GAAiB,QAALqD,EAAZrD,EAAe,UAAE,IAAAqD,OAAL,EAAZA,EAAmBpQ,MAE9EwL,GAAO8E,cAAc,gBAAD7N,OAAiByJ,EAAK,kBAAsB,OAAJtL,QAAI,IAAJA,GAAe,QAAXyP,EAAJzP,EAAMyH,iBAAS,IAAAgI,OAAX,EAAJA,EAAiBrQ,MAEjFwL,GAAO8E,cAAc,gBAAD7N,OAAiByJ,EAAK,eAAmB,OAAJtL,QAAI,IAAJA,OAAI,EAAJA,EAAMuH,UAAU,IAEzC,OAAjCoC,QAAiC,IAAjCA,GAAoE,QAAnCmF,EAAjCnF,EAAmCA,yCAAiC,IAAAmF,GAAM,QAANC,EAApED,EAAsE9O,YAAI,IAAA+O,GAAoB,QAApBC,EAA1ED,EAA4EG,0BAAkB,IAAAF,GAA9FA,EAAgG/N,OAE/F6B,GAAS+C,EAAAA,EAAAA,IAAwD,OAAjC8D,QAAiC,IAAjCA,GAAoE,QAAnCwF,EAAjCxF,EAAmCA,yCAAiC,IAAAwF,GAAM,QAANC,EAApED,EAAsEnP,YAAI,IAAAoP,GAAoB,QAApBC,EAA1ED,EAA4EF,0BAAkB,IAAAG,OAA7D,EAAjCA,EAAgGvJ,KAAK9F,IAA0C,IAAD+F,EAC1K,OAAW,OAAJ/F,QAAI,IAAJA,GAA+B,QAA3B+F,EAAJ/F,EAAMgG,iCAAyB,IAAAD,OAA3B,EAAJA,EAAiC3G,IAAI,WAGhD0D,GAAS6M,EAAAA,EAAAA,IAAqB,KAElC7M,GAASmD,EAAAA,EAAAA,IAAsCyG,GACnD,IACD,CAAkC,OAAjC/C,QAAiC,IAAjCA,OAAiC,EAAjCA,EAAmCA,qCAEvC8D,EAAAA,EAAAA,YAAU,KACE,OAAJzN,QAAI,IAAJA,GAAAA,EAAM4P,2BACNtF,GAA0B,KAAO,IAADuF,EAAAC,EAC5B,MAAMC,EAAqB,OAAJ/P,QAAI,IAAJA,GAA+B,QAA3B6P,EAAJ7P,EAAM4P,iCAAyB,IAAAC,GAAM,QAANC,EAA/BD,EAAiC7P,YAAI,IAAA8P,OAAjC,EAAJA,EAAuChK,KAAK9F,IACxD,CAAEyF,KAAK,GAAD5D,OAAS,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM4H,WAAU,KAAA/F,OAAQ,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM6H,WAAa0C,IAAS,OAAJvK,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,KAAMA,KAAU,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,SAE1F,MAAO,CAAC,CAAEqG,KAAM,sBAAuB8E,IAAK,OAASwF,EAAe,IAG7D,OAAX5F,QAAW,IAAXA,GAAAA,EAAa8E,gBACbxE,IAAwB,KAAO,IAADuF,EAAAC,EAC1B,MAAMF,EAA4B,OAAX5F,QAAW,IAAXA,GAA2B,QAAhB6F,EAAX7F,EAAa8E,sBAAc,IAAAe,GAAM,QAANC,EAA3BD,EAA6BhQ,YAAI,IAAAiQ,OAAtB,EAAXA,EAAmCnK,KAAK9F,IAClC,MAAlB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM0H,iBACL5E,GAASoN,EAAAA,EAAAA,IAAkB,OAAJlQ,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,OAE1B,CAAEqG,KAAU,OAAJzF,QAAI,IAAJA,OAAI,EAAJA,EAAM0H,eAAgB6C,IAAS,OAAJvK,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,KAAMA,KAAU,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,SAEtE,MAAO,CAAC,CAAEqG,KAAM,mBAAoB8E,IAAK,OAASwF,EAAe,GAEzE,GACD,CAAK,OAAJ/P,QAAI,IAAJA,OAAI,EAAJA,EAAM4P,0BAA2BzF,IAErC,MAAMgG,IAAyB1O,EAAAA,EAAAA,cAAY,KACvCqB,GAASoD,EAAAA,EAAAA,KAAyC,GAAM,GACzD,CAAO,OAAN0E,SAAM,IAANA,QAAM,EAANA,GAAQqB,SAENmE,IAAW3O,EAAAA,EAAAA,cAAY,CAACzB,EAAqCsL,KAAkB,IAAD+E,EAAAC,EAAAC,EAChFzN,GAAS0N,EAAAA,EAAAA,IAAsC,CAAEC,WAAgB,OAAJzQ,QAAI,IAAJA,GAA+B,QAA3BqQ,EAAJrQ,EAAMgG,iCAAyB,IAAAqK,OAA3B,EAAJA,EAAiCjR,KAAMuN,UAAe,OAAJ3M,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,KAAMkM,MAAMA,KACjI,MAAMN,EAAoB,OAANJ,SAAM,IAANA,IAAc,QAAR0F,EAAN1F,GAAQqB,cAAM,IAAAqE,GAAa,QAAbC,EAAdD,EAAgBtF,mBAAW,IAAAuF,OAArB,EAANA,EAA6BnI,QAAO,CAACsI,EAAEC,IAAYA,IAAYrF,IAChFN,GACCJ,GAAO8E,cAAc,cAAc1E,EACvC,GACD,CAAClG,IAEE8L,IAASnP,EAAAA,EAAAA,cAAaoP,IACxBjG,GAAO8E,cAAcmB,EAAEC,OAAOrL,MAAMsL,EAAAA,EAAAA,IAAkBF,GAAG,GAC1D,KAEHpD,EAAAA,EAAAA,YAAU,KACN,GAAsB,OAAlB3I,QAAkB,IAAlBA,GAAAA,EAAoBuG,mCAAoC,CAAC,IAAD2F,EAAAC,EAAAC,EACxD,MAAM/E,EAA0B,OAAXhC,QAAW,IAAXA,GAA2B,QAAhB6G,EAAX7G,EAAa8E,sBAAc,IAAA+B,GAAM,QAANC,EAA3BD,EAA6BhR,YAAI,IAAAiR,OAAtB,EAAXA,EAAmC7I,QAAQX,GAA2D,MAAlB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWC,kBAC3GkD,GAAO8E,cAAc,cAAiC,OAAlB5K,QAAkB,IAAlBA,GAAsD,QAApCoM,EAAlBpM,EAAoBuG,0CAAkC,IAAA6F,OAApC,EAAlBA,EAAwDpL,KAAI,CAAC9F,EAAKsL,KAAW,IAAD6F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5G,MAAO,CAAExF,QAAe,OAAN1B,SAAM,IAANA,IAAc,QAARuG,EAANvG,GAAQqB,cAAM,IAAAkF,GAAa,QAAbC,EAAdD,EAAgBnG,mBAAW,IAAAoG,GAAS,QAATC,EAA3BD,EAA8B9F,UAAM,IAAA+F,OAA9B,EAANA,EAAsC/E,QAAU/E,UAA0D,QAAjD+J,EAAQ,OAAN1G,SAAM,IAANA,IAAc,QAAR2G,EAAN3G,GAAQqB,cAAM,IAAAsF,GAAa,QAAbC,EAAdD,EAAgBvG,mBAAW,IAAAwG,GAAS,QAATC,EAA3BD,EAA8BlG,UAAM,IAAAmG,OAA9B,EAANA,EAAsClK,iBAAS,IAAA+J,EAAAA,EAAE,EAAGnF,aAA6D,qBAA5C,OAAJnM,QAAI,IAAJA,GAA+B,QAA3B0R,EAAJ1R,EAAMgG,iCAAyB,IAAA0L,OAA3B,EAAJA,EAAiC1K,cAA6C,OAAZmF,QAAY,IAAZA,GAAiB,QAALwF,EAAZxF,EAAe,UAAE,IAAAwF,OAAL,EAAZA,EAAmBvS,KAAY,OAANwL,SAAM,IAANA,IAAc,QAARgH,EAANhH,GAAQqB,cAAM,IAAA2F,GAAa,QAAbC,EAAdD,EAAgB5G,mBAAW,IAAA6G,GAAS,QAATC,EAA3BD,EAA8BvG,UAAM,IAAAwG,OAA9B,EAANA,EAAsC3F,aAAc,IAErS,IAED,CAAmB,OAAlBrH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBuG,qCAExB,MAAM0G,GAA2B,OAANnH,SAAM,IAANA,IAAc,QAARhC,EAANgC,GAAQ4C,cAAM,IAAA5E,OAAR,EAANA,EAAgBoC,YACrCgH,GAA6B,OAANpH,SAAM,IAANA,IAAe,QAAT/B,EAAN+B,GAAQqH,eAAO,IAAApJ,OAAT,EAANA,EAAiBmC,YAC9C,OACIlJ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACIF,EAAAA,EAAAA,KAACwQ,EAAAA,EAAa,CAACrP,YAAY,6BACzBkH,GAAgBG,KAAiBxI,EAAAA,EAAAA,KAACyQ,EAAAA,EAAM,KAC1CrQ,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8EAA6EC,SAAA,EACxFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iEAAgEC,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAK8H,OAEThI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2EAA0EC,SAAA,EACrFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCC,UAC5CF,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAQ,CACL3M,KAAK,UACLjG,GAAG,UACH6G,MAAOrH,EAAE,gBACTqT,MAAa,OAANzH,SAAM,IAANA,IAAc,QAAR9B,EAAN8B,GAAQqB,cAAM,IAAAnD,OAAR,EAANA,EAAgBiC,QACvBuH,SAAU1H,GAAO2H,aACjBC,QAASnI,EAAwBgD,MAAa,OAANzC,SAAM,IAANA,IAAc,QAAR7B,EAAN6B,GAAQ4C,cAAM,IAAAzE,GAAdA,EAAgBgC,SAAiB,OAANH,SAAM,IAANA,IAAe,QAAT5B,EAAN4B,GAAQqH,eAAO,IAAAjJ,GAAfA,EAAiB+B,QAAgB,OAANH,SAAM,IAANA,IAAc,QAAR3B,EAAN2B,GAAQ4C,cAAM,IAAAvE,OAAR,EAANA,EAAgB8B,QAAU,GAAI0H,UAAWrN,OAE/I1D,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,CAACe,KAAK,SAASxF,UAAU,8DAA8DyB,QAAS+M,GAAwB9J,MAAO,GAAIoM,UAAWrN,EAAWxD,SAC3J5C,EAAE,wCAIf8C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,sBAAqBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAC,kBAC7BE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0GAAyGC,SAAA,EACpHE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CACoB,OAAf4D,QAAe,IAAfA,OAAe,EAAfA,EAAiBM,KAAI,CAACS,EAAuB+E,KAC1C,MAAMf,EAAMe,EACZ,OAEI5J,EAAAA,EAAAA,KAAA,MAAI8E,MAAM,MAAK5E,UACXF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,qBAAAE,OAA0C,UAAnB0E,EAAWd,KAAmB,iBAAmB,IAAK7D,SACtF2E,EAAWd,QAFC8E,EAKhB,KAGb7I,EAAAA,EAAAA,KAAA,MAAI8E,MAAM,MAAK5E,UACXF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE5C,EAAE,oBAIlD0C,EAAAA,EAAAA,KAAA,SAAAE,SACuB,OAAlBkD,QAAkB,IAAlBA,GAAsD,QAApCoE,EAAlBpE,EAAoBuG,0CAAkC,IAAAnC,OAApC,EAAlBA,EAAwDpD,KAAI,CAAC9F,EAAsCsL,KAAmB,IAADoH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClH,MAAMC,EAAUnJ,EAChB,OAAQxJ,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACJF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAQ,CACL3M,KAAI,gBAAA5D,OAAkByJ,EAAK,aAC3B9L,GAAG,cACH6S,MAAa,OAANzH,SAAM,IAANA,IAAc,QAAR8H,EAAN9H,GAAQqB,cAAM,IAAAyG,GAAa,QAAbC,EAAdD,EAAgB1H,mBAAW,IAAA2H,GAAS,QAATC,EAA3BD,EAA8BrH,UAAM,IAAAsH,OAA9B,EAANA,EAAsCtG,QAC7CgG,SAAU1H,GAAO2H,aACjBC,QAASnJ,EAAcgE,MAAyB,OAAlB0E,SAAkB,IAAlBA,IAA2B,QAATc,EAAlBd,GAAqBzG,UAAM,IAAAuH,GAA3BA,EAA6BvG,SAA+B,OAApB0F,SAAoB,IAApBA,IAA6B,QAATc,EAApBd,GAAuB1G,UAAM,IAAAwH,GAA7BA,EAA+BxG,QAA4B,OAAlByF,SAAkB,IAAlBA,IAA2B,QAATgB,EAAlBhB,GAAqBzG,UAAM,IAAAyH,OAAT,EAAlBA,EAA6BzG,QAAU,UAGlK5K,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAA+B,QAA3BgT,EAAJhT,EAAMgG,iCAAyB,IAAAgN,OAA3B,EAAJA,EAAiChM,gBAC5DtF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAA+B,QAA3BiT,EAAJjT,EAAMgG,iCAAyB,IAAAiN,GAAU,QAAVC,EAA/BD,EAAiChM,gBAAQ,IAAAiM,OAArC,EAAJA,EAA2CzN,QACtE/D,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAA+B,QAA3BmT,EAAJnT,EAAMgG,iCAAyB,IAAAmN,GAAe,QAAfC,EAA/BD,EAAiCjM,qBAAa,IAAAkM,OAA1C,EAAJA,EAAgDjM,QAC3EzF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAA+B,QAA3BqT,EAAJrT,EAAMgG,iCAAyB,IAAAqN,GAAW,QAAXC,EAA/BD,EAAiCjM,iBAAS,IAAAkM,OAAtC,EAAJA,EAA4C7N,QACvE/D,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAM,OAAJ5B,QAAI,IAAJA,GAA+B,QAA3BuT,EAAJvT,EAAMgG,iCAAyB,IAAAuN,GAAQ,QAARC,EAA/BD,EAAiClM,cAAM,IAAAmM,OAAnC,EAAJA,EAAyCnM,UACpE3F,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAACgT,EAAAA,EAAS,CACNjP,KAAI,gBAAA5D,OAAkByJ,EAAK,eAC3B+G,MAAa,OAANzH,SAAM,IAANA,IAAc,QAAR6I,EAAN7I,GAAQqB,cAAM,IAAAwH,GAAa,QAAbC,EAAdD,EAAgBzI,mBAAW,IAAA0I,GAAS,QAATC,EAA3BD,EAA8BpI,UAAM,IAAAqI,OAA9B,EAANA,EAAsCpM,UAC7C+K,SAAU1H,GAAO2H,aACjB3B,OAAQA,GACR+D,YAAa3V,EAAE,QACf4V,UAAU,EACVnC,SAA4D,qBAA9C,OAAJzS,QAAI,IAAJA,GAA+B,QAA3B4T,EAAJ5T,EAAMgG,iCAAyB,IAAA4N,OAA3B,EAAJA,EAAiC5M,eAA2G,eAAnE,OAAJhH,QAAI,IAAJA,GAA+B,QAA3B6T,EAAJ7T,EAAMgG,iCAAyB,IAAA6N,GAAW,QAAXC,EAA/BD,EAAiCzM,iBAAS,IAAA0M,OAAtC,EAAJA,EAA4CrO,KAAKoP,qBAChIxH,MAAyB,OAAlB0E,SAAkB,IAAlBA,IAA2B,QAATgC,EAAlBhC,GAAqBzG,UAAM,IAAAyI,GAA3BA,EAA6BxM,WAAiC,OAApByK,SAAoB,IAApBA,IAA6B,QAATgC,EAApBhC,GAAuB1G,UAAM,IAAA0I,GAA7BA,EAA+BzM,UAA8B,OAAlBwK,SAAkB,IAAlBA,IAA2B,QAATkC,EAAlBlC,GAAqBzG,UAAM,IAAA2I,OAAT,EAAlBA,EAA6B1M,UAAY,UAIjJ7F,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAQ,CACL3M,KAAI,gBAAA5D,OAAkByJ,EAAK,kBAC3B9L,GAAG,cACH6S,MAAa,OAANzH,SAAM,IAANA,IAAc,QAARsJ,EAANtJ,GAAQqB,cAAM,IAAAiI,GAAa,QAAbC,EAAdD,EAAgBlJ,mBAAW,IAAAmJ,GAAS,QAATC,EAA3BD,EAA8B7I,UAAM,IAAA8I,OAA9B,EAANA,EAAsCjI,aAC7CmG,SAAU1H,GAAO2H,aACjBE,SAA0D,qBAA5C,OAAJzS,QAAI,IAAJA,GAA+B,QAA3BqU,EAAJrU,EAAMgG,iCAAyB,IAAAqO,OAA3B,EAAJA,EAAiCrN,cAC3CwL,QAAShI,GAAsB6C,MAAyB,OAAlB0E,SAAkB,IAAlBA,IAA2B,QAATuC,EAAlBvC,GAAqBzG,UAAM,IAAAgJ,GAA3BA,EAA6BnI,cAAoC,OAApB6F,SAAoB,IAApBA,IAA6B,QAATuC,EAApBvC,GAAuB1G,UAAM,IAAAiJ,GAA7BA,EAA+BpI,aAAiC,OAAlB4F,SAAkB,IAAlBA,IAA2B,QAATyC,EAAlBzC,GAAqBzG,UAAM,IAAAkJ,OAAT,EAAlBA,EAA6BrI,aAAe,UAGzLzK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAC1BF,EAAAA,EAAAA,KAAA,UAAQyF,KAAK,SAASxF,UAAU,gDAAgDyB,QAASA,IAAMgN,GAASpQ,EAAKsL,GAAO1J,UAAGF,EAAAA,EAAAA,KAACoT,EAAAA,GAAK,CAACnT,UAAU,uBA3C/H8S,EA8CZ,UAIoD,KAAjD,OAAlB3P,QAAkB,IAAlBA,GAAsD,QAApCqE,EAAlBrE,EAAoBuG,0CAAkC,IAAAlC,OAApC,EAAlBA,EAAwDlI,SACa,QAAjD,OAAlB6D,QAAkB,IAAlBA,GAAsD,QAApCsE,EAAlBtE,EAAoBuG,0CAAkC,IAAAjC,OAApC,EAAlBA,EAAwDnI,WACpDS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCF,EAAAA,EAAAA,KAAA,OAAAE,SAAM5C,EAAE,yBAMhC0C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC7DF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iFAAiFwF,KAAK,SACpG4N,MAAK,GAAAlT,OAAK7C,EAAE,YAAcoE,QAASA,IAAa,OAANwH,SAAM,IAANA,QAAM,EAANA,GAAQoK,eAAgBvC,SAAU1I,GAAgBG,IAAiB9E,EAAWxD,SAAE,mBAIzIkD,EAAmBmQ,wCAAyCvT,EAAAA,EAAAA,KAAC6C,EAAsB,MACrF,C","sources":["components/breadcrumb/breadcrumb.tsx","components/common/loader.tsx","components/header/updatedHeader.tsx","framework/graphql/mutations/zoneManagement.ts","framework/graphql/queries/frequencyManagement.ts","framework/graphql/queries/createDiversionReport.ts","views/diversionContractors/addServiceFromTemplate.tsx","framework/graphql/mutations/createDiversionReport.ts","views/diversionReport/createDiversionReport.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Breadcrumb = () => {\n\tconst { t } = useTranslation();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst { id } = useParams();\n\tconst { userProfileData } = useSelector(\n\t\t(state: { userProfile: { userProfileData: UserProfileType; } }) => state.userProfile,\n\t);\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? '';\n\n\t\n\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2]?.includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0]?.toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0]?.toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst thirdLevelLink = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\tmodulePath = data?.replace(/-|\\s/g, ' ');\n\t\t\tconst splitPathName = modulePath.split(' ');\n\t\t\tfor (let i = 0; i < splitPathName.length; i++) {\n\t\t\t\tsplitPathName[i] = splitPathName[i][0].toUpperCase() + splitPathName[i].substring(1); // Use substring instead of substr\n\t\t\t}\n\t\t\tmodulePath = splitPathName.join(' ');\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' '; // Using slice as you did previously\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst removeID = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' ';\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst urlArray = location.pathname.split('/');\n\n\tconst breadcrumbLinks = useCallback(() => {\n\t\tif (urlArray?.length > 0) {\n\t\t\tconst length = urlArray?.length\n\t\t\tif (length < 4) {\n\t\t\t\treturn (\n\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 5) {\n\t\t\t\tif (urlArray[3] !== '') {\n\t\t\t\t\tif (urlArray[3].length > 32) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{!removeID(urlArray[3]) &&\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(removeID(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 6) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 7) {\n\t\t\t\tlet uuidData = ''\n\t\t\t\tif (uuid) {\n\t\t\t\t\tuuidData = `?uuid=${uuid}`;\n\t\t\t\t} else if (id) {\n\t\t\t\t\tuuidData = `?uuid=${id}`;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[2]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}/${urlArray[3]}/${(uuid !== '' || id !== '') && uuidData}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[3]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[5] && `${t(thirdLevelLink(urlArray[4]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}, [urlArray]);\n\n\treturn (\n\t\t<div className='w-full'>\n\t\t\t<p className='max-xs:text-xs text-xs-14 max-md:truncate'>\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`)} className='cursor-pointer text-light-grey hover:underline'>\n\t\t\t\t\t\t{t('Home')}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<span className='mx-2 text-light-grey'>{'>'}</span>\n\t\t\t\t</span>\n\n\t\t\t\t{breadcrumbLinks()}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Breadcrumb);\n","import React from 'react'\n\nfunction Loader() {\n\n    return (\n        <div className='w-12 h-12 mx-auto rounded-[50%] border-solid border-4 border-[#E8E8EA] border-r-[#2575d6] animate-spin absolute left-[58%] top-[40%] z-[9999]'></div>\n    )\n}\n\nexport default Loader\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport Breadcrumb from '@components/breadcrumb/breadcrumb';\nimport { HamburgerMenu } from '@components/icons/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShow } from 'src/redux/courses-management-slice';\n\ninterface UpdatedHeaderProps {\n\theaderActionConst?: any,\n\theaderTitle?: string,\n}\n\nconst UpdatedHeader = ({ headerActionConst, headerTitle }: UpdatedHeaderProps) => {\n\tconst { t } = useTranslation();\n\tconst dispatch = useDispatch();\n\tconst { show } = useSelector(((state: { coursesManagement: { show: boolean } }) => state.coursesManagement));\n\n\tconst location = useLocation();\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2].includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0].toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0].toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst onRenderJsxElement = () => {\n\t\tif (headerActionConst) {\n\t\t\treturn (headerActionConst())\n\t\t}\n\t}\n\n\tconst OnClickHandler = useCallback(() => {\n\t\tdispatch(setShow(!show))\n\t}, [show]);\n\n\treturn (\n\t\t<header className='sticky top-0 z-20 flex bg-white border-b shadow-header xl:shadow-none xl:h-auto xl:block border-border-primary xl:px-2 xl:pt-0'>\n\t\t\t<div onClick={OnClickHandler} className='pt-5 cursor-pointer text-xl-22 xl:hidden'>\n\t\t\t\t<HamburgerMenu className='ml-4' />\n\t\t\t</div>\n\t\t\t<div className='p-2.5 xl:p-[18px] xl:shadow-header max-xl:w-[calc(100%-47px)]'>\n\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-2.5'>\n\t\t\t\t\t<div className='w-full xl:w-auto'>\n\t\t\t\t\t\t<h1 className='mb-1 text-2xl max-xl:truncate xl:text-3xl'>{t(headerTitle ?? moduleName(location.pathname))}</h1>\n\t\t\t\t\t\t<Breadcrumb />\n\t\t\t\t\t</div>\n\t\t\t\t\t{headerActionConst &&\n\t\t\t\t\t\t<div className='flex gap-2.5 max-xl:w-[calc(100%+40px)] lg:gap-5'>\n\t\t\t\t\t\t\t{onRenderJsxElement()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default UpdatedHeader;\n","import { gql } from '@apollo/client';\n\nexport const GET_ZONE_BY_SITE_ID = gql`mutation GetZoneBySiteId($siteId: String!) {\n    getZoneBySiteId(siteId: $siteId) {\n      message\n      data {\n        uuid\n        location\n        city\n        diversion_percentage\n        zoneCount\n      }\n    }\n  }`;\n\n\n\nexport const CREATE_OR_UPDATE_ZONE = gql`mutation CreateOrUpdateZone($zoneData: CreateZoneDto!) {\n  createOrUpdateZone(zoneData: $zoneData) {\n    message\n    data {\n      uuid\n      location\n      city\n      diversion_percentage\n      parent {\n        uuid\n        location\n        city\n        diversion_percentage\n        zoneCount\n      }\n    }\n  }\n}`;\n\nexport const DELETE_ZONE = gql`mutation DeleteZone($siteId: String!, $zoneId: String!) {\n  deleteZone(siteId: $siteId, zoneId: $zoneId) {\n    message\n  }\n}`;\n\nexport const GET_ACTIVE_SITES = gql`query GetActiveSites {\n  getActiveSites {\n    message\n    data {\n      uuid\n      location\n      city\n      diversion_percentage\n      zoneCount\n    }\n  }\n}`;\n\nexport const GET_ZONES_BY_ID =gql`mutation GetZoneBySiteId($siteId: String!) {\n  getZoneBySiteId(siteId: $siteId) {\n    message\n    data {\n      uuid\n      location\n      city\n      diversion_percentage\n      zoneCount\n    }\n  }\n} `","import { gql } from '@apollo/client';\n\nexport const GET_FREQUENCY_WITH_PAGINATION = gql`query GetFrequencyWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getFrequencyWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        frequency {\n          uuid\n          frequency_type\n          frequency\n        }\n        count\n      }\n    }\n  }`;\n\nexport const GET_FREQUENCIES = gql`query GetFrequencies {\n    getFrequencies {\n      message\n      data {\n        uuid\n        frequency_type\n        frequency\n      }\n    }\n  }`;\n\nexport const GET_FREQUENCY_BY_ID = gql`  query GetFrequencyById($frequencyId: String!) {\n    getFrequencyById(frequencyId: $frequencyId) {\n      message\n      data {\n        uuid\n        frequency_type\n        frequency\n      }\n    }\n  }`;","import { gql } from '@apollo/client';\n\nexport const GET_COMPANY_CONTRACTOR_USERS= gql`query GetCompanyContractorUsers($companyId: String!, $locationId: String!) {\n    getCompanyContractorUsers(companyId: $companyId, locationId: $locationId) {\n      message\n      data {\n        first_name\n        last_name\n        uuid\n        user_type\n      }\n    }\n  }`;\n\nexport const GET_ALL_DIVERSION_TEMPLATE= gql`query GetAllDiversionTemplates($locationId: String!) {\n  getAllDiversionTemplates(locationId: $locationId) {\n      message\n       data {\n        equipment {\n          name\n          uuid\n        }\n        is_equipment_updated\n        is_material_type_updated\n        is_material_updated\n        is_service_type_updated\n        is_volume_updated\n        location {\n          location\n          uuid\n        }\n        material {\n          name\n          uuid\n        }\n        material_type {\n          uuid\n          type\n          weight\n        }\n        service_type\n        subscriber {\n          uuid\n        }\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n        uuid\n      }\n    }\n  }\n  `;\nexport const GET_ALL_DIVERSION_CONTRACTORS_SERVICES = gql`query GetAllDiversionContractorServices($companyId: String!, $limit: Float!, $page: Float!, $locationId: String!) {\n  getAllDiversionContractorServices(companyId: $companyId,  limit: $limit, page: $page, locationId: $locationId) {\n    message\n    data {\n      count\n      contractorServices {\n          add_units\n      contractor_company {\n        name\n        uuid\n      }\n     diversion_report_template {\n        equipment {\n          name\n          uuid\n        }\n        material {\n          uuid\n          name\n        }\n        material_type {\n          uuid\n          type\n          weight\n        }\n        service_type\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n        uuid\n      }\n      frequency {\n        uuid\n        frequency_type\n        frequency\n      }\n      location {\n        location\n        uuid\n      }\n      subscriber {\n        uuid\n      }\n      user {\n        first_name\n        last_name\n        uuid\n      }\n      zone {\n        location\n        uuid\n      }\n      uuid\n      is_full_site\n      }\n    }\n  }\n}\n\n`;","import { useQuery } from '@apollo/client';\nimport Button from '@components/button/button';\nimport { Cross } from '@components/icons/icons';\nimport { GET_ALL_DIVERSION_TEMPLATE } from '@framework/graphql/queries/createDiversionReport';\nimport { ColArrType } from '@types';\nimport React, { useCallback,  useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DiversionContractorType, setCreateDiversionReportTableViewData, setIsOpenDiversionTemplateSelectionPopup, setSelectedTemplateIds } from 'src/redux/diversion-contractor-slice';\nimport { AddtimeSetData, SetTableviewType } from 'src/types/diversionContractors';\n\n\nconst AddServiceFromTemplate = () => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const contractorsDetails = useSelector(((state: { diversionContractors: DiversionContractorType }) => state.diversionContractors));\n    const { data,loading } = useQuery(GET_ALL_DIVERSION_TEMPLATE,{\n        fetchPolicy:'network-only',skip:!contractorsDetails?.locationId, variables:{\n            locationId: contractorsDetails?.locationId\n        }\n    });\n    const [state, setState] = useState<AddtimeSetData[]>([]);\n    const COL_ARR_SERVICE = [\n        { name: t('Service Type'), sortable: false },\n        { name: t('Material Category'), sortable: false, fieldName: 'Material Category' },\n        { name: t('Material Type'), sortable: false, fieldName: 'Material Type' },\n        { name: t('Equipment'), sortable: false, fieldName: 'Equipment' },\n        { name: t('Volume'), sortable: false, fieldName: 'Volume' },\n    ] as ColArrType[];\n    const onChecked = (data: SetTableviewType) => {\n        const dataReq :AddtimeSetData= {\n            diversion_report_template: {\n                uuid: data?.uuid,\n                equipment: data?.equipment,\n                material: data?.material,\n                material_type:  data?.material_type,\n                service_type: data?.service_type,\n                volume:  data?.volume,\n                location:data?.location,\n            },\n            add_units: 0,\n            contractor_company:{\n                uuid:'',\n                name:''\n            },\n            frequency:{frequency:null,frequency_type:'',uuid:''},\n            subscriber: data?.subscriber,\n            user: {\n                first_name:'',\n                last_name:'',\n                uuid:''\n            } ,\n            zone: {\n                location: '',\n                uuid:''\n            },\n            uuid: '',\n            is_full_site: false\n        }\n        setState((prev) => {\n            if(!prev.find((data)=>data?.diversion_report_template?.uuid===dataReq?.diversion_report_template?.uuid)){\n                return [...prev, dataReq];\n            }else{\n                return prev.filter((data)=>data?.diversion_report_template?.uuid!==dataReq?.diversion_report_template?.uuid)\n            }\n        })\n    }\n    \n    const onSubmit = useCallback(() => {\n        dispatch(setSelectedTemplateIds(state?.map((data)=>{\n            return data?.diversion_report_template?.uuid;\n        })))\n        dispatch(setCreateDiversionReportTableViewData(state));\n        dispatch(setIsOpenDiversionTemplateSelectionPopup(false));\n    }, [state])\n\n    return (<div>\n        <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={' fixed top-0 left-0 right-0 z-50 h-full bg-modal modal'}>\n            <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className=\"flex items-center justify-center h-full py-5 transition-all duration-300\">\n                <div className='w-full mx-5 sm:max-w-[780px] '>\n                    {/* <!-- Modal content --> */}\n                    <div className='relative bg-white rounded-xl'>\n                        {/* <!-- Modal header --> */}\n                        <div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                            <p className='text-lg font-bold md:text-xl text-baseColor'>Add New Service</p>\n                            <Button onClick={() => dispatch(setIsOpenDiversionTemplateSelectionPopup(false))} label={t('')}>\n                                <span className='text-xl-22'><Cross className='text-error' /></span>\n                            </Button>\n                        </div>\n                        <div className='mb-3 bg-white rounded-xl overflow-y-auto max-h-[300px] mx-7 p-3 md:p-5'>\n                            <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                                <table>\n                                    <thead >\n                                        <tr>\n                                            {COL_ARR_SERVICE?.map((colValUser: ColArrType) => {\n                                                return (\n                                                    <th scope='col' key={crypto.randomUUID()}>\n                                                        <div className={`flex items-center ${colValUser.name == 'Status' ? 'justify-center' : ''}`}>\n                                                            {colValUser.name}\n\n                                                        </div>\n                                                    </th>\n                                                );\n                                            })}\n                                            <th scope='col'>\n                                                <div className='flex items-center'>{t('Action')}</div>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    {loading && \n                                    <tr>\n\n                                    <div className=' flex justify-center  p-4'>\n                                         <div className='w-7 h-7 mx-auto rounded-[50%] border-solid border-4 border-[#E8E8EA] border-r-[#2575d6] animate-spin  z-[9999]'></div>\n                                        </div>\n                                    </tr>\n                                     } \n                                        {data?.getAllDiversionTemplates?.data?.map((data:SetTableviewType ) => {\n                                            return (\n                                                <tr key={data?.uuid}>\n                                                    <td className='text-left'>{data?.service_type}</td>\n                                                    <td className='text-left'>{data?.material?.name}</td>\n                                                    <td className='text-left'>{data?.material_type?.type}</td>\n                                                    <td className='text-left'>{data?.equipment?.name}</td>\n                                                    <td className='text-left'>{data?.volume?.volume}</td>\n                                                    <td className='text-left'>\n                                                        <div className='btn-group'>\n                                                            <input type='checkbox' onClick={() => onChecked(data)} />\n                                                        </div>\n                                                    </td>\n                                                </tr>)\n                                        })}\n                                    </tbody>\n                                </table>\n                                        {(data?.getAllDiversionTemplates?.data?.length===null||data?.getAllDiversionTemplates?.data?.length===undefined)&&(\n                                    <div className='flex justify-center'>\n                                        <div>{t('No Data')}</div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                            {<Button label='Add' className={'btn-primary btn-normal w-full md:w-auto min-w-[160px]'} type='submit' onClick={onSubmit} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    );\n\n}\n\nexport default AddServiceFromTemplate;","import { gql } from '@apollo/client';\n\nexport const CREATE_DIVERSION_CONTRACTOR_SERVICE = gql`mutation CreateDiversionContractorService($serviceData: [CreateDiversionContractorServiceDto!]!) {\n    createDiversionContractorService(serviceData: $serviceData) {\n      message\n    }\n  }`;\n  \nexport const DELETE_DIVERSION_CONTRACTOR_SERVICE = gql`mutation DeleteDiversionContractorService($serviceId: [String!]!) {\n  deleteDiversionContractorService(serviceId: $serviceId) {\n    message\n  }\n}`","import Button from '@components/button/button';\nimport DropDown from '@components/dropdown/dropDown';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TextInput from '@components/textInput/TextInput';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ALL_DIVERSION_CONTRACTORS_SERVICES, GET_COMPANY_CONTRACTOR_USERS } from '@framework/graphql/queries/createDiversionReport';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DiversionContractorType, setCreateDiversionReportTableViewData, setDeleteDiversionReportTableViewData, setFrequecyId, setIsOpenDiversionTemplateSelectionPopup, setLocationId, setResetCreateDiversionReportTableViewData, setResetDeleteIds, setResetSelectionIds, setSelectedTemplateIds } from 'src/redux/diversion-contractor-slice';\nimport { DropdownOptionType } from '@types';\nimport AddServiceFromTemplate from '@views/diversionContractors/addServiceFromTemplate';\nimport { useSearchParams } from 'react-router-dom';\nimport { GET_ZONES_BY_ID } from '@framework/graphql/mutations/zoneManagement';\nimport { toast } from 'react-toastify';\nimport { GET_FREQUENCIES } from '@framework/graphql/queries/frequencyManagement';\nimport { FrequencyDataRes } from '@views/frequencyManagement';\nimport { FormikErrors, FormikTouched, useFormik } from 'formik';\nimport useValidation from '@framework/hooks/validations';\nimport { CREATE_DIVERSION_CONTRACTOR_SERVICE, DELETE_DIVERSION_CONTRACTOR_SERVICE } from '@framework/graphql/mutations/createDiversionReport';\nimport { whiteSpaceRemover } from '@utils/helpers';\nimport Loader from '@components/common/loader';\nimport { ColArrType, DiversionReportServicesListRes, InitialValuesCreateDiversionReport, contractorsDrpDownListRes } from 'src/types/diversionContractors';\nimport { Trash } from '@components/icons/icons';\n\n\n\nconst CreateDiversionReport = () => {\n    const { t } = useTranslation();\n    const contractorsDetails = useSelector(((state: { diversionContractors: DiversionContractorType }) => state.diversionContractors));\n    const [zonesDrpDown, setZonesDrpDown] = useState<DropdownOptionType[]>([]);\n    const dispatch = useDispatch();\n    const [params] = useSearchParams();\n    const companyId = params.get('companyId');\n    const locationId = params.get('locationId');\n    const companyName= params.get('companyName');\n    const COL_ARR_SERVICE = [\n        { name: t('Select Zone'), sortable: false },\n        { name: t('Service Type'), sortable: false },\n        { name: t('Material Category'), sortable: false, fieldName: 'Material Category' },\n        { name: t('Material Type'), sortable: true, fieldName: 'Material Type' },\n        { name: t('Equipment'), sortable: true, fieldName: 'Equipment' },\n        { name: t('Volume'), sortable: true, fieldName: 'Volume' },\n        { name: t('Add Unit'), sortable: true, fieldName: 'Add Unit' },\n        { name: t('Select Frequency'), sortable: true, fieldName: 'Select Frequency' },\n\n    ] as ColArrType[];\n    const { data } = useQuery(GET_COMPANY_CONTRACTOR_USERS, {\n        fetchPolicy: 'network-only', skip: (!companyId || !locationId), variables: {\n            companyId: companyId,\n            locationId: locationId\n        }\n    });\n    const { data: getAllDiversionContractorServices } = useQuery(GET_ALL_DIVERSION_CONTRACTORS_SERVICES, {\n        fetchPolicy: 'network-only', skip: !companyId, variables: {\n            companyId: companyId,\n            locationId: locationId,\n            limit: 10,\n            page: 1,\n        }\n    });\n    const [createDiversionServiceMutation, { loading: createLoader }] = useMutation(CREATE_DIVERSION_CONTRACTOR_SERVICE);\n    const [deleteDiversionServiceMuatation, { loading: deleteLoader }] = useMutation(DELETE_DIVERSION_CONTRACTOR_SERVICE);\n    const { data: frequencies } = useQuery(GET_FREQUENCIES, { fetchPolicy: 'network-only' });\n    const [zones] = useMutation(GET_ZONES_BY_ID);\n    const [contractorDropDownData, setContractorDropDownData] = useState<DropdownOptionType[]>([{ name: 'Select Report Owner', key: '' }]);\n    const [frequecyDropDownData, setFrequecyDropDownData] = useState<DropdownOptionType[]>([{ name: 'Select Frequency', key: '' }]);\n    const { createDiversionReportValidationSchema } = useValidation();\n    const initialValues: { user_id: string; serviceData: InitialValuesCreateDiversionReport[] } = {\n        user_id: '',\n        serviceData: []\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema: createDiversionReportValidationSchema,\n        onSubmit: async (values) => {\n            const reqData = contractorsDetails?.createDiversionReportTableViewData?.map((data, index: number) => {\n                if (!contractorsDetails?.deleteServiceIds.includes(data?.uuid) || data?.uuid == '') {\n                    return {\n                        add_units: +values?.serviceData?.[index]?.add_units,\n                        user_id: values?.user_id,\n                        company_id: companyId,\n                        frequency_id: values?.serviceData?.[index]?.frequency_id,\n                        location_id: locationId,\n                        template_id: data?.diversion_report_template?.uuid,\n                        zone_id: values?.serviceData?.[index]?.zone_id !== 'full_site' ? values?.serviceData?.[index]?.zone_id : '',\n                        service_id: data?.uuid ?? ''\n                    }\n                }\n            })\n            if (reqData) {\n                try {\n                    const response = await deleteDiversionServiceMuatation({ variables: { serviceId: contractorsDetails?.deleteServiceIds } });\n                    dispatch(setResetDeleteIds([]));\n                    if (response?.data?.deleteDiversionContractorService?.message) {\n                        const response = await createDiversionServiceMutation({ variables: { serviceData: reqData } });\n                        toast.success(response?.data?.createDiversionContractorService?.message);\n                    }\n                }\n                catch (err  ) {\n                    toast.error((err as {networkError:{result:{errors:[{message:string}]}}}).networkError.result.errors[0].message);\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        dispatch(setResetCreateDiversionReportTableViewData([]))\n        if (locationId) {\n            dispatch(setLocationId(locationId));\n            zones({\n                variables: {\n                    siteId: locationId,\n                }\n            }).then((res) => {\n                setZonesDrpDown(() => {\n                    const dropDownValues = res?.data?.getZoneBySiteId?.data?.map((zone: { location: string, diversion_percentage: number, uuid: string },) => {\n                        return {\n                            name: zone?.location,\n                            key: zone?.uuid,\n                        };\n                    })\n                        return [{name:'Select Zone'},{ name: 'Full Site', key: 'full_site' }, ...dropDownValues];\n                    \n                })\n            }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n        }\n    }, []);\n\n    useEffect(() => {\n        if (getAllDiversionContractorServices?.getAllDiversionContractorServices) {\n            const frequency_id = frequencies?.getFrequencies?.data?.filter((frequency: FrequencyDataRes) => frequency?.frequency_type=='1');\n            const response = getAllDiversionContractorServices?.getAllDiversionContractorServices?.data?.contractorServices as DiversionReportServicesListRes[];\n            getAllDiversionContractorServices?.getAllDiversionContractorServices?.data?.contractorServices?.forEach((data: DiversionReportServicesListRes, index: number) => {\n                formik.setFieldValue('user_id', data?.user?.uuid)\n                if (data?.is_full_site) {\n                    formik.setFieldValue(`serviceData.[${index}].zone_id`, 'full_site')\n                } else {\n                    formik.setFieldValue(`serviceData.[${index}].zone_id`, data?.zone?.uuid)\n                }\n                if(data?.diversion_report_template?.service_type==='Regular on call'){\n                    formik.setFieldValue(`serviceData.[${index}].frequency_id`,frequency_id?.[0]?.uuid)\n                }else{\n                    formik.setFieldValue(`serviceData.[${index}].frequency_id`, data?.frequency?.uuid)\n                }\n                formik.setFieldValue(`serviceData.[${index}].add_units`, data?.add_units)\n            })\n            if(getAllDiversionContractorServices?.getAllDiversionContractorServices?.data?.contractorServices?.length){\n\n                dispatch(setSelectedTemplateIds(getAllDiversionContractorServices?.getAllDiversionContractorServices?.data?.contractorServices?.map((data: DiversionReportServicesListRes) => {\n                    return data?.diversion_report_template?.uuid;\n                })))\n            }else{\n                dispatch(setResetSelectionIds([]));\n            }\n            dispatch(setCreateDiversionReportTableViewData(response));\n        }\n    }, [getAllDiversionContractorServices?.getAllDiversionContractorServices])\n    \n    useEffect(() => {\n        if (data?.getCompanyContractorUsers) {\n            setContractorDropDownData(() => {\n                const dropdownValues = data?.getCompanyContractorUsers?.data?.map((data: contractorsDrpDownListRes) => {\n                    return { name: `${data?.first_name} ${data?.last_name}`, key: data?.uuid, uuid: data?.uuid };\n                });\n                return [{ name: 'Select Report Owner', key: '' }, ...dropdownValues];\n            });\n        }\n        if (frequencies?.getFrequencies) {\n            setFrequecyDropDownData(() => {\n                const dropdownValues = frequencies?.getFrequencies?.data?.map((data: FrequencyDataRes) => {\n                    if(data?.frequency_type=='1'){\n                        dispatch(setFrequecyId(data?.uuid));\n                    }\n                    return { name: data?.frequency_type, key: data?.uuid, uuid: data?.uuid };\n                });\n                return [{ name: 'Select Frequency', key: '' }, ...dropdownValues];\n            })\n        }\n    }, [data?.getCompanyContractorUsers, frequencies])\n\n    const onAddNewSeviceTemplate = useCallback(() => {\n        dispatch(setIsOpenDiversionTemplateSelectionPopup(true));\n    }, [formik?.values]);\n\n    const onDelete = useCallback((data: DiversionReportServicesListRes,index:number) => {\n        dispatch(setDeleteDiversionReportTableViewData({ templateId: data?.diversion_report_template?.uuid, serviceId: data?.uuid ,index:index}));\n        const serviceData = formik?.values?.serviceData?.filter((_,dataIndex)=>dataIndex!==index);\n        if(serviceData){\n            formik.setFieldValue('serviceData',serviceData);\n        }\n    }, [contractorsDetails]);   \n\n    const onBlur = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n        formik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n    }, []);\n\n    useEffect(() => {\n        if (contractorsDetails?.createDiversionReportTableViewData) {\n            const frequency_id = frequencies?.getFrequencies?.data?.filter((frequency: FrequencyDataRes) => frequency?.frequency_type=='1');\n            formik.setFieldValue('serviceData', contractorsDetails?.createDiversionReportTableViewData?.map((data,index) => {\n                return { zone_id: formik?.values?.serviceData?.[index]?.zone_id , add_units: formik?.values?.serviceData?.[index]?.add_units??0, frequency_id:data?.diversion_report_template?.service_type==='Regular on call'?frequency_id?.[0]?.uuid: formik?.values?.serviceData?.[index]?.frequency_id };\n            }))\n        }\n\n    }, [contractorsDetails?.createDiversionReportTableViewData])\n\n    const createReportErrors = formik?.errors?.serviceData as FormikErrors<InitialValuesCreateDiversionReport>[];\n    const createReportTounched = formik?.touched?.serviceData as FormikTouched<InitialValuesCreateDiversionReport>[];\n    return (\n        <>\n            <UpdatedHeader headerTitle='Create Diversion Report' />\n            {(createLoader || deleteLoader) && <Loader />}\n            <div>\n                <div className='w-full overflow-hidden bg-accents-2 border border-border-primary rounded-xl'>\n                    <div className='px-3 py-5 border-b border-solid md:px-5 border-border-primary '>\n                        <h6>{companyName}</h6>\n                    </div>\n                    <div className='px-3 py-2.5 md:px-5' >\n                        <div className='flex items-end flex-wrap sm:flex-nowrap justify-between w-full space-y-3'>\n                            <div className='w-full xs:w-64 sm:max-w-[360px]'>\n                                <DropDown\n                                    name='user_id'\n                                    id='user_id'\n                                    label={t('Report Owner')}\n                                    value={formik?.values?.user_id}\n                                    onChange={formik.handleChange}\n                                    options={contractorDropDownData} error={formik?.errors?.user_id && formik?.touched?.user_id ? formik?.errors?.user_id : ''} disabled={!locationId} />\n                            </div>\n                            <Button type='button' className='btn-secondary btn-normal whitespace-nowrap w-full xs:w-auto' onClick={onAddNewSeviceTemplate} label={''} disabled={!locationId}>\n                                {t('+ Add Services from Template')}\n                            </Button>\n                        </div>\n                    </div>\n                    <div className='px-3 py-2.5 md:px-5' >\n                        <h6 className='mb-3 md:mb-5'>Service List</h6>\n                        <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                            <table>\n                                <thead >\n                                    <tr>\n                                        {COL_ARR_SERVICE?.map((colValUser: ColArrType,index:number) => {\n                                            const key = index;\n                                            return (\n\n                                                <th scope='col' key={key}>\n                                                    <div className={`flex items-center ${colValUser.name == 'Status' ? 'justify-center' : ''}`}>\n                                                        {colValUser.name}\n\n                                                    </div>\n                                                </th>\n                                            );\n                                        })}\n                                        <th scope='col'>\n                                            <div className='flex items-center'>{t('Action')}</div>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {contractorsDetails?.createDiversionReportTableViewData?.map((data: DiversionReportServicesListRes, index: number) => {\n                                        const keyProp = index;\n                                        return (<tr key={keyProp}>\n                                            <td>\n                                                <div className='w-[7.875rem]'>\n                                                    <DropDown\n                                                        name={`serviceData.[${index}].zone_id`}\n                                                        id='reportOwner'\n                                                        value={formik?.values?.serviceData?.[index]?.zone_id}\n                                                        onChange={formik.handleChange}\n                                                        options={zonesDrpDown} error={createReportErrors?.[index]?.zone_id && createReportTounched?.[index]?.zone_id ? createReportErrors?.[index]?.zone_id : ''} />\n                                                </div>\n                                            </td>\n                                            <td className='text-left'>{data?.diversion_report_template?.service_type}</td>\n                                            <td className='text-left'>{data?.diversion_report_template?.material?.name}</td>\n                                            <td className='text-left'>{data?.diversion_report_template?.material_type?.type}</td>\n                                            <td className='text-left'>{data?.diversion_report_template?.equipment?.name}</td>\n                                            <td className='text-left'>{data?.diversion_report_template?.volume?.volume}</td>\n                                            <td>\n                                                <div className='w-[7.875rem]'>\n                                                    <TextInput\n                                                        name={`serviceData.[${index}].add_units`}\n                                                        value={formik?.values?.serviceData?.[index]?.add_units}\n                                                        onChange={formik.handleChange}\n                                                        onBlur={onBlur}\n                                                        placeholder={t('Unit')}\n                                                        required={true}\n                                                        disabled={data?.diversion_report_template?.service_type === 'Regular on call'||data?.diversion_report_template?.equipment?.name.toLocaleLowerCase()==='compactor'}\n                                                        error={createReportErrors?.[index]?.add_units && createReportTounched?.[index]?.add_units ? createReportErrors?.[index]?.add_units : ''}\n                                                    />\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className='w-[7.875rem]'>\n                                                    <DropDown\n                                                        name={`serviceData.[${index}].frequency_id`}\n                                                        id='reportOwner'\n                                                        value={formik?.values?.serviceData?.[index]?.frequency_id}\n                                                        onChange={formik.handleChange}\n                                                        disabled={data?.diversion_report_template?.service_type==='Regular on call'}\n                                                        options={frequecyDropDownData} error={createReportErrors?.[index]?.frequency_id && createReportTounched?.[index]?.frequency_id ? createReportErrors?.[index]?.frequency_id : ''} />\n                                                </div>\n                                            </td>\n                                            <td className='text-left'>\n                                                <div className='btn-group'>\n                                                <button type=\"button\" className='btn bg-transparent cursor-pointer btn-default' onClick={() => onDelete(data,index)}  ><Trash className='fill-error' /></button>\n                                                </div>\n                                            </td>\n                                        </tr>)\n                                    })}\n                                </tbody>\n                            </table>\n                            {(contractorsDetails?.createDiversionReportTableViewData?.length === 0 ||\n                                contractorsDetails?.createDiversionReportTableViewData?.length === null) && (\n                                    <div className='flex justify-center'>\n                                        <div>{t('No Data')}</div>\n                                    </div>\n                                )}\n                        </div>\n                    </div>\n                </div>\n                <div className='flex flex-col justify-end'>\n                    <div className=\"flex flex-wrap justify-start gap-2 mt-4 md:gap-5\">\n                        <button className=\"btn bg-default btn-secondary btn-normal w-full xs:w-[160px] whitespace-nowrap \" type=\"submit\"\n                            title={`${t('Confirm')}`} onClick={() =>  formik?.handleSubmit()} disabled={createLoader || deleteLoader || !locationId} >Confirm</button>\n                    </div>\n                </div>\n            </div>\n            {contractorsDetails.isOpenDiversionTemplateSelectionPopup && <AddServiceFromTemplate />}\n        </>\n    );\n}\n\nexport default CreateDiversionReport;"],"names":["Breadcrumb","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","location","useLocation","uuid","URLSearchParams","search","get","id","useParams","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","moduleName","pathname","_pathname$split$","modulePath","split","includes","forEach","i","_i$","toUpperCase","slice","_pathname$split$2$","thirdLevelLink","replace","splitPathName","length","substring","join","_data$","removeID","_data$2","urlArray","breadcrumbLinks","useCallback","_jsx","className","children","concat","_jsxs","_Fragment","NavLink","to","ROUTES","app","uuidData","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","React","_ref","headerActionConst","headerTitle","dispatch","useDispatch","show","coursesManagement","OnClickHandler","setShow","onClick","HamburgerMenu","onRenderJsxElement","gql","_templateObject","_taggedTemplateLiteral","CREATE_OR_UPDATE_ZONE","_templateObject2","DELETE_ZONE","_templateObject3","GET_ACTIVE_SITES","_templateObject4","GET_ZONES_BY_ID","_templateObject5","GET_FREQUENCY_WITH_PAGINATION","GET_FREQUENCIES","GET_COMPANY_CONTRACTOR_USERS","GET_ALL_DIVERSION_TEMPLATE","GET_ALL_DIVERSION_CONTRACTORS_SERVICES","AddServiceFromTemplate","_data$getAllDiversion","_data$getAllDiversion2","_data$getAllDiversion3","_data$getAllDiversion4","_data$getAllDiversion5","_data$getAllDiversion6","contractorsDetails","diversionContractors","loading","useQuery","fetchPolicy","skip","locationId","variables","setState","useState","COL_ARR_SERVICE","name","sortable","fieldName","onSubmit","setSelectedTemplateIds","map","_data$diversion_repor3","diversion_report_template","setCreateDiversionReportTableViewData","setIsOpenDiversionTemplateSelectionPopup","tabIndex","Button","label","Cross","colValUser","scope","crypto","randomUUID","getAllDiversionTemplates","_data$material","_data$material_type","_data$equipment","_data$volume","service_type","material","material_type","type","equipment","volume","dataReq","add_units","contractor_company","frequency","frequency_type","user","first_name","last_name","zone","is_full_site","prev","find","_data$diversion_repor","_dataReq$diversion_re","filter","_data$diversion_repor2","_dataReq$diversion_re2","onChecked","undefined","CREATE_DIVERSION_CONTRACTOR_SERVICE","DELETE_DIVERSION_CONTRACTOR_SERVICE","CreateDiversionReport","_formik$errors","_formik$touched","_formik$values5","_formik$errors2","_formik$touched2","_formik$errors3","_contractorsDetails$c3","_contractorsDetails$c4","_contractorsDetails$c5","zonesDrpDown","setZonesDrpDown","params","useSearchParams","companyId","companyName","getAllDiversionContractorServices","limit","page","createDiversionServiceMutation","createLoader","useMutation","deleteDiversionServiceMuatation","deleteLoader","frequencies","zones","contractorDropDownData","setContractorDropDownData","key","frequecyDropDownData","setFrequecyDropDownData","createDiversionReportValidationSchema","useValidation","formik","useFormik","initialValues","user_id","serviceData","validationSchema","async","_contractorsDetails$c","reqData","createDiversionReportTableViewData","index","_values$serviceData","_values$serviceData$i","_values$serviceData2","_values$serviceData2$","_values$serviceData3","_values$serviceData3$","_values$serviceData4","_values$serviceData4$","_data$uuid","deleteServiceIds","values","company_id","frequency_id","location_id","template_id","zone_id","service_id","_response$data","_response$data$delete","response","serviceId","setResetDeleteIds","deleteDiversionContractorService","message","_response$data2","_response$data2$creat","toast","success","createDiversionContractorService","err","error","networkError","result","errors","useEffect","setResetCreateDiversionReportTableViewData","setLocationId","siteId","then","res","_res$data","_res$data$getZoneBySi","_res$data$getZoneBySi2","getZoneBySiteId","catch","_err$networkError","_err$networkError$res","_err$networkError$res2","_frequencies$getFrequ","_frequencies$getFrequ2","_getAllDiversionContr","_getAllDiversionContr2","_getAllDiversionContr3","_getAllDiversionContr4","_getAllDiversionContr5","_getAllDiversionContr6","_getAllDiversionContr7","_getAllDiversionContr8","getFrequencies","contractorServices","_getAllDiversionContr9","_getAllDiversionContr10","_getAllDiversionContr11","_data$user","_data$zone","_frequency_id$","_data$frequency","setFieldValue","setResetSelectionIds","getCompanyContractorUsers","_data$getCompanyContr","_data$getCompanyContr2","dropdownValues","_frequencies$getFrequ3","_frequencies$getFrequ4","setFrequecyId","onAddNewSeviceTemplate","onDelete","_data$diversion_repor4","_formik$values","_formik$values$servic","setDeleteDiversionReportTableViewData","templateId","_","dataIndex","onBlur","e","target","whiteSpaceRemover","_frequencies$getFrequ5","_frequencies$getFrequ6","_contractorsDetails$c2","_formik$values2","_formik$values2$servi","_formik$values2$servi2","_formik$values$servic2","_formik$values3","_formik$values3$servi","_formik$values3$servi2","_data$diversion_repor5","_frequency_id$2","_formik$values4","_formik$values4$servi","_formik$values4$servi2","createReportErrors","createReportTounched","touched","UpdatedHeader","Loader","DropDown","value","onChange","handleChange","options","disabled","_formik$values6","_formik$values6$servi","_formik$values6$servi2","_createReportErrors$i","_createReportTounched","_createReportErrors$i2","_data$diversion_repor6","_data$diversion_repor7","_data$diversion_repor8","_data$diversion_repor9","_data$diversion_repor10","_data$diversion_repor11","_data$diversion_repor12","_data$diversion_repor13","_data$diversion_repor14","_formik$values7","_formik$values7$servi","_formik$values7$servi2","_data$diversion_repor15","_data$diversion_repor16","_data$diversion_repor17","_createReportErrors$i3","_createReportTounched2","_createReportErrors$i4","_formik$values8","_formik$values8$servi","_formik$values8$servi2","_data$diversion_repor18","_createReportErrors$i5","_createReportTounched3","_createReportErrors$i6","keyProp","TextInput","placeholder","required","toLocaleLowerCase","Trash","title","handleSubmit","isOpenDiversionTemplateSelectionPopup"],"sourceRoot":""}