{"version":3,"file":"static/js/4212.552b8091.chunk.js","mappings":"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","sources":["framework/graphql/queries/diversionSetting.ts","framework/graphql/queries/weights.ts","views/diversionReport/weightList.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const UPDATE_DIVERSION_REPORT_SETTINGS = gql`mutation UpdateDiversionReportSettings($diversionSettingsData: UpdateDiversionReportSettingsDto!) {\n    updateDiversionReportSettings(diversionSettingsData: $diversionSettingsData) {\n      message\n      data {\n        frequency\n        start_date\n        end_date\n        start_month\n        end_month\n      }\n    }\n  }`;\n\n  export const GET_DIVERSION_REPORT_SETTING_BY_ID = gql`mutation GetDiversionReportSettingById($locationId: String!) {\n    getDiversionReportSettingById(locationId: $locationId) {\n      message\n      data {\n        frequency\n        start_date\n        end_date\n        start_month\n        end_month\n      }\n    }\n  }`;","import { gql } from '@apollo/client';\n\nexport const GET_ALL_DIVERSION_REPORTS_CONTRACTORS = gql`query GetAllDiversionReports($companyId: String!, $limit: Float!, $page: Float!) {\n  getAllDiversionReports(companyId: $companyId, limit: $limit, page: $page) {\n    message\n    data {\n      diversionReports {\n        add_units\n        is_material_updated\n        is_material_type_updated\n        is_equipment_updated\n        is_volume_updated\n        is_service_type_updated\n        approx_weight_per_month\n        approx_weight_per_unit\n        lifts\n        contractor_company {\n          uuid\n          name\n        }\n        document\n        end_date\n        equipment {\n          name\n          uuid\n        }\n        frequency {\n          uuid\n          frequency_type\n          frequency\n        }\n        frequency_time\n        invoice\n        is_draft\n        is_full_site\n        is_submitted\n        location {\n          uuid\n          location\n        }\n        material {\n          uuid\n          name\n        }\n        material_type {\n          type\n          uuid\n          weight\n        }\n        service_type\n        start_date\n        subscriber {\n          uuid\n        }\n        user {\n          first_name\n          last_name\n          uuid\n        }\n        volume {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n        zone {\n          location\n          uuid\n        }\n        uuid\n        lift {\n          uuid\n          name\n          date\n          weight\n        }\n      }\n      count\n    }\n  }\n}`","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { Cross, FileUpload, PlusCircle, Trash } from '@components/icons/icons';\nimport { useTranslation } from 'react-i18next';\nimport { API_MEDIA_END_POINT, AXIOS_HEADERS, DELETE_WARNING_TEXT, MAX_FILE_SIZE, PAGE_LIMIT, PAGE_NUMBER, serviceTypeDrpDataWeights } from '@config/constant';\nimport TextInput from '@components/textInput/TextInput';\nimport { FormikErrors, FormikTouched, useFormik } from 'formik';\nimport Button from '@components/button/button';\nimport DropDown from '@components/dropdown/dropDown';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ALL_DIVERSION_REPORTS_CONTRACTORS } from '@framework/graphql/queries/weights';\nimport { UserProfileType } from 'src/types/common';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DiversionReportContractorRes } from 'src/types/weights';\nimport { GET_MATERIALS, GET_MATERIAL_BY_ID } from '@framework/graphql/queries/materialManagement';\nimport { GET_EQUIPMENTS } from '@framework/graphql/queries/equipmentManagement';\nimport { GET_FREQUENCIES } from '@framework/graphql/queries/frequencyManagement';\nimport { GET_ZONES_BY_ID } from '@framework/graphql/mutations/zoneManagement';\nimport { toast } from 'react-toastify';\nimport { MaterialDataRes } from '@views/materialManagament';\nimport { DropdownOptionType } from '@types';\nimport { AddWeightType, setCompactorUuid, setFrequencyData, setFrequencyTime, setLiftIndex, setMaterailData, setVolumeDataForWeights } from 'src/redux/addWeights-slice';\nimport { FrequencyDataRes } from '@views/frequencyManagement';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport { CREATE_OR_UPDATE_WEIGHTS } from '@framework/graphql/mutations/weights';\nimport useValidation from '@framework/hooks/validations';\nimport axios from 'axios';\nimport { GET_DIVERSION_REPORT_SETTING_BY_ID } from '@framework/graphql/queries/diversionSetting';\nimport { conditionReturnFun, whiteSpaceRemover } from '@utils/helpers';\nimport CommonModel from '@components/common/commonModel';\nimport { v4 as uuidv4 } from 'uuid';\nimport { VolumesDataRes } from '@views/volumeManagement';\nimport { GET_EQUIPMENT_BY_NAME } from '@framework/graphql/mutations/equipmentManagement';\nimport { WeightListFormikType } from 'src/types/diversionReport';\n\nexport type ColArrType = {\n    name: string\n    sortable: boolean\n    fieldName: string\n}\n\nconst WeightList = () => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const weightDetails = useSelector(((state: { addWeightsManagement: AddWeightType }) => state.addWeightsManagement));\n    const { userProfileData: userData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n    const { data, refetch } = useQuery(GET_ALL_DIVERSION_REPORTS_CONTRACTORS, {\n        fetchPolicy: 'network-only', skip: !userData?.getProfile?.data?.company_id?.uuid, variables: {\n            companyId: userData?.getProfile?.data?.company_id?.uuid,\n            limit: 10,\n            page: 1\n\n        }\n    });\n    const [zones] = useMutation(GET_ZONES_BY_ID);\n    const [getDiversionReportSettingById] = useMutation(GET_DIVERSION_REPORT_SETTING_BY_ID);\n    const { createOrUpdateWeightsValidationSchema, weightsTableValidationschema } = useValidation();\n    const [createorUpdateWeights, { loading: createLoader }] = useMutation(CREATE_OR_UPDATE_WEIGHTS);\n    const { refetch: getMaterialTypes } = useQuery(GET_MATERIAL_BY_ID, { fetchPolicy: 'network-only', skip: true });\n    const { refetch: getAllMaterials } = useQuery(GET_MATERIALS, { fetchPolicy: 'network-only', skip: true });\n    const { refetch: getAllEquipments } = useQuery(GET_EQUIPMENTS, { fetchPolicy: 'network-only', skip: true });\n    const { refetch: getAllFrequencies } = useQuery(GET_FREQUENCIES, { fetchPolicy: 'network-only', skip: true });\n    const [getEquipmentbyName] = useMutation(GET_EQUIPMENT_BY_NAME);\n    const [isDelete, setIsDelete] = useState<boolean>(false);\n    const [isDeleteDoc, setIsDeleteDoc] = useState<boolean>(false);\n    const [isShowlifts, setIsShowlifts] = useState<boolean>(false);\n    const [volumeDrpData, setVolumeDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Volume Type', key: '' }]);\n    const [filterData] = useState({\n        limit: PAGE_LIMIT,\n        page: PAGE_NUMBER,\n        sortOrder: 'descend',\n        search: '',\n        sortField: 'createdAt',\n        index: 0\n    });\n\n    const COL_ARR_SERVICE3 = [\n        { name: t('Sr.No'), sortable: false },\n        { name: t('Zone'), sortable: false },\n        { name: t('Service Type'), sortable: false },\n        { name: t('Material Category'), sortable: false, fieldName: 'Material Category' },\n        { name: t('Material Type'), sortable: false, fieldName: 'Material Type' },\n        { name: t('Equipment'), sortable: false, fieldName: 'Equipment' },\n        { name: t('Volume'), sortable: false, fieldName: 'Volume' },\n        { name: t('Frequency'), sortable: false, fieldName: 'Frequency' },\n        { name: t('Unit'), sortable: false, fieldName: 'Unit' },\n        { name: t('Lifts'), sortable: false, fieldName: 'Lifts' },\n        { name: t('Approx Weight Per Unit'), sortable: false, fieldName: 'Approx Weight Per Unit' },\n        { name: t('Weight Per Month'), sortable: false, fieldName: 'Weight Per Month' },\n\n    ] as ColArrType[];\n\n    const COL_ARR_SERVICE4 = [\n        { name: t('Lifts'), sortable: false, fieldName: 'Lifts' },\n        { name: t('Insert Date'), sortable: false, fieldName: 'Insert Date' },\n        { name: t('Input Weight'), sortable: false, fieldName: 'Input Weight' },\n\n    ] as ColArrType[];\n\n    useEffect(() => {\n        if (userData?.getProfile?.data?.company_id?.uuid) {\n            getDiversionReportSettingById({\n                variables: {\n                    locationId: userData?.getProfile?.data?.branch_locations?.[0]?.uuid\n                }\n            }).then((res) => {\n                dispatch(setFrequencyTime(res?.data?.getDiversionReportSettingById?.data?.frequency));\n            }).catch(err => toast.error(err?.networkError?.result?.errors[0]?.message))\n        }\n    }, [userData?.getProfile?.data?.company_id?.uuid])\n\n    useEffect(() => {\n        if (data?.getAllDiversionReports) {\n            data?.getAllDiversionReports?.data?.diversionReports?.map((data: DiversionReportContractorRes, index: number) => {\n                formik.setFieldValue(`reportData.[${index}].equipment`, data?.equipment?.name);\n                formik.setFieldValue(`reportData.[${index}].service_type`, data?.service_type);\n                formik.setFieldValue(`reportData[${index}].approx_weight_per_month`, data?.approx_weight_per_month)\n                formik.setFieldValue('docFileName', data?.document);\n                formik.setFieldValue('fileName', data?.invoice);\n                formik.setFieldValue('attachments', data?.invoice);\n                formik.setFieldValue('documents', data?.document);\n                if (data?.lift.length) {\n                    formik.setFieldValue(`compactor_lifts[${index}]`, data?.lift.map((data) => {\n                        return { name: data?.name, uuid: data?.uuid, weight: data?.weight, date: new Date(data?.date) }\n                    }));\n                    formik.setFieldValue(`reportData[${index}].lifts`, data?.lift.length);\n\n                } else {\n                    formik.setFieldValue(`reportData[${index}].lifts`, data?.lifts);\n                    formik.setFieldValue(`compactor_lifts[${index}]`, data?.lift);\n                }\n\n            })\n        }\n    }, [data?.getAllDiversionReports, userData?.getProfile])\n\n\n    const initialValues: { reportData: { lifts: number, approx_weight_per_month: number, service_type: string }[], compactor_lifts: Array<{ name: string, uuid: string, weight: number, date: Date | null | undefined }[]>, attachments: string; fileName: string; docFileName: string; documents: string; delete_lifts: string[][], popupData: { name: string, uuid: string, weight: number, date: Date | null }[], isSubmitted: boolean, validationArray: [] } = {\n        reportData: [],\n        compactor_lifts: [],\n        attachments: '',\n        fileName: '',\n        documents: '',\n        docFileName: '',\n        delete_lifts: [],\n        popupData: [],\n        isSubmitted: false,\n        validationArray: [],\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema: weightsTableValidationschema,\n        onSubmit: (values) => {\n            const reportData = data?.getAllDiversionReports?.data?.diversionReports.map((data: DiversionReportContractorRes, index: number) => {\n                const approxWeightPerUnit = (data?.material_type?.weight * data?.volume?.volume_cubic_yard).toFixed(2);\n                return {\n                    zone_id: conditionReturnFun(data?.zone?.uuid),\n                    service_type: data?.service_type,\n                    material_id: data?.material?.uuid,\n                    material_type_id: data?.material_type?.uuid,\n                    equipment_id: data?.equipment?.uuid,\n                    frequency_id: data?.frequency?.uuid,\n                    volume_id: data?.volume?.uuid,\n                    add_units: (+data?.add_units),\n                    lifts: Number(values?.reportData?.[index]?.lifts) ?? +data?.lifts,\n                    approx_weight_per_unit: +approxWeightPerUnit,\n                    approx_weight_per_month: Number(values?.reportData?.[index]?.approx_weight_per_month) ?? +data?.approx_weight_per_month,\n                    user_id: userData?.getProfile?.data?.uuid,\n                    report_id: conditionReturnFun(data?.uuid),\n                    compactor_lifts: values.compactor_lifts?.[index] ?? [],\n                    company_id: userData?.getProfile?.data?.company_id?.uuid,\n                    delete_lifts: values.delete_lifts?.[index] ?? [],\n                    document: conditionReturnFun(values.documents),\n                    invoice: conditionReturnFun(values.attachments),\n                    location_id: userData?.getProfile?.data?.branch_locations[0]?.uuid,\n                    start_date: moment(data?.start_date).startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n                    end_date: moment(data?.end_date).endOf('day').format('YYYY-MM-DD HH:mm:ss'),\n                    frequency_time: data?.frequency_time ?? weightDetails?.frequencyTime,\n                    diversion_history_id: '',\n                }\n            })\n            if (reportData) {\n                createorUpdateWeights({\n                    variables: {\n                        reportData: reportData,\n                        isSubmitted: values?.isSubmitted\n                    }\n                }).then((res) => {\n                    toast.success(res?.data?.createDiversionReport?.message);\n                    formik.resetForm();\n                    formikAddWeights.resetForm();\n                    refetch().then((res) => {\n                        res?.data?.getAllDiversionReports?.data?.diversionReports?.map((data: DiversionReportContractorRes, index: number) => {\n                            formik.setFieldValue(`reportData.[${index}].equipment`, data?.equipment?.name);\n                            formik.setFieldValue(`reportData.[${index}].service_type`, data?.service_type);\n                            formik.setFieldValue(`reportData[${index}].approx_weight_per_month`, +data?.approx_weight_per_month.toFixed(2))\n                            formik.setFieldValue('documents', data?.document);\n                            formik.setFieldValue('fileName', data?.invoice);\n                            formik.setFieldValue('docFileName', data?.document);\n                            formik.setFieldValue('attachments', data?.invoice);\n\n\n                            if (data?.lift.length) {\n                                formik.setFieldValue(`reportData[${index}].lifts`, data?.lift.length);\n                                formik.setFieldValue(`compactor_lifts[${index}]`, data?.lift.map((data) => {\n                                    return { name: data?.name, uuid: data?.uuid, weight: data?.weight, date: new Date(data?.date) }\n                                }));\n\n                            } else {\n                                formik.setFieldValue(`reportData[${index}].lifts`, +data?.lifts.toFixed(2));\n                                formik.setFieldValue(`compactor_lifts[${index}]`, data?.lift);\n                            }\n\n                        })\n                    }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n\n                }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n            }\n\n\n        }\n\n    });\n\n\n    const onAddLifts = useCallback((data?: DiversionReportContractorRes, index?: number) => {\n        if (data && index !== undefined) {\n            formik.setFieldValue('popupData', formik?.values?.compactor_lifts?.[index]);\n            dispatch(setLiftIndex(index))\n        }\n        setIsShowlifts(true);\n    }, [formik.values]);\n\n    const [isAddMaterial, setIsAddMaterial] = useState<boolean>(false);\n    const [materialDrpData, setMaterialDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Material Catergory', key: '' }]);\n    const [frequencyDrpData, setFrequencyDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Frequency', key: '' }]);\n    const [materialTypeDrpData, setMaterialTypeDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Material Type' }]);\n    const [equipmentDrpData, setEquipmentDrpData] = useState<DropdownOptionType[]>([{ name: 'Select Equipment', key: '' }]);\n    const [zoneDrpDown, setZoneDrpDown] = useState<DropdownOptionType[]>([{ name: 'Select Zone', key: '' }]);\n\n    const onAddOtherMaterial = useCallback(() => {\n\n        zones({ variables: { siteId: userData?.getProfile?.data?.branch_locations?.[0]?.uuid } }).then((res) => {\n            const data = res?.data?.getZoneBySiteId?.data?.map((data: { uuid: string; location: string }) => {\n                return { name: data?.location, key: data?.uuid }\n            });\n            if (data) {\n                setZoneDrpDown([{ name: 'Select Zone', key: '' }, { name: 'Full Site', key: 'full_site' }, ...data])\n            }\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n        getAllMaterials().then((res) => {\n            const data = res?.data?.getMaterials?.data?.map((data: MaterialDataRes) => {\n                return { name: data?.name, key: data?.uuid, uuid: data?.uuid };\n            })\n            if (data) {\n                setMaterialDrpData([{ name: 'Select Material Catergory', key: '' }, ...data])\n            }\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n        getAllEquipments().then((res) => {\n            const volumeCubicData: { [key: string]: { volume: string; uuid: string; cubic: number, equipment: string } } = {};\n            const volumeData = res?.data?.getEquipments?.data?.map((data: {\n                uuid: string;\n                name: string;\n                volume: VolumesDataRes;\n            }) => {\n                volumeCubicData[`${data?.uuid}`] = { volume: data?.volume?.volume, uuid: data?.volume?.uuid, cubic: data?.volume?.volume_cubic_yard, equipment: data?.name };\n                return { name: data?.volume, key: data?.uuid, uuid: data?.uuid }\n            });\n            const equipData = res?.data?.getEquipments?.data?.map((data: {\n                uuid: string;\n                name: string;\n                volume: VolumesDataRes;\n            }) => {\n                if (data?.name.toLocaleLowerCase() === 'compactor') {\n                    dispatch(setCompactorUuid(data?.uuid))\n                }\n                return { name: data?.name, key: data?.name };\n            })\n            if (volumeData) {\n                dispatch(setVolumeDataForWeights(volumeCubicData));\n\n            }\n            if (equipData) {\n                setEquipmentDrpData([{ name: 'Select Equipment', key: '' }, ...equipData])\n            }\n\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n\n        getAllFrequencies().then((res) => {\n            const data = res?.data?.getFrequencies?.data?.map((data: FrequencyDataRes) => {\n                return { name: data?.frequency_type, key: data?.uuid, code: data?.uuid };\n            });\n            if (data) {\n                setFrequencyDrpData([{ name: 'Select Frequency', key: '' }, ...data]);\n            }\n            const frequencyData: { [key: string]: number } = {};\n            const reqdata = res?.data?.getFrequencies?.data?.map((data: FrequencyDataRes) => {\n                frequencyData[data?.uuid] = data?.frequency;\n                return data;\n            })\n            if (reqdata) {\n                dispatch(setFrequencyData(frequencyData));\n            }\n\n        }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n\n        setIsAddMaterial(true);\n    }, [userData?.getProfile?.data])\n\n    const AddWeightsInitialValues :WeightListFormikType = {\n        zone_id: '',\n        service_type: '',\n        material_id: '',\n        material_type_id: '',\n        equipment_id: '',\n        volume_id: '',\n        equipment: '',\n        frequency_id: '',\n        add_units: 0,\n        lifts: 0,\n        volume: '',\n        approx_weight_per_unit: 0,\n        approx_weight_per_month: 0,\n        volume_name: ''\n    }\n    const formikAddWeights = useFormik({\n        initialValues: AddWeightsInitialValues,\n        validationSchema: createOrUpdateWeightsValidationSchema,\n        onSubmit: (values) => {\n            if (userData?.getProfile?.data?.uuid && userData?.getProfile?.data?.company_id?.uuid && userData?.getProfile?.data?.branch_locations.length) {\n                createorUpdateWeights({\n                    variables: {\n                        isSubmitted: false,\n                        reportData: [{\n                            zone_id: (values?.zone_id === 'full_site') ? '' : values?.zone_id,\n                            service_type: values?.service_type,\n                            material_id: values?.material_id,\n                            material_type_id: values?.material_type_id,\n                            equipment_id: values?.equipment_id,\n                            volume_id: values?.volume_id,\n                            frequency_id: values?.frequency_id,\n                            add_units: +values?.add_units,\n                            lifts: +values?.lifts,\n                            approx_weight_per_unit: +values?.approx_weight_per_unit,\n                            approx_weight_per_month: +values?.approx_weight_per_month,\n                            report_id: '',\n                            user_id: userData?.getProfile?.data?.uuid,\n                            compactor_lifts: [],\n                            delete_lifts: [],\n                            company_id: userData?.getProfile?.data?.company_id?.uuid,\n                            document: '',\n                            invoice: '',\n                            location_id: userData?.getProfile?.data?.branch_locations[0]?.uuid,\n                            start_date: moment(data?.getAllDiversionReports?.data?.diversionReports?.[0]?.start_date).format('YYYY-MM-DD HH:mm:ss'),\n                            end_date: moment(data?.getAllDiversionReports?.data?.diversionReports?.[0]?.end_date).format('YYYY-MM-DD HH:mm:ss'),\n                            frequency_time: data?.getAllDiversionReports?.data?.diversionReports?.[0]?.frequency_time ?? weightDetails?.frequencyTime,\n                            diversion_history_id: ''\n                        }],\n                        // moment('2024-03-13 11:47:37').format('YYYY-MM-DD HH:mm:ss'),\n\n                    }\n                }).then((res) => {\n                    toast.success(res?.data?.createDiversionReport?.message);\n                    setIsAddMaterial(false);\n                    refetch().catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message));\n                    formikAddWeights.resetForm();\n                }).catch((err) => toast.error(err?.networkError?.result?.errors[0]?.message))\n            }\n        }\n    });\n\n\n    useEffect(() => {\n        if (formikAddWeights?.values?.material_id) {\n            getMaterialTypes({\n                materialId: formikAddWeights?.values?.material_id\n            }).then((res) => {\n                formikAddWeights.setFieldValue('approx_weight_per_unit', '');\n                formikAddWeights.setFieldValue('material_type_id', '');\n                const data = res?.data?.getMaterialById?.data?.material_types?.map((data: {\n                    uuid: string;\n                    type: string;\n                    weight: number;\n                }) => { return { name: data?.type, key: data?.uuid, uuid: data?.uuid }; });\n                const materialData: { [key: string]: number } = {}\n                if (data) {\n                    setMaterialTypeDrpData([{ name: 'Select Material Type', key: '' }, ...data])\n                }\n                const reqdata = res?.data?.getMaterialById?.data?.material_types.map((data: {\n                    uuid: string;\n                    type: string;\n                    weight: number;\n                }) => {\n                    materialData[data?.uuid] = data?.weight;\n                    return data;\n                })\n                if (reqdata) {\n                    dispatch(setMaterailData(materialData));\n                }\n            }).catch((err) => {\n                toast.error(err?.networkError?.result?.errors[0]?.message)\n            })\n        }\n    }, [formikAddWeights?.values?.material_id])\n\n    useEffect(() => {\n        if (formikAddWeights?.values?.frequency_id && formikAddWeights?.values?.add_units) {\n            formikAddWeights.setFieldValue('lifts', ((weightDetails.frequencyData[formikAddWeights?.values?.frequency_id]) * formikAddWeights?.values?.add_units).toFixed(2))\n        }\n    }, [formikAddWeights?.values?.frequency_id, formikAddWeights?.values?.add_units])\n\n\n    useEffect(() => {\n        if (formikAddWeights?.values?.material_type_id && formikAddWeights?.values?.volume_name) {\n            formikAddWeights.setFieldValue('approx_weight_per_unit', ((weightDetails.materialData[formikAddWeights?.values?.material_type_id]) * +formikAddWeights?.values?.volume_name?.split('_')?.[2]).toFixed(2))\n        }\n    }, [formikAddWeights?.values?.material_type_id, formikAddWeights?.values?.volume_name])\n\n    useEffect(() => {\n        if (formikAddWeights?.values?.approx_weight_per_unit && formikAddWeights?.values?.lifts) {\n            formikAddWeights.setFieldValue('approx_weight_per_month', (formikAddWeights?.values?.approx_weight_per_unit * formikAddWeights?.values?.lifts).toFixed(2))\n        }\n    }, [formikAddWeights?.values?.approx_weight_per_unit, formikAddWeights?.values?.lifts])\n\n    const onDelete = useCallback((index: number) => {\n        if (weightDetails?.liftIndex !== undefined) {\n            const delete_lifts = formik.values.delete_lifts?.[weightDetails?.liftIndex] ?? [];\n            const deleteId: string[] = [];\n            const data = formik?.values?.popupData.filter((data, ind) => {\n                if (ind === index && data?.uuid) {\n                    deleteId.push(data?.uuid)\n                }\n                if (ind !== index) {\n                    return data;\n                }\n            });\n            if (data) {\n                formik.setFieldValue(`delete_lifts.[${weightDetails?.liftIndex}]`, [...delete_lifts, ...deleteId]);\n                formik.setFieldValue('popupData', data)\n                formik.setFieldValue(`compactor_lifts.[${weightDetails?.liftIndex}]`, data.length)\n            }\n        }\n    }, [formik?.values?.delete_lifts, formik?.values?.popupData, weightDetails?.liftIndex])\n\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const docInputRef = useRef<HTMLInputElement | null>(null);\n    const handleTextInputClick = () => {\n        fileInputRef?.current?.click();\n    };\n    const handleInputClick = () => {\n        docInputRef?.current?.click();\n    }\n\n    /** method to upload pdf file */\n    const handleFileEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const files = event.currentTarget.files;\n        if (files) {\n            const maxFileSize = MAX_FILE_SIZE;\n            const allowedExtensions = ['pdf'];\n            const selectedFiles = Array.from(files);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const validFiles = selectedFiles.filter((file: any) => {\n                const fileSize = file.size;\n                const extension = file.name.split('.').pop()?.toLowerCase();\n                if (!allowedExtensions.includes(extension)) {\n                    toast.error(`Invalid file type: ${file.name}`);\n                    return false;\n                }\n                if (fileSize > maxFileSize) {\n                    toast.error('Please make sure your file is must be less than 5MB.');\n                    return false;\n                }\n                return true;\n            });\n            if (validFiles.length > 0) {\n                const formData = new FormData();\n                formik.setFieldValue('fileName', validFiles?.[0]?.name);\n\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                formData.append('file', validFiles[0] as any);\n\n                // Attempt to upload the attachment\n                axios.post(`${API_MEDIA_END_POINT}/attachment`, formData, { headers: AXIOS_HEADERS })\n                    .then((response) => {\n                        formik.setFieldValue('attachments', response?.data?.data?.key);\n                    })\n                    .catch((err) => {\n                        toast.error(err?.message);\n                    });\n\n            } else {\n                formik.setFieldError('attachments', 'Invalid file type Please enter valid attachment');\n            }\n        }\n    };\n    /** method to upload doc file */\n    const handleDocFileEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const files = event.currentTarget.files;\n        if (files) {\n            const maxFileSize = MAX_FILE_SIZE;\n            const allowedExtensions = ['doc', 'docx', 'application/msword'];\n            const selectedFiles = Array.from(files);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const validFiles = selectedFiles.filter((file: any) => {\n                const extension = file.name.split('.').pop()?.toLowerCase();\n                const fileSize = file.size;\n                if (!allowedExtensions.includes(extension)) {\n                    toast.error(`Invalid file type: ${file.name}`);\n                    return false;\n                }\n                if (fileSize > maxFileSize) {\n                    toast.error('Please make sure your file is must be less than 5MB.');\n                    return false;\n                }\n                return true;\n            });\n            if (validFiles.length > 0) {\n                const formData = new FormData();\n                formik.setFieldValue('docFileName', validFiles?.[0]?.name);\n\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                formData.append('file', validFiles[0] as any);\n\n                axios.post(`${API_MEDIA_END_POINT}/attachment`, formData, { headers: AXIOS_HEADERS })\n                    .then((response) => {\n                        formik.setFieldValue('documents', response?.data?.data?.key);\n                    })\n                    .catch((err) => toast.error(err?.message));\n\n            } else {\n                formik.setFieldError('documents', 'Invalid file type Please enter valid attachment');\n            }\n        }\n    };\n\n    const onSaveDraft = useCallback(() => {\n        formik.setFieldValue('isSubmitted', false);\n        formik.handleSubmit();\n    }, [data?.getAllDiversionReports, formik?.values, formikAddWeights?.values, weightDetails?.frequencyTime, formik.errors.compactor_lifts])\n\n    const onConfirm = useCallback(() => {\n        formik.setFieldValue('isSubmitted', true);\n        formik.handleSubmit();\n    }, [data?.getAllDiversionReports, formik?.values, formikAddWeights?.values, weightDetails?.frequencyTime])\n\n    const addNewLift = useCallback(() => {\n        const updatedPopupData = [...formik.values.popupData];\n        const newPopupData = {\n            name: `Lift-${formik?.values?.popupData?.length + 1}`,\n            uuid: '',\n            date: new Date(),\n            weight: 0,\n        };\n        updatedPopupData.push(newPopupData);\n        formik.setFieldValue('popupData', updatedPopupData);\n    }, [formik?.values?.popupData])\n\n    const liftsErrors = formik?.errors?.popupData as FormikErrors<{\n        name: string;\n        uuid: string;\n        weight: number;\n        date: Date | null;\n    }>[];\n    const liftsTouched = formik?.touched?.popupData as FormikTouched<{\n        name: string;\n        uuid: string;\n        weight: number;\n        date: Date | null;\n    }>[];\n    const tableErrors = formik?.errors?.reportData as FormikErrors<{\n        lifts: number;\n        approx_weight_per_month: number;\n    }>[];\n    const tableTouched = formik?.touched?.reportData as FormikTouched<{\n        lifts: number;\n        approx_weight_per_month: number;\n    }>[];\n    const onAddTotalLifts = useCallback(() => {\n        const updatedCompactorLifts: {\n            name: string;\n            uuid: string;\n            weight: number;\n            date: Date | null;\n        }[] = [];\n        const totalWeight = formik.values.popupData.reduce((acc, data) => {\n            const weight = +data.weight;\n            updatedCompactorLifts.push({ ...data, weight, date: data.date });\n            return acc + weight;\n        }, 0);\n        if (totalWeight !== undefined) {\n            formik.setFieldValue(`compactor_lifts.[${weightDetails?.liftIndex}]`, updatedCompactorLifts);\n            formik.setFieldValue(`reportData.[${weightDetails?.liftIndex}].lifts`, formik.values.popupData.length);\n            formik.setFieldValue(`reportData.[${weightDetails?.liftIndex}].approx_weight_per_month`, totalWeight);\n        }\n        setIsShowlifts(false);\n    }, [formik.values.popupData])\n\n    const OnBlurWeights = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n        formik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n    }, []);\n\n\n    const onDeleteUploads = useCallback(() => {\n        setIsDelete(true);\n    }, []);\n    const onDeleteUploadsDoc = useCallback(() => {\n        setIsDeleteDoc(true);\n    }, []);\n\n    const onEquipmentChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (e?.target?.value) {\n            getEquipmentbyName({ variables: { equipmentName: e?.target?.value } }).then((res) => {\n                const volumeData = res?.data?.getEquipmentByName?.data?.map((data: {\n                    name: string;\n                    uuid: string;\n                    volume: VolumesDataRes;\n                }) => {\n                    return { name: data?.volume?.volume, key: `${data?.volume?.uuid}_${data?.uuid}_${data?.volume?.volume_cubic_yard}` }\n                });\n                if (volumeData) {\n                    setVolumeDrpData([{ name: 'Select Volume Type', key: '' }, ...volumeData]);\n                }\n            })\n                .catch((err) => { toast.error(err.networkError.result.errors[0].message) });\n            formikAddWeights.setFieldValue('equipment', e?.target?.value);\n        }\n\n    };\n\n    const onVolumeChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (e?.target?.value) {\n            formikAddWeights.setFieldValue('volume_name', e?.target?.value);\n            const value = e?.target?.value.split('_');\n            formikAddWeights.setFieldValue('equipment_id', value[1]);\n            formikAddWeights.setFieldValue('volume_id', value[0]);\n            if (formikAddWeights?.values?.material_type_id) {\n                formikAddWeights.setFieldValue('approx_weight_per_unit', ((weightDetails.materialData[formikAddWeights?.values?.material_type_id]) * +value[2]).toFixed(2))\n            }\n        }\n    }, [formikAddWeights?.values]);\n\n    const onRemove = useCallback(() => {\n        const data = { fileName: formik.values.fileName };\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                setIsDelete(false)\n                formik.setFieldValue('attachments', '');\n                formik.setFieldValue('fileName', '');\n            })\n            .catch((error) => {\n                setIsDelete(false)\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik.values.fileName])\n\n    const onRemovedoc = useCallback(() => {\n        const data = { fileName: formik.values.docFileName };\n        axios.delete(`${API_MEDIA_END_POINT}/remove`, { data })\n            .then(() => {\n                setIsDeleteDoc(false)\n                formik.setFieldValue('documents', '');\n                formik.setFieldValue('docFileName', '');\n            })\n            .catch((error) => {\n                setIsDeleteDoc(false)\n                toast.error(error?.response?.data?.message)\n            });\n    }, [formik.values.docFileName])\n\n    const onClose = useCallback(() => {\n        setIsDelete(false)\n        setIsDeleteDoc(false)\n\n    }, []);\n\n    const getErrorWeights=(fieldName: keyof( WeightListFormikType))=>{\n        return formikAddWeights?.errors?.[fieldName]&&formikAddWeights?.touched?.[fieldName]? formikAddWeights?.errors?.[fieldName]:'';\n    }\n\n    const returnTrueValueWeights=(condi:boolean,succ:string|boolean,err:string|boolean)=>{\n        return condi ? succ : err;\n    }\n    return (\n        <>\n            <UpdatedHeader headerTitle='Add Weights' />\n            {data?.getAllDiversionReports?.data?.diversionReports?.length ? <div>\n                <div className='bg-accents-2 border border-border-primary rounded-xl p-3 md:p-5 mb-5 md:mb-7 flex justify-between items-center gap-3 flex-wrap'>\n                    <div className=\"flex items-center gap-x-20 xmd:gap-x-48 flex-wrap gap-y-3\">\n                        <p className='whitespace-nowrap'>\n                            <span>Start Date: </span>\n                            <span className='font-bold'>{moment(data?.getAllDiversionReports?.data?.diversionReports?.[0]?.start_date).format('DD/MM/YYYY') ?? ''}</span>\n                        </p>\n                        <p className='whitespace-nowrap'>\n                            <span>Due Date: </span>\n                            <span className='font-bold'>{moment(data?.getAllDiversionReports?.data?.diversionReports?.[0]?.end_date).format('DD/MM/YYYY') ?? ''}</span>\n                        </p>\n                    </div>\n                    {!data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted && <Button\n                        className='btn-normal btn btn-secondary whitespace-nowrap w-full sm:w-auto'\n                        type='button'\n                        label={t('+ Add Other Material')}\n                        title={`${t('Add Other Material')}`}\n                        onClick={onAddOtherMaterial}\n                    />}\n                </div>\n                <form onSubmit={formik.handleSubmit}>\n                    <div className='px-3 py-5 md:px-5 border rounded-xl' >\n                        <div className='flex flex-col justify-between gap-3 mb-3 sm:gap-5 md:mb-5 btn-group sm:flex-row'>\n                            <h6 className='w-full leading-7 xmd:w-auto whitespace-nowrap'>{t('Service List')}</h6>\n                            {!data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted && <div className='flex items-center flex-wrap sm:flex-nowrap gap-3'>\n                                <Button className='btn btn-secondary btn-normal relative !pr-12 min-w-[210px] w-full md:w-[260px] !justify-start' label={t('Upload Invoice')} onClick={handleTextInputClick}  >\n                                    <input\n                                        id=\"attachments\"\n                                        type=\"file\"\n                                        name=\"attachments\"\n                                        multiple\n                                        className=\"focus:bg-transparent hidden\"\n                                        accept=\".pdf\"\n                                        onChange={(e) => handleFileEvent(e)}\n                                        ref={fileInputRef}\n                                        style={{ display: 'none' }}\n                                        key={uuidv4()}\n                                    />\n                                    <span className='w-5 h-5 absolute top-1/2 right-5 transform -translate-y-1/2'>\n                                        <FileUpload fontSize='20' className='w-5 h-5' />\n                                    </span>\n                                </Button>\n\n                                <Button className='btn btn-secondary btn-normal relative !pr-16 min-w-[210px] w-full md:w-[260px] !justify-start' label={t('Upload Document')} onClick={handleInputClick}>\n                                    <input\n                                        id=\"documents\"\n                                        type=\"file\"\n                                        name=\"documents\"\n                                        multiple\n                                        className=\"focus:bg-transparent hidden\"\n                                        accept=\".doc, .docx,application/msword\"\n                                        onChange={(e) => handleDocFileEvent(e)}\n                                        ref={docInputRef}\n                                        style={{ display: 'none' }}\n                                        key={uuidv4()}\n                                    />\n                                    <span className='w-5 h-5 absolute top-1/2 right-5 transform -translate-y-1/2'>\n                                        <FileUpload fontSize='20' className='w-5 h-5' />\n                                    </span>\n                                </Button>\n                            </div>}\n                        </div>\n                        <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        {COL_ARR_SERVICE3?.map((colValUser: ColArrType, index: number) => {\n                                            const key = colValUser.fieldName + index + 1\n                                            return (\n                                                <th scope='col' key={key}>\n                                                    <div className={`flex items-center ${colValUser.name == 'Status' ? 'justify-center' : ''}`}>\n                                                        {colValUser.name}\n\n                                                    </div>\n                                                </th>\n                                            );\n                                        })}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {data?.getAllDiversionReports?.data?.diversionReports?.map((data: DiversionReportContractorRes, index: number) => {\n                                        const displayIndex = filterData?.index + index + 1;\n                                        const approxWeightPerUnit = data?.material_type?.weight * data?.volume?.volume_cubic_yard;\n                                        const key = data?.uuid + index\n                                        return (\n                                            <tr key={key}>\n                                                <td className='text-left'>{displayIndex}</td>\n                                                <td className='text-left whitespace-nowrap'>{data?.is_full_site ? 'Full Site' : data?.zone?.location}</td>\n                                                <td className='text-left'>{data?.service_type}</td>\n                                                <td className='text-left'><div className='relative'>\n                                                    <span>{data?.material?.name}</span>\n                                                    {data?.is_material_updated && <span className='absolute -top-3 -right-2 bg-green-badge-bg px-1 py-0.5 text-bright-green-shade text-[10px] leading-4 inline-block rounded'>Updated</span>}\n                                                </div></td>\n                                                <td className='text-left'>\n                                                    <div className='relative'>\n                                                        <span>{data?.material_type?.type}</span>\n                                                        {data?.is_material_type_updated && <span className='absolute -top-3 -right-2 bg-green-badge-bg px-1 py-0.5 text-bright-green-shade text-[10px] leading-4 inline-block rounded'>Updated</span>}</div></td>\n                                                <td className='text-left'><div className='relative'>\n                                                    <span>{data?.equipment?.name}</span>\n                                                    {data?.is_equipment_updated && <span className='absolute -top-3 -right-2 bg-green-badge-bg px-1 py-0.5 text-bright-green-shade text-[10px] leading-4 inline-block rounded'>Updated</span>}</div></td>\n                                                <td className='text-left'><div className='relative'>\n                                                    <span>{data?.volume?.volume}</span>\n                                                    {data?.is_volume_updated && <span className='absolute -top-3 -right-2 bg-green-badge-bg px-1 py-0.5 text-bright-green-shade text-[10px] leading-4 inline-block rounded'>Updated</span>}</div></td>\n                                                <td className='text-left'>\n                                                    {data?.frequency?.frequency_type}\n                                                </td>\n                                                <td className='text-left'>{(data?.equipment?.name.toLocaleLowerCase() === 'compactor' || data?.service_type === 'Regular on call') ? 'NA' : data?.add_units}</td>\n                                                <td className='text-left'>\n                                                    <div className='flex items-center space-x-2.5'>\n                                                        <div className='w-[4.125rem] table-input'>\n                                                            {data?.equipment?.name.toLocaleLowerCase() !== 'compactor' && data?.service_type === 'Regular on call'}\n                                                            <TextInput\n                                                                placeholder={t('')}\n                                                                name={`reportData.[${index}].lifts`}\n                                                                onBlur={OnBlurWeights}\n                                                                onChange={(e) => {\n                                                                    formik.setFieldValue(`reportData.[${index}].lifts`, (e.target.value))\n                                                                    formik.setFieldValue(`reportData.[${index}].approx_weight_per_month`, ((+e.target.value) * approxWeightPerUnit).toFixed(2))\n                                                                }}\n                                                                required={true}\n                                                                value={\n                                                                    // (data?.equipment?.name.toLocaleLowerCase() !== 'compactor' || data?.service_type == 'Regular on call') ? 'NA' :\n\n                                                                    formik?.values?.reportData?.[index]?.lifts ?? 'NA'}\n                                                                disabled={(data?.equipment?.name.toLocaleLowerCase() === 'compactor') || data?.is_submitted}\n                                                                error={(tableErrors?.[index]?.lifts && tableTouched?.[index]?.lifts) ? tableErrors?.[index]?.lifts : ''}\n                                                            />\n                                                        </div>\n                                                        {data?.equipment?.name === 'Compactor' && <button type='button' onClick={() => onAddLifts(data, index)}><span className='text-primary cursor-pointer'><PlusCircle /></span></button>}\n                                                    </div>\n                                                </td>\n                                                <td className='text-left'>{(data?.equipment?.name.toLocaleLowerCase() === 'compactor') ? 'NA' : approxWeightPerUnit.toFixed(2)}</td>\n                                                <td className='text-left'>\n                                                    <div className='w-28 table-input'>\n                                                        <TextInput\n                                                            placeholder={t('')}\n                                                            name={`reportData.[${index}].approx_weight_per_month`}\n                                                            onBlur={OnBlurWeights}\n                                                            onChange={formik.handleChange}\n                                                            required={true}\n                                                            value={formik?.values?.reportData?.[index]?.approx_weight_per_month}\n                                                            disabled={(data?.equipment?.name.toLocaleLowerCase() === 'compactor') || data?.is_submitted}\n                                                            error={(tableErrors?.[index]?.approx_weight_per_month && tableTouched?.[index]?.approx_weight_per_month) ? tableErrors?.[index]?.approx_weight_per_month : ''}\n                                                        />\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </table>\n                            {(returnTrueValueWeights((data?.getAllDiversionReports?.data?.count === 0 ||\n                                data?.getAllDiversionReports?.data?.data === null),true,false)) && (\n                                    <div className='flex justify-center'>\n                                        <div>{t('No Data')}</div>\n                                    </div>\n                                )}\n                        </div>\n                    </div>\n                    <div className='flex justify-between flex-wrap '>\n\n                        {!data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted && <div className=\"flex flex-wrap justify-start gap-2 mt-5 md:gap-5\">\n                            <button className=\"btn bg-default btn-primary btn-normal w-full xs:w-[160px] whitespace-nowrap \"\n                                title={`${t('Save as Draft')}`}\n                                type='button'\n                                onClick={onSaveDraft}\n                                disabled={createLoader}\n                            >Save as Draft</button>\n                            <button className=\"btn bg-default btn-secondary btn-normal w-full xs:w-[160px] whitespace-nowrap \" type=\"button\" disabled={createLoader}\n                                title={`${t('Confirm')}`} onClick={onConfirm}>Confirm</button>\n                        </div>}\n                        <div className='p-4 w-1/2 '>\n                            {formik?.values?.fileName ? <div className='flex justify-between text-lg font-bold mb-4 truncate'>\n                                <div className='break-words truncate'><span className='text-primary'>Invoice : </span>{formik?.values?.fileName}</div>  <Button className='bg-transparent cursor-pointer btn-default' onClick={onDeleteUploads} label={''} title={`${t('Delete')}`} disabled={data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted} >\n                                    <Trash className='fill-error' />\n                                </Button>\n                            </div> : ''}\n                            {formik?.values?.docFileName ? <div className='flex justify-between text-lg font-bold truncate '>\n                                <div className='break-words truncate '><span className='text-primary'>Document : </span>{formik?.values?.docFileName}</div> <Button className='bg-transparent cursor-pointer btn-default' onClick={onDeleteUploadsDoc} label={''} title={`${t('Delete')}`} disabled={data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted} >\n                                    <Trash className='fill-error' />\n                                </Button>\n                            </div> : ''}\n                        </div>\n                    </div>\n                </form>\n\n                {isAddMaterial && <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`${returnTrueValueWeights(isAddMaterial , '' , 'hidden')} fixed top-0 left-0 right-0 z-50 h-full bg-modal modal`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className=\"flex items-center justify-center h-full py-5 transition-all duration-300\">\n                        <div className='w-full mx-5 sm:max-w-[780px]'>\n                            {/* <!-- Modal content --> */}\n                            <div className='relative bg-white rounded-xl'>\n                                {/* <!-- Modal header --> */}\n                                <div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                                    <p className='text-lg font-bold md:text-xl text-baseColor'>Add Other Material</p>\n                                    <Button onClick={() => { setIsAddMaterial(false); formikAddWeights.resetForm() }} label={t('')} title={`${t('Close')}`}>\n                                        <span className='text-xl-22'><Cross className='text-error' /></span>\n                                    </Button>\n                                </div>\n                                {/* <!-- Modal body --> */}\n                                <div className='w-full'>\n                                    <form onSubmit={formikAddWeights.handleSubmit}>\n                                        <div className='p-5 max-h-[calc(100vh-260px)] overflow-auto grid grid-cols-1 sm:grid-cols-2 sm:gap-4'>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    value={formikAddWeights?.values?.zone_id}\n                                                    name='zone_id'\n                                                    onChange={formikAddWeights?.handleChange}\n                                                    id='zone_id'\n                                                    label={t('Zone')}\n                                                    required={true} options={zoneDrpDown} error={getErrorWeights('zone_id')} />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    placeholder={t('Select Service Type')}\n                                                    name='service_type'\n                                                    id='service_type'\n                                                    value={formikAddWeights?.values?.service_type}\n                                                    label={t('Service Type')}\n                                                    onChange={(e) => {\n                                                        formikAddWeights.setFieldValue('service_type', e?.target?.value)\n                                                        if (e.target.value === 'Regular on call') {\n                                                            frequencyDrpData?.map((data: {\n                                                                name?: string | number;\n                                                                key?: string | number;\n                                                            }) => {\n                                                                if (data?.name == '1') {\n                                                                    formikAddWeights.setFieldValue('frequency_id', data?.key);\n                                                                }\n                                                            })\n                                                        }\n                                                    }}\n                                                    required={true} options={serviceTypeDrpDataWeights} error={getErrorWeights('service_type')} />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    value={formikAddWeights?.values?.material_id}\n                                                    name='material_id'\n                                                    onChange={formikAddWeights.handleChange}\n                                                    id='material_id'\n                                                    label={t('Material Category')}\n                                                    required={true} options={materialDrpData} error={getErrorWeights('material_id')} />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    value={formikAddWeights?.values?.material_type_id}\n                                                    name='material_type_id'\n                                                    onChange={formikAddWeights.handleChange}\n                                                    id='materail_type_id'\n                                                    label={t('Material Type')}\n                                                    required={true} options={materialTypeDrpData} error={getErrorWeights('material_type_id')} />\n                                            </div>\n\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    value={formikAddWeights?.values?.equipment}\n                                                    name='equipment'\n                                                    onChange={onEquipmentChange}\n                                                    id='equipment'\n                                                    label={t('Equipment')}\n                                                    required={true} options={equipmentDrpData} error={getErrorWeights('equipment')} />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    value={formikAddWeights?.values?.frequency_id}\n                                                    name='frequency_id'\n                                                    onChange={formikAddWeights.handleChange}\n                                                    id='frequency_id'\n                                                    label={t('Frequency')}\n                                                    required={true} disabled={formikAddWeights?.values?.service_type === 'Regular on call'} options={formikAddWeights?.values?.service_type === 'Regular on call' ? frequencyDrpData : frequencyDrpData?.filter((data) => data?.name !== '1')} error={getErrorWeights('frequency_id')} />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <DropDown\n                                                    value={formikAddWeights?.values?.volume_name}\n                                                    name='volume_name'\n                                                    onChange={onVolumeChange}\n                                                    id='volume_name'\n                                                    label={t('Volume')}\n                                                    required={true} options={volumeDrpData} error={getErrorWeights('volume_name')} />\n                                            </div>\n\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <TextInput\n                                                    placeholder={t('Add Units')}\n                                                    value={formikAddWeights?.values?.add_units}\n                                                    name='add_units'\n                                                    onChange={formikAddWeights.handleChange}\n                                                    label={t('Unit')}\n                                                    required={true}\n                                                    error={getErrorWeights('add_units')}\n                                                    disabled={formikAddWeights?.values?.equipment.toLocaleLowerCase() === 'compactor' || formikAddWeights?.values?.service_type === 'Regular on call'}\n                                                />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <TextInput\n                                                    placeholder={t('Add lifts')}\n                                                    value={formikAddWeights?.values?.lifts}\n                                                    name='lifts'\n                                                    onChange={formikAddWeights.handleChange}\n                                                    label={t('Lifts')}\n                                                    required={true}\n                                                    error={getErrorWeights('lifts')}\n                                                    disabled={formikAddWeights?.values?.equipment.toLocaleLowerCase() === 'compactor' || formikAddWeights?.values?.service_type === 'Regular on call'}\n                                                />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <TextInput\n                                                    value={formikAddWeights?.values?.approx_weight_per_unit}\n                                                    placeholder={t('Add Weight')}\n                                                    name='approx_weight_per_unit'\n                                                    onChange={formikAddWeights.handleChange}\n                                                    label={t('Approx Weight Per Unit (Autofill)')}\n                                                    disabled={true}\n                                                    required={true} \n                                                // error={formikAddWeights?.errors?.approx_weight_per_unit && formikAddWeights?.touched?.approx_weight_per_unit ? formikAddWeights?.errors?.approx_weight_per_unit : ''}\n                                                />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <TextInput\n                                                    value={formikAddWeights?.values?.approx_weight_per_month}\n                                                    placeholder={t('Add Weight')}\n                                                    onChange={formikAddWeights.handleChange}\n                                                    name='approx_weight_per_month'\n                                                    label={t('Weight Per month (Autofill)')}\n                                                    required={true} disabled={formikAddWeights?.values?.equipment.toLocaleLowerCase() === 'compactor'}\n                                                    error={formikAddWeights?.errors?.approx_weight_per_month && formikAddWeights?.values?.equipment.toLocaleLowerCase() !== 'compactor' && formikAddWeights?.touched?.approx_weight_per_month ? formikAddWeights?.errors?.approx_weight_per_month : ''}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                            <Button className={'btn-primary btn-normal w-full md:w-auto min-w-[160px]'} type='submit' label={t('Add')} title={`${t('Add')}`} />\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n\n                {isShowlifts && <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`${returnTrueValueWeights(isShowlifts , '' , 'hidden')} fixed top-0 left-0 right-0 z-50 h-full bg-modal modal`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className=\"flex items-center justify-center h-full py-5 transition-all duration-300\">\n                        <div className='w-full mx-5 sm:max-w-[780px]'>\n                            <div className='relative bg-white rounded-xl'>\n                                <form onSubmit={formik.handleSubmit}>\n                                    <div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                                        <p className='text-lg font-bold md:text-xl text-baseColor'>Add Lifts</p>\n                                        <Button label={t('')} title={`${t('Close')}`} onClick={() => setIsShowlifts(false)}>\n                                            <span className='text-xl-22'><Cross className='text-error' /></span>\n                                        </Button>\n                                    </div>\n                                    <div className='w-full max-h-[500px] p-5 mb-3 overflow-auto bg-white sm:w-auto custom-dataTable '>\n                                        <table>\n                                            <thead >\n                                                <tr>\n                                                    {COL_ARR_SERVICE4?.map((colValUser: ColArrType, index: number) => {\n                                                        const key = colValUser.fieldName + index + 1;\n                                                        return (\n                                                            <th scope='col' key={key}>\n                                                                <div className={`flex items-center ${colValUser.name == 'Status' ? 'justify-center' : ''}`}>\n                                                                    {colValUser.name}\n                                                                </div>\n                                                            </th>\n                                                        );\n                                                    })}\n                                                    <th>\n                                                        <div className='flex justify-center'>\n                                                            {t('Action')}\n                                                        </div>\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody >\n                                                {formik?.values?.popupData?.length ? formik?.values?.popupData?.map((popData: { name: string, uuid: string, weight: number, date: Date | null }, index: number) => {\n                                                    return (<tr key={`popupData-${index + 1}`}>\n                                                        <td className='text-left whitespace-nowrap'>{popData?.name}</td>\n                                                        <td className='text-left'>\n                                                            <div className='flex items-center space-x-2.5'>\n                                                                <div className='w-32 md:w-[8.75rem] table-input'>\n                                                                    <DatePicker\n\n                                                                        id={`formik?.values?.popupData?.[${index}]?.date`}\n                                                                        selected={formik?.values?.popupData?.[index]?.date}\n                                                                        onChange={(date: Date | null) => {\n                                                                            formik.setFieldValue(`popupData.[${index}].date`, date)\n                                                                        }}\n                                                                        dateFormat=\"dd/MM/yyyy\"\n                                                                        placeholderText=\"dd/MM/yyyy\"\n                                                                        className='customInput disabled:cursor-not-allowed'\n                                                                        disabled={data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted}\n                                                                        maxDate={new Date()}\n                                                                    />\n                                                                    {liftsErrors?.[index]?.date && liftsTouched?.[index]?.date ? <p className='error'>{liftsErrors?.[index]?.date as string}</p> : ''}\n                                                                </div>\n                                                            </div>\n                                                        </td>\n                                                        <td className='text-left'>\n                                                            <div className='w-24 md:w-[7.5rem] table-input'>\n                                                                <TextInput\n                                                                    placeholder={t('')}\n                                                                    required={true}\n                                                                    id={`weight-${index}`}\n                                                                    name={`popupData[${index}].weight`}\n                                                                    onChange={formik.handleChange}\n                                                                    value={formik?.values?.popupData?.[index]?.weight}\n                                                                    error={(liftsErrors?.[index]?.weight && liftsTouched?.[index]?.weight) ? liftsErrors?.[index]?.weight : ''}\n                                                                    disabled={data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted}\n                                                                />\n                                                            </div>\n                                                        </td>\n                                                        <td>\n                                                            <button type=\"button\" className='btn bg-transparent cursor-pointer btn-default' onClick={() => onDelete(index)} disabled={data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted} ><Trash className='fill-error' /></button>\n                                                        </td>\n                                                    </tr>);\n                                                }\n                                                ) : null}\n                                            </tbody>\n\n                                        </table>\n                                        {(returnTrueValueWeights((formik?.values?.popupData?.length === 0 ||\n                                            formik?.values?.popupData === null),true,false)) && (\n                                                <div className='flex justify-center'>\n                                                    <div>{t('No Data')}</div>\n                                                </div>\n                                            )}\n                                    </div>\n\n                                    {!data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted && <p className='p-5 pt-0 flex items-center space-x-2.5'>\n                                        <button onClick={() => addNewLift()} type='button'><span className='text-primary cursor-pointer'><PlusCircle /></span></button>\n                                        <span>Add New</span>\n                                    </p>}\n\n                                    <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                        {!data?.getAllDiversionReports?.data?.diversionReports[0].is_submitted && <Button className={'btn-primary btn-normal w-full md:w-auto min-w-[160px]'} label={t('Add')} title={`${t('Add')}`} type='submit'\n                                            onClick={onAddTotalLifts}\n                                        // disabled={!formik.values.popupData.length}\n                                        />}\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n\n                {isDelete && <CommonModel\n                    warningText={DELETE_WARNING_TEXT}\n                    onClose={onClose}\n                    action={onRemove}\n                    show={isDelete}\n                />}\n                {isDeleteDoc && <CommonModel\n                    warningText={DELETE_WARNING_TEXT}\n                    onClose={onClose}\n                    action={onRemovedoc}\n                    show={isDeleteDoc}\n                />}\n            </div > : <div className='flex justify-center items-center'>\n                <p className='text-lg font-bold'><span className='error'>Note : </span>No records found</p>\n            </div>}\n        </>\n    )\n}\n\nexport default WeightList;"],"names":["UPDATE_DIVERSION_REPORT_SETTINGS","gql","_templateObject","_taggedTemplateLiteral","GET_DIVERSION_REPORT_SETTING_BY_ID","_templateObject2","GET_ALL_DIVERSION_REPORTS_CONTRACTORS","WeightList","_userData$getProfile","_userData$getProfile$","_userData$getProfile$2","_userData$getProfile2","_userData$getProfile3","_userData$getProfile4","_userData$getProfile12","_userData$getProfile13","_userData$getProfile14","_userData$getProfile27","_formikAddWeights$val3","_formikAddWeights$val8","_formikAddWeights$val9","_formikAddWeights$val16","_formikAddWeights$val17","_formikAddWeights$val22","_formikAddWeights$val23","_formik$values3","_formik$values4","_formik$values6","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_data$getAllDiversion19","_data$getAllDiversion20","_data$getAllDiversion21","_moment$format","_data$getAllDiversion22","_data$getAllDiversion23","_data$getAllDiversion24","_data$getAllDiversion25","_moment$format2","_data$getAllDiversion26","_data$getAllDiversion27","_data$getAllDiversion28","_data$getAllDiversion29","_data$getAllDiversion30","_data$getAllDiversion31","_data$getAllDiversion32","_data$getAllDiversion33","_data$getAllDiversion34","_data$getAllDiversion35","_data$getAllDiversion36","_data$getAllDiversion37","_data$getAllDiversion38","_data$getAllDiversion39","_data$getAllDiversion40","_data$getAllDiversion41","_data$getAllDiversion42","_formik$values9","_formik$values10","_data$getAllDiversion43","_data$getAllDiversion44","_formik$values11","_formik$values12","_data$getAllDiversion45","_data$getAllDiversion46","_formikAddWeights$val26","_formikAddWeights$val27","_formikAddWeights$val28","_formikAddWeights$val29","_formikAddWeights$val30","_formikAddWeights$val31","_formikAddWeights$val32","_formikAddWeights$val33","_formikAddWeights$val34","_formikAddWeights$val35","_formikAddWeights$val36","_formikAddWeights$val37","_formikAddWeights$val38","_formikAddWeights$val39","_formikAddWeights$val40","_formikAddWeights$val41","_formikAddWeights$val42","_formikAddWeights$val43","_formikAddWeights$err3","_formikAddWeights$val44","_formikAddWeights$tou2","_formikAddWeights$err4","_formik$values13","_formik$values13$popu","_formik$values14","_formik$values14$popu","_formik$values17","_formik$values17$popu","_formik$values18","_data$getAllDiversion53","_data$getAllDiversion54","_data$getAllDiversion55","_data$getAllDiversion56","t","useTranslation","dispatch","useDispatch","weightDetails","useSelector","state","addWeightsManagement","userProfileData","userData","userProfile","data","refetch","useQuery","fetchPolicy","skip","getProfile","company_id","uuid","variables","companyId","limit","page","zones","useMutation","GET_ZONES_BY_ID","getDiversionReportSettingById","createOrUpdateWeightsValidationSchema","weightsTableValidationschema","useValidation","createorUpdateWeights","loading","createLoader","CREATE_OR_UPDATE_WEIGHTS","getMaterialTypes","GET_MATERIAL_BY_ID","getAllMaterials","GET_MATERIALS","getAllEquipments","GET_EQUIPMENTS","getAllFrequencies","GET_FREQUENCIES","getEquipmentbyName","GET_EQUIPMENT_BY_NAME","isDelete","setIsDelete","useState","isDeleteDoc","setIsDeleteDoc","isShowlifts","setIsShowlifts","volumeDrpData","setVolumeDrpData","name","key","filterData","PAGE_LIMIT","PAGE_NUMBER","sortOrder","search","sortField","index","COL_ARR_SERVICE3","sortable","fieldName","COL_ARR_SERVICE4","useEffect","_userData$getProfile5","_userData$getProfile6","_userData$getProfile7","_userData$getProfile8","_userData$getProfile9","_userData$getProfile10","_userData$getProfile11","locationId","branch_locations","then","res","_res$data","_res$data$getDiversio","_res$data$getDiversio2","setFrequencyTime","frequency","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","toast","error","networkError","result","errors","message","_data$getAllDiversion","_data$getAllDiversion2","_data$getAllDiversion3","getAllDiversionReports","diversionReports","map","_data$equipment","formik","setFieldValue","concat","equipment","service_type","approx_weight_per_month","document","invoice","lift","length","weight","date","Date","lifts","useFormik","initialValues","reportData","compactor_lifts","attachments","fileName","documents","docFileName","delete_lifts","popupData","isSubmitted","validationArray","validationSchema","onSubmit","values","_data$getAllDiversion4","_data$getAllDiversion5","_data$material_type","_data$volume","_data$zone","_data$material","_data$material_type2","_data$equipment2","_data$frequency","_data$volume2","_Number","_values$reportData","_values$reportData$in","_Number2","_values$reportData2","_values$reportData2$i","_userData$getProfile15","_userData$getProfile16","_values$compactor_lif","_values$compactor_lif2","_userData$getProfile17","_userData$getProfile18","_userData$getProfile19","_values$delete_lifts$","_values$delete_lifts","_userData$getProfile20","_userData$getProfile21","_userData$getProfile22","_data$frequency_time","approxWeightPerUnit","material_type","volume","volume_cubic_yard","toFixed","zone_id","conditionReturnFun","zone","material_id","material","material_type_id","equipment_id","frequency_id","volume_id","add_units","Number","approx_weight_per_unit","user_id","report_id","location_id","start_date","moment","startOf","format","end_date","endOf","frequency_time","frequencyTime","diversion_history_id","_res$data2","_res$data2$createDive","success","createDiversionReport","resetForm","formikAddWeights","_res$data3","_res$data3$getAllDive","_res$data3$getAllDive2","_res$data3$getAllDive3","_data$equipment3","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","_err$networkError3","_err$networkError3$re","_err$networkError3$re2","onAddLifts","useCallback","_formik$values","_formik$values$compac","undefined","setLiftIndex","isAddMaterial","setIsAddMaterial","materialDrpData","setMaterialDrpData","frequencyDrpData","setFrequencyDrpData","materialTypeDrpData","setMaterialTypeDrpData","equipmentDrpData","setEquipmentDrpData","zoneDrpDown","setZoneDrpDown","onAddOtherMaterial","_userData$getProfile23","_userData$getProfile24","_userData$getProfile25","_userData$getProfile26","siteId","_res$data4","_res$data4$getZoneByS","_res$data4$getZoneByS2","getZoneBySiteId","location","_err$networkError4","_err$networkError4$re","_err$networkError4$re2","_res$data5","_res$data5$getMateria","_res$data5$getMateria2","getMaterials","_err$networkError5","_err$networkError5$re","_err$networkError5$re2","_res$data6","_res$data6$getEquipme","_res$data6$getEquipme2","_res$data7","_res$data7$getEquipme","_res$data7$getEquipme2","volumeCubicData","volumeData","getEquipments","_data$volume3","_data$volume4","_data$volume5","cubic","equipData","toLocaleLowerCase","setCompactorUuid","setVolumeDataForWeights","_err$networkError6","_err$networkError6$re","_err$networkError6$re2","_res$data8","_res$data8$getFrequen","_res$data8$getFrequen2","_res$data9","_res$data9$getFrequen","_res$data9$getFrequen2","getFrequencies","frequency_type","code","frequencyData","reqdata","setFrequencyData","_err$networkError7","_err$networkError7$re","_err$networkError7$re2","volume_name","_userData$getProfile28","_userData$getProfile29","_userData$getProfile30","_userData$getProfile31","_userData$getProfile32","_userData$getProfile33","_userData$getProfile34","_userData$getProfile35","_userData$getProfile36","_userData$getProfile37","_userData$getProfile38","_userData$getProfile39","_userData$getProfile40","_userData$getProfile41","_userData$getProfile42","_data$getAllDiversion6","_data$getAllDiversion7","_data$getAllDiversion8","_data$getAllDiversion9","_data$getAllDiversion10","_data$getAllDiversion11","_data$getAllDiversion12","_data$getAllDiversion13","_data$getAllDiversion14","_data$getAllDiversion15","_data$getAllDiversion16","_data$getAllDiversion17","_data$getAllDiversion18","_res$data10","_res$data10$createDiv","_err$networkError8","_err$networkError8$re","_err$networkError8$re2","_err$networkError9","_err$networkError9$re","_err$networkError9$re2","_formikAddWeights$val","_formikAddWeights$val2","materialId","_res$data11","_res$data11$getMateri","_res$data11$getMateri2","_res$data11$getMateri3","_res$data12","_res$data12$getMateri","_res$data12$getMateri2","getMaterialById","material_types","type","materialData","setMaterailData","_err$networkError10","_err$networkError10$r","_err$networkError10$r2","_formikAddWeights$val4","_formikAddWeights$val5","_formikAddWeights$val6","_formikAddWeights$val7","_formikAddWeights$val10","_formikAddWeights$val11","_formikAddWeights$val12","_formikAddWeights$val13","_formikAddWeights$val14","_formikAddWeights$val15","split","_formikAddWeights$val18","_formikAddWeights$val19","_formikAddWeights$val20","_formikAddWeights$val21","onDelete","liftIndex","_formik$values$delete","_formik$values$delete2","_formik$values2","deleteId","filter","ind","push","fileInputRef","useRef","docInputRef","onSaveDraft","handleSubmit","onConfirm","addNewLift","_formik$values5","_formik$values5$popup","updatedPopupData","newPopupData","liftsErrors","liftsTouched","touched","tableErrors","tableTouched","onAddTotalLifts","updatedCompactorLifts","totalWeight","reduce","acc","OnBlurWeights","e","target","whiteSpaceRemover","onDeleteUploads","onDeleteUploadsDoc","onVolumeChange","_e$target4","value","_e$target5","_e$target6","_formikAddWeights$val24","_formikAddWeights$val25","onRemove","axios","delete","API_MEDIA_END_POINT","_error$response","_error$response$data","response","onRemovedoc","_error$response2","_error$response2$data","onClose","getErrorWeights","_formikAddWeights$err","_formikAddWeights$tou","_formikAddWeights$err2","returnTrueValueWeights","condi","succ","_jsxs","_Fragment","children","_jsx","UpdatedHeader","headerTitle","className","is_submitted","Button","label","title","onClick","handleTextInputClick","_fileInputRef$current","current","click","id","multiple","accept","onChange","event","files","currentTarget","maxFileSize","MAX_FILE_SIZE","allowedExtensions","validFiles","Array","from","file","_file$name$split$pop","fileSize","size","extension","pop","toLowerCase","includes","_validFiles$","formData","FormData","append","post","headers","AXIOS_HEADERS","_response$data","_response$data$data","setFieldError","handleFileEvent","ref","style","display","uuidv4","FileUpload","fontSize","handleInputClick","_docInputRef$current","_file$name$split$pop2","_validFiles$2","_response$data2","_response$data2$data","handleDocFileEvent","colValUser","scope","_data$material_type3","_data$volume9","_data$zone2","_data$material2","_data$material_type4","_data$equipment4","_data$volume10","_data$frequency2","_data$equipment5","_data$equipment6","_formik$values$report","_formik$values7","_formik$values7$repor","_formik$values7$repor2","_data$equipment7","_tableErrors$index","_tableTouched$index","_tableErrors$index2","_data$equipment8","_data$equipment9","_formik$values8","_formik$values8$repor","_formik$values8$repor2","_data$equipment10","_tableErrors$index3","_tableTouched$index2","_tableErrors$index4","displayIndex","is_full_site","is_material_updated","is_material_type_updated","is_equipment_updated","is_volume_updated","TextInput","placeholder","onBlur","required","disabled","PlusCircle","handleChange","count","Trash","tabIndex","Cross","DropDown","options","_e$target7","serviceTypeDrpDataWeights","_e$target","_e$target2","_e$target3","equipmentName","_res$data13","_res$data13$getEquipm","_res$data13$getEquipm2","getEquipmentByName","_data$volume6","_data$volume7","_data$volume8","popData","_formik$values15","_formik$values15$popu","_formik$values15$popu2","_data$getAllDiversion47","_data$getAllDiversion48","_liftsErrors$index","_liftsTouched$index","_liftsErrors$index2","_formik$values16","_formik$values16$popu","_formik$values16$popu2","_liftsErrors$index3","_liftsTouched$index2","_liftsErrors$index4","_data$getAllDiversion49","_data$getAllDiversion50","_data$getAllDiversion51","_data$getAllDiversion52","DatePicker","selected","dateFormat","placeholderText","maxDate","CommonModel","warningText","DELETE_WARNING_TEXT","action","show"],"sourceRoot":""}