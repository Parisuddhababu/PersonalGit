{"version":3,"file":"static/js/7410.e378e534.chunk.js","mappings":"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","sources":["components/breadcrumb/breadcrumb.tsx","components/common/EditButtonPopup.tsx","components/common/commonModel.tsx","components/common/deleteBtn.tsx","components/header/updatedHeader.tsx","framework/graphql/queries/volumeManagement.ts","framework/graphql/mutations/volumeManagement.ts","views/volumeManagement/index.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Breadcrumb = () => {\n\tconst { t } = useTranslation();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst { id } = useParams();\n\tconst { userProfileData } = useSelector(\n\t\t(state: { userProfile: { userProfileData: UserProfileType; } }) => state.userProfile,\n\t);\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? '';\n\n\t\n\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2]?.includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0]?.toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0]?.toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst thirdLevelLink = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\tmodulePath = data?.replace(/-|\\s/g, ' ');\n\t\t\tconst splitPathName = modulePath.split(' ');\n\t\t\tfor (let i = 0; i < splitPathName.length; i++) {\n\t\t\t\tsplitPathName[i] = splitPathName[i][0].toUpperCase() + splitPathName[i].substring(1); // Use substring instead of substr\n\t\t\t}\n\t\t\tmodulePath = splitPathName.join(' ');\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' '; // Using slice as you did previously\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst removeID = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' ';\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst urlArray = location.pathname.split('/');\n\n\tconst breadcrumbLinks = useCallback(() => {\n\t\tif (urlArray?.length > 0) {\n\t\t\tconst length = urlArray?.length\n\t\t\tif (length < 4) {\n\t\t\t\treturn (\n\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 5) {\n\t\t\t\tif (urlArray[3] !== '') {\n\t\t\t\t\tif (urlArray[3].length > 32) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{!removeID(urlArray[3]) &&\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(removeID(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 6) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 7) {\n\t\t\t\tlet uuidData = ''\n\t\t\t\tif (uuid) {\n\t\t\t\t\tuuidData = `?uuid=${uuid}`;\n\t\t\t\t} else if (id) {\n\t\t\t\t\tuuidData = `?uuid=${id}`;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[2]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}/${urlArray[3]}/${(uuid !== '' || id !== '') && uuidData}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[3]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[5] && `${t(thirdLevelLink(urlArray[4]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}, [urlArray]);\n\n\treturn (\n\t\t<div className='w-full'>\n\t\t\t<p className='max-xs:text-xs text-xs-14 max-md:truncate'>\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`)} className='cursor-pointer text-light-grey hover:underline'>\n\t\t\t\t\t\t{t('Home')}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<span className='mx-2 text-light-grey'>{'>'}</span>\n\t\t\t\t</span>\n\n\t\t\t\t{breadcrumbLinks()}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Breadcrumb);\n","import React from 'react';\n\nimport Button from '@components/button/button';\nimport { Edit } from '@components/icons/icons';\n\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst EditBtnPopup = ({ data, onClick, className , setData }: any) => {\n\n\tconst editRedirection = () => {\n\t\tonClick(data?.uuid); \n\t\tsetData && setData(data);\n\t};\n\n\treturn (\n\t\t<Button className={`bg-transparent btn-default ${className}`} onClick={editRedirection} label={''} title='Edit'>\n\t\t\t<Edit />\n\t\t</Button>\n\t);\n};\nexport default EditBtnPopup;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '@components/button/button';\nimport { Info, Cross, Cross2, Info2 } from '@components/icons/icons';\nimport { CommonModelProps } from 'src/types/common';\n\nconst CommonModel = ({ onClose, action, show, warningText, disabled , isLoading }: CommonModelProps) => {\n\tconst { t } = useTranslation();\n\tconst [addClass, setAddClass] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tif (show) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAddClass(true);\n\t\t\t}, 100);\n\t\t}\n\t}, [show]);\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <div className='w-12 h-12 mx-auto rounded-[50%] border-solid border-4 border-[#E8E8EA] border-r-[#2575d6] animate-spin absolute left-[58%] top-[40%]'></div>}\n\t\t\t<div className={`${show ? '' : 'hidden'} absolute top-0 left-0 right-0 z-[1000] h-full bg-modal`}>\n\t\t\t\t{(warningText !== 'Are you sure want to delete this record ?') && (warningText !== 'Are you sure want to change status ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[780px]'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='relative bg-white shadow rounded-xl'>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between px-5 py-6 border-b bg-accents-2 rounded-t-xl'>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center '>\n\t\t\t\t\t\t\t\t\t\t<Info className='inline-block mr-3 fill-baseColor' fontSize='20' />\n\t\t\t\t\t\t\t\t\t\t<span className='text-xl font-bold text-baseColor'>{t('Confirmation')}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Button onClick={onClose} label={''}>\n\t\t\t\t\t\t\t\t\t\t<Cross className='text-error' fontSize='14'/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='p-5 space-y-6 font-normal text-center border-b border-solid border-border-primary'>\n\t\t\t\t\t\t\t\t\t<p>{t(warningText)}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t\t\t<div className='flex flex-col items-center justify-end p-5 md:space-x-3 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal mb-2 md:mb-0 w-full md:w-auto min-w-[160px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal w-full md:w-auto min-w-[160px]' onClick={onClose} label={t('No')} title='No'/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{(warningText == 'Are you sure want to change status ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[640px]'>\n\t\t\t\t\t\t\t<div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n\t\t\t\t\t\t\t\t<div className='flex flex-col items-center mb-3'>\n\t\t\t\t\t\t\t\t\t<span className='p-[10px] bg-primary min-w-min rounded-full mb-3 overflow-hidden text-xl-44 md:text-6xl'><Info2 className='fill-white bg-primary' /></span>\n\t\t\t\t\t\t\t\t\t<h4>{t('Confirmation')}</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h6 className='font-semibold text-center mb-7 md:mb-10'>{t(warningText)}</h6>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-center space-x-5 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal min-w-[86px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal min-w-[86px]' onClick={onClose} label={t('No')} title='No' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{(warningText == 'Are you sure want to delete this record ?') &&\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[640px]'>\n\t\t\t\t\t\t\t<div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n\t\t\t\t\t\t\t\t<div className='flex justify-center mb-5'><span className='p-[22px] md:p-[26px] rounded-full bg-error text-xl-35 md:text-5xl'><Cross2 className='stroke-2 fill-white' /></span></div>\n\t\t\t\t\t\t\t\t<h6 className='font-bold text-center mb-7 md:mb-10'>{t(warningText)}</h6>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-center space-x-5 md:flex-row'>\n\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal min-w-[86px]' onClick={action} label={t('Yes')} disabled={disabled} title='Yes'/>\n\t\t\t\t\t\t\t\t\t<Button className='btn-secondary btn-normal min-w-[86px]' onClick={onClose} label={t('No')} title='No' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default CommonModel;\n","import React, { useCallback } from 'react';\n\nimport Button from '@components/button/button';\nimport { Trash } from '@components/icons/icons';\nimport { DeleteComponentsProps } from 'src/types/common';\n\nconst DeleteBtn = ({ data, setObj, setIsDelete, className ,customClick }: DeleteComponentsProps) => {\n\n\tconst deleteData = useCallback(() => {\n\t\tsetObj(data);\n\t\t!customClick && setIsDelete(true);\n\t\tcustomClick && customClick(data);\n\t}, []);\n\n\treturn (\n\t\t<Button className={`bg-transparent cursor-pointer btn-default btn-icon ${className}`} onClick={deleteData} label={''} title='Delete'>\n\t\t\t<Trash className='fill-error' />\n\t\t</Button>\n\t);\n};\nexport default DeleteBtn;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport Breadcrumb from '@components/breadcrumb/breadcrumb';\nimport { HamburgerMenu } from '@components/icons/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShow } from 'src/redux/courses-management-slice';\n\ninterface UpdatedHeaderProps {\n\theaderActionConst?: any,\n\theaderTitle?: string,\n}\n\nconst UpdatedHeader = ({ headerActionConst, headerTitle }: UpdatedHeaderProps) => {\n\tconst { t } = useTranslation();\n\tconst dispatch = useDispatch();\n\tconst { show } = useSelector(((state: { coursesManagement: { show: boolean } }) => state.coursesManagement));\n\n\tconst location = useLocation();\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2].includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0].toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0].toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst onRenderJsxElement = () => {\n\t\tif (headerActionConst) {\n\t\t\treturn (headerActionConst())\n\t\t}\n\t}\n\n\tconst OnClickHandler = useCallback(() => {\n\t\tdispatch(setShow(!show))\n\t}, [show]);\n\n\treturn (\n\t\t<header className='sticky top-0 z-20 flex bg-white border-b shadow-header xl:shadow-none xl:h-auto xl:block border-border-primary xl:px-2 xl:pt-0'>\n\t\t\t<div onClick={OnClickHandler} className='pt-5 cursor-pointer text-xl-22 xl:hidden'>\n\t\t\t\t<HamburgerMenu className='ml-4' />\n\t\t\t</div>\n\t\t\t<div className='p-2.5 xl:p-[18px] xl:shadow-header max-xl:w-[calc(100%-47px)]'>\n\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-2.5'>\n\t\t\t\t\t<div className='w-full xl:w-auto'>\n\t\t\t\t\t\t<h1 className='mb-1 text-2xl max-xl:truncate xl:text-3xl'>{t(headerTitle ?? moduleName(location.pathname))}</h1>\n\t\t\t\t\t\t<Breadcrumb />\n\t\t\t\t\t</div>\n\t\t\t\t\t{headerActionConst &&\n\t\t\t\t\t\t<div className='flex gap-2.5 max-xl:w-[calc(100%+40px)] lg:gap-5'>\n\t\t\t\t\t\t\t{onRenderJsxElement()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default UpdatedHeader;\n","import { gql } from '@apollo/client';\n\nexport const GET_VOLUME_WITH_PAGINATION  = gql`query GetVolumesWithPagination($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getVolumesWithPagination(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        volumes {\n          uuid\n          volume\n          volume_cubic_yard\n        }\n        count\n      }\n    }\n  }`;\n\nexport const GET_VOLUMES = gql`query GetVolumes {\n  getVolumes {\n    message\n    data {\n      uuid\n      volume\n      volume_cubic_yard\n    }\n  }\n}`;\n\n","import { gql } from '@apollo/client';\n\n\nexport const CREATE_VOLUME = gql`mutation CreateVolume($volumeData: CreateVolumeDto!) {\n    createVolume(volumeData: $volumeData) {\n      message\n      data {\n        uuid\n        volume\n        volume_cubic_yard\n      }\n    }\n  }`;\n\nexport const EDIT_VOLUME = gql`mutation UpdateVolume($volumeData: UpdateVolumeDto!) {\n  updateVolume(volumeData: $volumeData) {\n    message\n    data {\n      uuid\n      volume\n      volume_cubic_yard\n    }\n  }\n}`;\n\nexport const DELETE_VOLUME= gql`mutation DeleteVolume($volumeId: String!) {\n  deleteVolume(volumeId: $volumeId) {\n    message\n  }\n}`;\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Pagination from '@components/Pagination/Pagination';\nimport Button from '@components/button/button';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { ArrowSortingDown, ArrowSortingUp, Cross, GetDefaultIcon, ImportDoc, Search } from '@components/icons/icons';\nimport TextInput from '@components/textInput/TextInput';\nimport { API_BASE_URL,  DELETE_WARNING_TEXT,  EDIT_WARNING_TEXT, Events, PAGE_LIMIT, PAGE_NUMBER, SHOW_PAGE_COUNT_ARR } from '@config/constant';\nimport { GET_VOLUME_WITH_PAGINATION } from '@framework/graphql/queries/volumeManagement';\nimport { ColArrType } from '@types';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport filterServiceProps from '@components/filter/filter';\nimport { APIServices } from 'src/services/axiosCommon';\nimport { useFormik } from 'formik';\nimport useValidation from '@framework/hooks/validations';\nimport { CREATE_VOLUME, DELETE_VOLUME, EDIT_VOLUME } from '@framework/graphql/mutations/volumeManagement';\nimport { whiteSpaceRemover } from '@utils/helpers';\nimport EditBtnPopup from '@components/common/EditButtonPopup';\nimport CommonModel from '@components/common/commonModel';\nimport DeleteBtn from '@components/common/deleteBtn';\n\nexport type VolumesDataRes = {\n    uuid: string;\n    volume: string;\n    volume_cubic_yard: number;\n}\n\nconst VolumeManagement = (): ReactElement => {\n    const { t } = useTranslation();\n    const COL_ARR_VOLUME_MANAGEMENT = [\n        { name: t('Sr.No'), sortable: false },\n        { name: t('Volume'), sortable: true, fieldName: 'volume' },\n        { name: t('Volume (Cubic Yard)'), sortable: true, fieldName: 'volume_cubic_yard' },\n        { name: t('Action'), sortable: false, fieldName: 'action' }\n    ] as ColArrType[];\n    const [filterData, setFilterData] = useState({\n        limit: PAGE_LIMIT,\n        page: PAGE_NUMBER,\n        sortOrder: 'descend',\n        search: '',\n        sortField: 'id',\n        index: 0\n    });\n    const { createVolumeValidationSchema } = useValidation();\n    const [isAdd, setIsAdd] = useState<boolean>(false);\n    const [isEditPopupOpen, setIsEditPopupOpen] = useState<boolean>(false);\n    const [isDeletePopupOpen, setIsDeletePopupOpen] = useState<boolean>(false);\n    const [volumeObj,setVolumeObj]= useState<VolumesDataRes>();\n    const [recordsPerPage, setRecordsPerPage] = useState<number>(filterData.limit);\n    const { data, refetch: refetchVolumeListData } = useQuery(GET_VOLUME_WITH_PAGINATION, {\n        fetchPolicy: 'network-only',\n        variables: filterData ?? {\n            limit: PAGE_LIMIT,\n            page: PAGE_NUMBER,\n            sortOrder: 'descend',\n            search: '',\n            sortField: 'id',\n        }\n    });\n    const [createVolume, { loading: createVolumeLoadingState }] = useMutation(CREATE_VOLUME);\n    const [editVolume, { loading: editVolumeLoadingState }] = useMutation(EDIT_VOLUME);  \n    const [deleteVolume, { loading: deleteVolumeLoadingState }] = useMutation(DELETE_VOLUME);  \n\n\n    /**\n     * Method refetchs the list data if there any change in filterData  \n     */\n    useEffect(() => {\n        refetchVolumeListData(filterData).catch((err) => toast.error(err.networkError.result.errors[0].message));\n    }, [filterData])\n\n    /**\n     * Method used to records per page\n     */\n    useEffect(() => {\n        setRecordsPerPage(filterData?.limit)\n    }, [filterData?.limit])\n\n    const totalVolumesListCount = data?.getVolumesWithPagination?.data?.count || 0;\n    const totalPages = Math.ceil(totalVolumesListCount / recordsPerPage);\n\n    /**\n     * Method that handles the page changes\n     */\n    const handlePageChange = useCallback((newPage: number): void => {\n        const updatedFilterData = {\n            ...filterData,\n            page: newPage,\n            index: (newPage - 1) * filterData.limit,\n        };\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState('filterVolume', JSON.stringify(updatedFilterData));\n    }, [filterData.limit])\n\n    /**\n     * Method used to set search value in filterData\n     */\n    const onSearchVolume = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterData({ ...filterData, search: e.target.value })\n    }, []);\n\n    /**\n     *\n     * @param sortFieldName Method used for storing sort data\n     */\n    const onHandleSortVolume = (sortFieldName: string) => {\n        setFilterData({\n            ...filterData,\n            sortField: sortFieldName,\n            sortOrder: filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n        });\n    };\n\n    /**\n     *\n     * @param e Method used for change dropdown for page limit\n     */\n    const onPageDrpSelectVolume = (e: string) => {\n        const newLimit = Number(e);\n        const updatedFilterData = {\n            ...filterData,\n            limit: newLimit,\n            page: PAGE_NUMBER,\n            index: 0,\n        };\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState('filterVolume', JSON.stringify(updatedFilterData));\n    };\n\n    /**\n     * Method used to open Add new popup\n     */\n    const onAddVolume = useCallback(() => {\n        setIsAdd(true);\n        formik.setFieldValue('type',Events.add);\n    }, []);\n\n    /**\n     * Method used to close popup\n     */\n    const onClose = useCallback(() => {\n        formik.resetForm();\n        setVolumeObj(undefined);\n        setIsEditPopupOpen(false);\n        setIsDeletePopupOpen(false);\n        setIsAdd(false);\n    }, []);\n\n    /**\n     * Method used to download csv file of volume list\n     */\n    const onDownloadVolumeCsv = useCallback(() => {\n        APIServices.getList(`${API_BASE_URL}/export-volume-csv`)\n            .then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'volume-list.csv');\n                document.body.appendChild(link);\n                link.click();\n                toast.success(response?.data?.message);\n            })\n            .catch((err) => {\n                toast.error(err.message);\n            });\n    }, []);\n\n    /**\n     * Method that provides the add new button to breadcrumb\n     * @returns Add new button \n     */\n    const headerActionConst = () => {\n        return (\n            <Button\n                className='btn-normal btn-secondary w-full md:w-[140px] whitespace-nowrap lg:h-[50px]'\n                type='button'\n                onClick={onAddVolume}\n                label={t('Add New')}\n            />\n        )\n    };\n    const initialValues = {\n        type:'',\n        volumeData: {\n            volume: '',\n            volume_cubic_yard: ''\n        }\n    }\n\n    /**\n     * Method used to validate form \n     */\n    const formik = useFormik({\n        initialValues,\n        validationSchema: createVolumeValidationSchema,\n        onSubmit: (values) => {\n            if(values?.type===Events.add){\n                createVolume({\n                    variables:\n                    {\n                        volumeData:\n                        {\n                            volume: values?.volumeData?.volume,\n                            volume_cubic_yard: Number(values?.volumeData?.volume_cubic_yard)\n                        }\n                    }\n                })\n                    .then((res) => {\n                        toast.success(res?.data?.createVolume?.message);\n                        refetchVolumeListData(filterData).catch((err) => toast.error(err.networkError.result.errors[0].message));\n                        onClose();\n                    })\n                    .catch((err) => toast.error(err.networkError.result.errors[0].message))\n            }\n            if(values?.type===Events.edit){\n                editVolume({\n                    variables:\n                    {\n                        volumeData:\n                        {\n                            volume_id:volumeObj?.uuid,\n                            volume: values?.volumeData?.volume,\n                            volume_cubic_yard: Number(values?.volumeData?.volume_cubic_yard)\n                        }\n                    }\n                })\n                    .then((res) => {\n                        toast.success(res?.data?.updateVolume?.message);\n                        refetchVolumeListData(filterData).catch((err) => toast.error(err.networkError.result.errors[0].message));\n                        onClose();\n                    })\n                    .catch((err) => toast.error(err.networkError.result.errors[0].message))\n            }\n        }\n    })\n\n    const OnBlurVolume = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n        formik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n    }, []);\n    \n    /**\n     * Method used to open edit warning popup\n     */\n    const onEditVolume = useCallback(()=>{\n        setIsEditPopupOpen(true);\n    },[]);\n\n    /**\n     * Method used to open delete popup\n     */\n    const onDeleteVolume = useCallback(()=>{\n        setIsDeletePopupOpen(true);\n    },[]);\n\n    /**\n     * Method used to open edit popup\n     */\n    const editVolumeData =useCallback(()=>{\n       if(volumeObj){\n        formik.setValues({type:Events.edit,volumeData: {\n            volume: volumeObj?.volume,\n            volume_cubic_yard: volumeObj?.volume_cubic_yard.toString() \n        }});\n       }\n       setIsEditPopupOpen(false);\n       setIsAdd(true);\n    },[volumeObj]);\n\n    /**\n     * Method used to delete volume\n     */\n    const deleteVolumeData =useCallback(()=>{\n        if(volumeObj?.uuid){\n            deleteVolume({variables:{volumeId:volumeObj?.uuid}}).then((res) => {\n                toast.success(res?.data?.deleteVolume?.message);\n                refetchVolumeListData(filterData).catch((err) => toast.error(err.networkError.result.errors[0].message));\n                setIsDeletePopupOpen(false);\n            })\n            .catch((err) => toast.error(err.networkError.result.errors[0].message))\n        }\n     },[volumeObj]);\n\n    return (\n        <>\n            <UpdatedHeader headerActionConst={headerActionConst} />\n            <div className='mb-3 bg-white rounded-xl overflow-auto border border-[#c8ced3] mx-7 p-3 md:p-5'>\n                <div className='flex flex-col justify-between gap-3 mb-3 md:gap-5 md:mb-5 btn-group md:flex-row'>\n                    <h6 className='w-full leading-7 xmd:w-auto'>{t('Volume List')}</h6>\n                    <div className='w-full flex flex-wrap gap-y-3 gap-x-4 2xl:gap-5 md:w-auto'>\n                        <TextInput\n                            type='text'\n                            id='table-search'\n                            value={filterData.search}\n                            placeholder={t('Search')}\n                            onChange={onSearchVolume}\n                            inputIcon={<Search fontSize='18' className='font-normal' />}\n                        />\n                        <button className=\"w-full btn btn-gray sm:w-[260px] p-3.5\" onClick={() => onDownloadVolumeCsv()} title={`${t('Export')}`} >\n                            Export Volume List  <ImportDoc className='order-2 ml-auto' />\n                        </button>\n                    </div>\n                </div>\n                <div className='w-full mb-3 overflow-auto bg-white border sm:w-auto rounded-t-xl custom-dataTable border-border-primary'>\n                    <table>\n                        <thead key='sorting'>\n                            <tr>\n                                {COL_ARR_VOLUME_MANAGEMENT?.map((colValUser: ColArrType) => {\n                                    return (\n                                        <th scope='col' key={colValUser.name}>\n                                            <div className={'flex justify-center'}>\n                                                {colValUser.name}\n                                                {colValUser.sortable && (\n                                                    <button\n                                                        onClick={() => onHandleSortVolume(colValUser.fieldName)}\n                                                    >\n                                                        {(filterData.sortOrder === '' || filterData.sortField !== colValUser.fieldName) &&\n                                                            <GetDefaultIcon className='w-3 h-3 ml-1 fill-white' />}\n                                                        {filterData.sortOrder === 'ascend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingUp className=\"ml-1 fill-white\" />}\n                                                        {filterData.sortOrder === 'descend' && filterData.sortField === colValUser.fieldName &&\n                                                            <ArrowSortingDown className=\"ml-1 fill-white\" />}\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </th>\n                                    );\n                                })}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data?.getVolumesWithPagination?.data?.volumes?.map((data: VolumesDataRes, index: number) => {\n                                const displayIndex = filterData?.index + index + 1;\n                                return (\n                                    <tr key={data.uuid}>\n                                        <td scope='row' className='text-center'>\n                                            {displayIndex}\n                                        </td>\n                                        <td className='text-center'>{data.volume}</td>\n                                        <td className='text-center'>{data.volume_cubic_yard}</td>\n                                        <td>\n                                            <div className='btn-group'>\n                                                <EditBtnPopup data={data} setData={setVolumeObj} onClick={() => onEditVolume()} />\n                                                <DeleteBtn data={data} setObj={setVolumeObj} customClick={onDeleteVolume} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                    {(data?.getVolumesWithPagination?.data?.count === 0 ||\n                        data?.getVolumesWithPagination?.data === null) && (\n                            <div className='flex justify-center'>\n                                <div>{t('No Data')}</div>\n                            </div>\n                        )}\n                </div>\n                <div className='flex flex-wrap items-center mt-2'>\n                    <div className='flex items-center mr-3 md:mr-7'>\n                        <span className='text-sm font-normal text-gray-700 whitespace-nowrap '>\n                            {t('Per Page')}\n                        </span>\n                        <select value={filterData.limit} className='border border-border-primary rounded-xl ml-2 px-3 text-sm py-1.5 text-gray-500 w-[70px] h-[36px] appearance-none bg-white'\n                            onChange={(e) => onPageDrpSelectVolume(e.target.value)}\n                        >\n                            {SHOW_PAGE_COUNT_ARR?.map((item: number) => {\n                                return <option key={item}>{item}</option>;\n                            })}\n                        </select>\n                    </div>\n                    <Pagination\n                        currentPage={filterData.page}\n                        totalPages={totalPages}\n                        onPageChange={handlePageChange}\n                        recordsPerPage={recordsPerPage}\n                    />\n                </div>\n                {isAdd && <div key=\"addPopUp\" id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isAdd ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className=\"flex items-center justify-center h-full py-5 transition-all duration-300\">\n                        <div className='w-full mx-5 sm:max-w-[780px]'>\n                            {/* <!-- Modal content --> */}\n                            <div className='relative bg-white rounded-xl'>\n                                {/* <!-- Modal header --> */}\n                                <div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                                    <p className='text-lg font-bold md:text-xl text-baseColor'>{formik?.values?.type===Events.edit ?'Edit Volume':'Add New Volume'}</p>\n                                    <Button onClick={() => onClose()} label={t('')} title={`${t('Close')}`} >\n                                        <span className='text-xl-22'><Cross className='text-error' /></span>\n                                    </Button>\n                                </div>\n                                {/* <!-- Modal body --> */}\n                                <div className='w-full'>\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <div className='p-5 max-h-[calc(100vh-260px)] overflow-auto grid grid-cols-1 gap-4 sm:grid-cols-2'>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <TextInput\n                                                    type='text'\n                                                    id='volume'\n                                                    name='volumeData.volume'\n                                                    label={t('Volume Title')}\n                                                    value={formik.values.volumeData.volume}\n                                                    placeholder={t('Volume Title')}\n                                                    onChange={formik.handleChange}\n                                                    onBlur={OnBlurVolume}\n                                                    required={true}\n                                                    error={formik?.errors?.volumeData?.volume && formik?.touched?.volumeData?.volume && formik?.errors?.volumeData?.volume}\n                                                />\n                                            </div>\n                                            <div className='max-sm:mb-3  sm:inline-block col-span-1'>\n                                                <TextInput\n                                                    type='text'\n                                                    id='volume'\n                                                    name='volumeData.volume_cubic_yard'\n                                                    label={t('Add Volume (Cubic Yard)')}\n                                                    value={formik.values.volumeData.volume_cubic_yard}\n                                                    placeholder={t('Volume (Cubic Yard)')}\n                                                    onChange={formik.handleChange}\n                                                    required={true}\n                                                    onBlur={OnBlurVolume}\n                                                    error={formik?.errors?.volumeData?.volume_cubic_yard && formik?.touched?.volumeData?.volume_cubic_yard && formik?.errors?.volumeData?.volume_cubic_yard}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                            {<Button className={'btn-primary btn-normal w-full md:w-auto min-w-[160px]'} type='submit'\n                                                label={formik?.values?.type===Events.edit?t('Update'): t('Create')}\n                                                disabled={createVolumeLoadingState||editVolumeLoadingState}\n                                                title={`${t('Create')}`}\n                                            />}\n\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n                {(isEditPopupOpen) && (\n                    <CommonModel\n                        warningText={EDIT_WARNING_TEXT}\n                        onClose={onClose}\n                        action={editVolumeData}\n                        show={isEditPopupOpen}\n                        disabled={editVolumeLoadingState}\n                         />\n                )}\n                 {(isDeletePopupOpen) && (\n                    <CommonModel\n                        warningText={DELETE_WARNING_TEXT}\n                        onClose={onClose}\n                        action={deleteVolumeData}\n                        show={isDeletePopupOpen}\n                        disabled={deleteVolumeLoadingState}\n                         />\n                )}\n            </div>\n        </>);\n}\n\nexport default VolumeManagement"],"names":["Breadcrumb","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","location","useLocation","uuid","URLSearchParams","search","get","id","useParams","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","moduleName","pathname","_pathname$split$","modulePath","split","includes","forEach","i","_i$","toUpperCase","slice","_pathname$split$2$","thirdLevelLink","replace","splitPathName","length","substring","join","_data$","removeID","_data$2","urlArray","breadcrumbLinks","useCallback","_jsx","className","children","concat","_jsxs","_Fragment","NavLink","to","ROUTES","app","uuidData","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","React","_ref","onClick","setData","Button","editRedirection","label","title","Edit","onClose","action","show","warningText","disabled","isLoading","addClass","setAddClass","useState","useEffect","setTimeout","tabIndex","Info","fontSize","Cross","Info2","Cross2","setObj","setIsDelete","customClick","deleteData","Trash","headerActionConst","headerTitle","dispatch","useDispatch","coursesManagement","OnClickHandler","setShow","HamburgerMenu","onRenderJsxElement","GET_VOLUME_WITH_PAGINATION","gql","_templateObject","_taggedTemplateLiteral","GET_VOLUMES","_templateObject2","CREATE_VOLUME","EDIT_VOLUME","DELETE_VOLUME","_templateObject3","VolumeManagement","_data$getVolumesWithP","_data$getVolumesWithP2","_data$getVolumesWithP3","_data$getVolumesWithP4","_data$getVolumesWithP5","_data$getVolumesWithP6","_data$getVolumesWithP7","_data$getVolumesWithP8","_formik$values","_formik$errors","_formik$errors$volume","_formik$touched","_formik$touched$volum","_formik$errors2","_formik$errors2$volum","_formik$errors3","_formik$errors3$volum","_formik$touched2","_formik$touched2$volu","_formik$errors4","_formik$errors4$volum","_formik$values2","COL_ARR_VOLUME_MANAGEMENT","name","sortable","fieldName","filterData","setFilterData","limit","PAGE_LIMIT","page","PAGE_NUMBER","sortOrder","sortField","index","createVolumeValidationSchema","useValidation","isAdd","setIsAdd","isEditPopupOpen","setIsEditPopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","volumeObj","setVolumeObj","recordsPerPage","setRecordsPerPage","refetch","refetchVolumeListData","useQuery","fetchPolicy","variables","createVolume","loading","createVolumeLoadingState","useMutation","editVolume","editVolumeLoadingState","deleteVolume","deleteVolumeLoadingState","catch","err","toast","error","networkError","result","errors","message","totalVolumesListCount","getVolumesWithPagination","count","totalPages","Math","ceil","handlePageChange","newPage","updatedFilterData","filterServiceProps","saveState","JSON","stringify","onSearchVolume","e","target","value","onAddVolume","formik","setFieldValue","Events","add","resetForm","undefined","onDownloadVolumeCsv","APIServices","getList","API_BASE_URL","then","response","_response$data","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","success","useFormik","initialValues","type","volumeData","volume","volume_cubic_yard","validationSchema","onSubmit","values","_values$volumeData","_values$volumeData2","_values$volumeData3","_values$volumeData4","Number","res","_res$data","_res$data$createVolum","edit","volume_id","_res$data2","_res$data2$updateVolu","updateVolume","OnBlurVolume","whiteSpaceRemover","onEditVolume","onDeleteVolume","editVolumeData","setValues","toString","deleteVolumeData","volumeId","_res$data3","_res$data3$deleteVolu","UpdatedHeader","TextInput","placeholder","onChange","inputIcon","Search","ImportDoc","map","colValUser","scope","onHandleSortVolume","sortFieldName","GetDefaultIcon","ArrowSortingUp","ArrowSortingDown","volumes","displayIndex","EditBtnPopup","DeleteBtn","newLimit","onPageDrpSelectVolume","SHOW_PAGE_COUNT_ARR","item","Pagination","currentPage","onPageChange","handleSubmit","handleChange","onBlur","required","touched","CommonModel","EDIT_WARNING_TEXT","DELETE_WARNING_TEXT"],"sourceRoot":""}