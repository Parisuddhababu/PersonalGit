{"version":3,"file":"static/js/784.ac1e5a94.chunk.js","mappings":"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","sources":["components/button/buttonWithoutLoader.tsx","views/categoryList/allCoursesByCategory.tsx"],"sourcesContent":["import React from 'react';\nimport { ButtonProps } from 'src/types/component';\nconst ButtonWithoutLoader = ({ label, onClick, type = 'button', primary, secondary, warning, className, children, disabled = false, title }: ButtonProps) => {\n\tconst color = React.useMemo(() => {\n\t\tif (primary) {\n\t\t\treturn 'bg-primary';\n\t\t}\n\t\tif (secondary) {\n\t\t\treturn 'bg-secondary';\n\t\t}\n\t\tif (warning) {\n\t\t\treturn 'bg-warning';\n\t\t}\n\n\t\treturn 'bg-default';\n\t}, []);\n\n\treturn (\n\t\t<button className={`btn ${color} ${className} `} type={type} title={title} onClick={onClick} disabled={disabled}>\n\t\t\t{children}\n\t\t\t{label}\t\t\t\n\t\t</button>\n\t);\n};\n\nexport default React.memo(ButtonWithoutLoader);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '@assets/images/login-img.jpg';\nimport profile from '@assets/images/default-user-image.png';\nimport { Clock, InfoIcon, Search } from '@components/icons/icons';\nimport Button from '@components/button/button';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTES, USER_TYPE, convertMinutesToHoursAndMinutes } from '@config/constant';\nimport { DropdownOptionType, PaginationParamsCourseByCategory } from '@types';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserProfileType, UserRoles } from 'src/types/common';\nimport { toast } from 'react-toastify';\nimport { GET_COURSE_BY_CATEGORY } from '@framework/graphql/queries/getCourses';\nimport LoadingIndicator from '@components/loadingIndicator/loaderIndicator';\nimport { setResetAllCoursesData } from 'src/redux/courses-management-slice';\nimport ButtonWithoutLoader from '@components/button/buttonWithoutLoader';\nimport { CourseData } from 'src/types/courseTemplate';\nimport TextInput from '@components/textInput/TextInput';\n\nconst AllCoursesByCategory = () => {\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const queryParams = new URLSearchParams(location.search);\n    const selectedCategoryId = queryParams.get('category_uuid');\n    const { data: getCourseData, refetch, loading } = useQuery(GET_COURSE_BY_CATEGORY, {\n        variables: {\n            filterData: {\n                limit: 8,\n                page: 1,\n                sortField: 'createdAt',\n                sortOrder: 'descend',\n                search: '',\n                categoryId: selectedCategoryId,\n            }\n        },\n        fetchPolicy: 'network-only',\n        skip: !selectedCategoryId\n    });\n    const [filterData, setFilterData] = useState<PaginationParamsCourseByCategory>({\n        limit: 8,\n        page: 1,\n        sortField: 'createdAt',\n        sortOrder: 'descend',\n        search: '',\n        categoryId: selectedCategoryId ?? '',\n    });\n    const [onViewMore, setOnViewMore] = useState<boolean>(false);\n    const [isRefetching, setIsRefetching] = useState<boolean>(false);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [isTemplateData, setIsTemplateData] = useState<any[]>([]);\n    const { templates } = useSelector(((state: { rolesManagement: { templates: UserRoles } }) => state.rolesManagement));\n    const { userProfileData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n    const userType = userProfileData?.getProfile?.data?.user_type ?? '';\n    const isCreator = userProfileData?.getProfile?.data?.is_course_creator;\n    useEffect(() => {\n        const tempDataArr: DropdownOptionType[] = [];\n        getCourseData?.getCategoryWiseCourses?.data?.courses?.map((data: CourseData) => {\n            tempDataArr.push(data);\n        });\n        if (onViewMore) {\n            setIsTemplateData([...isTemplateData, ...tempDataArr]);\n            setOnViewMore(onViewMore ?? !onViewMore);\n        } else {\n            setIsTemplateData(tempDataArr);\n        }\n    }, [getCourseData]);\n\n    const onCourseView = (uuid: string) => {\n        navigate(`/${ROUTES.app}/${ROUTES.tfsCoursesTemplates}/${ROUTES.courseDetails}/?uuid=${uuid}`)\n    }\n\n    const viewMore = () => {\n        setOnViewMore(true);\n        setFilterData({\n            ...filterData,\n            page: filterData.page + 1,\n        });\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsRefetching(true);\n            try {\n                await refetch({\n                    filterData: { ...filterData },\n                });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            } catch (error: any) {\n                toast.error(error?.networkError?.result?.errors?.[0]?.message)\n            } finally {\n                setIsRefetching(false);\n                setOnViewMore(onViewMore ?? !onViewMore);\n            }\n        };\n        if (filterData) {\n            fetchData();\n        }\n    }, [filterData]);\n\n    const onNavigateCreateCourse = useCallback(() => {\n        dispatch(setResetAllCoursesData());\n        navigate(`/${ROUTES.app}/${ROUTES.educationAndEngagement}`)\n    }, [])\n\n    const headerActionConst = () => {\n        if (templates?.write && [USER_TYPE?.SUPER_ADMIN, USER_TYPE?.SUBSCRIBER_ADMIN].includes(userType)) {\n            return (\n                <>\n                    {\n                        <Button label='+ Create Course' className='btn-primary  btn-normal md:w-[150px] whitespace-nowrap' onClick={() => onNavigateCreateCourse()} title='Create Course'>\n                        </Button>\n                    }\n                </>\n            )\n        }\n        if (isCreator) {\n            return (\n                <>\n                    {\n                        <Button label='+ Create Course' className='btn-primary  btn-normal md:w-[150px] whitespace-nowrap' onClick={() => onNavigateCreateCourse()} title='Create Course'>\n                        </Button>\n                    }\n                </>\n            )\n        }\n    }\n\n\n    /**\n       *\n       * @param e Method used for store search value\n       */\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterData({ ...filterData, search: e.target.value })\n    }, [filterData])\n\n    const viewIsEditableCategory = (data: CourseData) => {\n        return [USER_TYPE?.SUPER_ADMIN, USER_TYPE?.SUBSCRIBER_ADMIN].includes(+data?.created_by?.user_type) || userProfileData?.getProfile?.data?.is_course_admin || userProfileData?.getProfile?.data?.is_course_creator\n    }\n    return (\n        <>\n            <UpdatedHeader headerActionConst={headerActionConst} />\n            <div className='mb-7'>\n                <div className='p-5 border border-solid border-border-primary rounded-xl'>\n                    <div className=\"flex flex-wrap gap-3 mb-5 justify-between md:gap-5\">\n                        <h6>{t('Category All Courses')}</h6>\n                        <TextInput placeholder={t('Search')} type='text' id='table-search' value={filterData.search} onChange={handleChange} inputIcon={<Search fontSize='18' />} />\n                    </div>\n\n                    {(loading || (isRefetching && !onViewMore)) ? <LoadingIndicator /> :\n                        <>\n                            <div className=\"flex items-start flex-wrap justify-center gap-5 mb-7 sm:justify-start\">\n                                {getCourseData?.getCategoryWiseCourses?.data?.count > 0 ? <>\n                                    {isTemplateData?.map((data: CourseData) => (\n                                        <div className='w-full text-left xl:w-[calc(33.3%-15px)] 2xl:w-[calc(25%-15px)]  lg:w-[calc(50%-15px)] border-border-primary h-full rounded-t-xl' key={data?.uuid}>\n                                            <picture className='w-full block relative border-b border-solid border-border-primary'>\n                                                <img src={(!data.course_image || data.course_image === '') ? logo : `${process.env.REACT_APP_IMAGE_BASE_URL}/${data.course_image}`} alt=\"Course Image\" title=\"Course Image\" className='object-cover w-full h-full rounded-t-xl' />\n                                            </picture>\n\n                                            <div className='flex flex-col border-b border-solid w-full p-5 border-x border-border-primary rounded-b-xl min-h-340px'>\n                                                <div className={`${userType !== USER_TYPE.SUBSCRIBER_EMPLOYEE ? 'cursor-pointer' : 'pointer-events-auto'} flex flex-col flex-1`} onClick={() => onCourseView(data.uuid)}>\n                                                    <div className=\"flex-wrap flex justify-between items-center mb-2.5 gap-2\">\n                                                        <div>\n                                                            <span className='h-9 flex items-center justify-center bg-p-list-box-btn font-bold text-white md:mb-0 px-4 rounded-xl min-w-[100px] text-sm mr-4'>{data?.category.name}</span>\n                                                        </div>\n                                                        {viewIsEditableCategory(data) && <div className='relative group'>\n                                                            <InfoIcon className='text-base md:text-lg cursor-pointer fill-primary' />\n                                                            <p className='absolute whitespace-nowrap left-auto shadow-infos p-1.5 md:p-2.5 bg-white border border-border-primary rounded-xl md:right-0 xd:left-1 -top-[68px] md:-top-14 hidden group-hover:inline-block z-10'>{data?.is_editable ? 'Editable Course' : 'Non-Editable Course'}</p>\n                                                        </div>}\n                                                    </div>\n                                                    <h4 className='text-base hover:text-primary mb-2.5 truncate'>{data?.title}</h4>\n                                                    <p className='leading-6 mb-3 md:mb-5 w-full text-ellipsis line-clamp-3 break-words ' dangerouslySetInnerHTML={{ __html: data?.description }}></p>\n                                                    <div className=\"flex flex-wrap justify-between items-center gap-2 mt-auto\">\n                                                        <div className='flex items-center gap-2'>\n                                                            <picture className='w-[40px] h-[40px] flex items-center justify-center rounded-full overflow-hidden border border-solid border-border-primary'>\n                                                                <img src={(!data?.instructor_profile || data?.instructor_profile === '') ? profile : `${process.env.REACT_APP_IMAGE_BASE_URL}/${data?.instructor_profile}`} width={40} height={40} alt=\"profile\" title='profile' className='object-cover w-full h-full' />\n                                                            </picture>\n                                                            <p className='font-semibold'>{data?.instructor_name}</p>\n                                                        </div>\n                                                        <div className=\"time max-xmd:my-2.5\">\n                                                            <span className=\"text-xs flex \"><span className='text-base mr-1 '><Clock className='fill-secondary' /></span><span>{`${convertMinutesToHoursAndMinutes(data?.estimate_time).hours} h ${convertMinutesToHoursAndMinutes(data?.estimate_time).minutes} m`}</span></span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </> : <div>No Records Found!!!</div>}\n                            </div>\n                        </>\n                    }\n                    <div className=\"flex items-center justify-center\">\n                        <ButtonWithoutLoader className='btn-secondary btn-normal w-full md:w-[120px]' label={isRefetching && onViewMore ? t('Loading...!') : t('Load More')} onClick={() => viewMore()} disabled={loading || isRefetching || (getCourseData?.getCategoryWiseCourses?.data?.count === isTemplateData.length)} title={`${t('Load More')}`} />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default AllCoursesByCategory;\n"],"names":["ButtonWithoutLoader","_ref","label","onClick","type","primary","secondary","warning","className","children","disabled","title","color","React","_jsxs","concat","AllCoursesByCategory","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","_userProfileData$getP4","_userProfileData$getP5","_getCourseData$getCat4","_getCourseData$getCat5","_getCourseData$getCat6","_getCourseData$getCat7","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","selectedCategoryId","URLSearchParams","location","search","get","data","getCourseData","refetch","loading","useQuery","GET_COURSE_BY_CATEGORY","variables","filterData","limit","page","sortField","sortOrder","categoryId","fetchPolicy","skip","setFilterData","useState","onViewMore","setOnViewMore","isRefetching","setIsRefetching","isTemplateData","setIsTemplateData","templates","useSelector","state","rolesManagement","userProfileData","userProfile","userType","getProfile","user_type","isCreator","is_course_creator","useEffect","_getCourseData$getCat","_getCourseData$getCat2","_getCourseData$getCat3","tempDataArr","getCategoryWiseCourses","courses","map","push","async","error","_error$networkError","_error$networkError$r","_error$networkError$r2","_error$networkError$r3","toast","networkError","result","errors","message","fetchData","onNavigateCreateCourse","useCallback","setResetAllCoursesData","ROUTES","app","educationAndEngagement","handleChange","e","target","value","viewIsEditableCategory","_data$created_by","_userProfileData$getP6","_userProfileData$getP7","_userProfileData$getP8","_userProfileData$getP9","USER_TYPE","SUPER_ADMIN","SUBSCRIBER_ADMIN","includes","created_by","is_course_admin","_Fragment","_jsx","UpdatedHeader","headerActionConst","write","Button","TextInput","placeholder","id","onChange","inputIcon","Search","fontSize","LoadingIndicator","count","src","course_image","process","logo","alt","SUBSCRIBER_EMPLOYEE","onCourseView","uuid","tfsCoursesTemplates","courseDetails","category","name","InfoIcon","is_editable","dangerouslySetInnerHTML","__html","description","instructor_profile","profile","width","height","instructor_name","Clock","convertMinutesToHoursAndMinutes","estimate_time","hours","minutes","length"],"sourceRoot":""}