{"version":3,"file":"static/js/4127.8a5c4b29.chunk.js","mappings":"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","sources":["services/encryption.tsx","views/login/index.tsx"],"sourcesContent":["import * as CryptoJS from 'crypto-js';\ntype WordArray = CryptoJS.lib.WordArray;\nconst EncryptionFunction = (text: string | WordArray) => {\n\tconst key = process.env.REACT_APP_ENCRYPTION_DECRYPTION_KEY as WordArray | string;\n\treturn CryptoJS.AES.encrypt(JSON.stringify(text), key).toString();\n};\nexport default EncryptionFunction;\n","import React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport LoginImg from '@assets/images/login-img.jpg';\nimport Logo from '@assets/images/logo.png';\nimport { ROUTES,USER_TYPE } from '@config/constant';\nimport Button from '@components/button/button';\nimport { Eye, EyeCrossed } from '@components/icons/icons';\nimport TextInput from '@components/textInput/TextInput';\nimport { LoginResponse } from '@framework/graphql/graphql';\nimport { LOGIN_USER } from '@framework/graphql/mutations/user';\nimport useValidation from '@framework/hooks/validations';\nimport { LoginInput } from 'src/types/views';\nimport EncryptionFunction from 'src/services/encryption';\nimport { useFormik } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport { setIntroductoryPage } from 'src/redux/user-profile-slice';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Login = () => {\n\tconst { t } = useTranslation();\n\tconst [login, loading] = useMutation(LOGIN_USER);\n\tconst navigate = useNavigate();\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst { loginValidationSchema } = useValidation();\n\tconst initialValues: LoginInput = {\n\t\temail: '',\n\t\tpassword: '',\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst formik = useFormik({\n\t\tinitialValues,\n\t\tvalidationSchema: loginValidationSchema,\n\t\tonSubmit: (values) => {\n\t\t\tlogin({\n\t\t\t\tvariables: { login: { email: values.email, password: values.password } },\n\t\t\t})\n\t\t\t\t.then((res) => {\n\n\t\t\t\t\tconst data = res?.data as LoginResponse;\n\t\t\t\t\tlocalStorage.setItem('userId', EncryptionFunction(data?.login?.data?.user?.uuid));\n\t\t\t\t\tlocalStorage.setItem('authToken', EncryptionFunction(data?.login?.data?.token));\n\t\t\t\t\tlocalStorage.setItem('profileName', EncryptionFunction(data?.login?.data?.user?.first_name));\n\t\t\t\t\tlocalStorage.setItem('userType',EncryptionFunction((data?.login?.data?.user?.user_type)?.toString()));\n\t\t\t\t\tif (data?.login?.data?.user?.is_required_reset_password) {\n\t\t\t\t\t\tdispatch(setIntroductoryPage(data?.login?.data?.user?.introductory_page))\n\t\t\t\t\t\treturn navigate(`/${ROUTES.app}/${ROUTES.userProfilePasswordChange}`)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn navigate(NavlinkReturnFunction(data?.login?.data?.user?.user_type,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\ttoast.error(err.networkError.result.errors[0].message);\n\t\t\t\t});\n\t\t},\n\t});\n\n\tconst handleToggleShowPassword = useCallback(() => {\n\t\tsetShowPassword((prevState) => !prevState);\n\t}, []);\n\t\n\treturn (\n\t\t<div className='flex w-full h-screen bg-white nm'>\n\t\t\t<img className='hidden object-cover md:block md:w-1/2' src={LoginImg} alt='LoginImage' title='image' />\n\t\t\t<div className='flex items-center justify-center w-full px-5 md:w-1/2 md:px-12'>\n\t\t\t\t<form className='w-full max-w-[486px] bg-white' onSubmit={formik.handleSubmit}>\n\t\t\t\t\t<img className='max-w-[302px] mb-5 md:mb-7 w-full mx-auto' src={Logo} alt=\"logo\" title='image' />\n\t\t\t\t\t<h1 className='mb-2 text-center md:mb-1 text-primary'>{t('Welcome')}  {':)'}</h1>\n\t\t\t\t\t<h6 className='mb-3 text-center md:mb-5'>{t('Login to Account')}</h6>\n\t\t\t\t\t<div className='mb-3 md:mb-5'>\n\t\t\t\t\t\t<TextInput placeholder={t('Email')} name='email' onChange={formik.handleChange} label={t('Email ID')} value={formik.values.email} error={formik.errors.email} loginInput={true} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='relative mb-5 md:mb-7'>\n\t\t\t\t\t\t<TextInput placeholder='Password' name='password' type={showPassword ? 'text' : 'password'} label={t('Password')} onChange={formik.handleChange} value={formik.values.password} error={formik.errors.password} loginInput={true} />\n\t\t\t\t\t\t<Button onClick={handleToggleShowPassword} className='absolute right-4 top-9 md:top-11' label={''}>\n\t\t\t\t\t\t\t{showPassword ? <Eye /> : <EyeCrossed />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='mb-5 text-right md:mb-7'>\n\t\t\t\t\t\t<a className='inline-block text-sm font-normal align-baseline text-primary hover:text-primary hover:underline hover:cursor-pointer'\n\t\t\t\t\t\t\thref='/forgot-password'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t(' Forgot Password')}?\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button className='w-full btn-primary btn-normal btn-login' type='submit' label={t('Login')} disabled={loading?.loading} title=\"login\"/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Login;\n"],"names":["text","CryptoJS","encrypt","JSON","stringify","process","toString","Login","t","useTranslation","login","loading","useMutation","LOGIN_USER","navigate","useNavigate","showPassword","setShowPassword","useState","loginValidationSchema","useValidation","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","onSubmit","values","variables","then","res","_data$login","_data$login$data","_data$login$data$user","_data$login2","_data$login2$data","_data$login3","_data$login3$data","_data$login3$data$use","_data$login4","_data$login4$data","_data$login4$data$use","_data$login4$data$use2","_data$login5","_data$login5$data","_data$login5$data$use","data","_data$login6","_data$login6$data","_data$login6$data$use","_data$login7","_data$login7$data","_data$login7$data$use","localStorage","setItem","EncryptionFunction","user","uuid","token","first_name","user_type","is_required_reset_password","setIntroductoryPage","introductory_page","concat","ROUTES","app","userProfilePasswordChange","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","catch","err","toast","error","networkError","result","errors","message","handleToggleShowPassword","useCallback","prevState","_jsxs","className","children","_jsx","src","LoginImg","alt","title","handleSubmit","Logo","TextInput","placeholder","name","onChange","handleChange","label","value","loginInput","type","Button","onClick","Eye","EyeCrossed","href","disabled"],"sourceRoot":""}