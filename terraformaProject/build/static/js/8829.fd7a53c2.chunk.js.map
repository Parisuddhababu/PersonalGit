{"version":3,"file":"static/js/8829.fd7a53c2.chunk.js","mappings":"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","sources":["components/breadcrumb/breadcrumb.tsx","components/common/loader.tsx","components/header/updatedHeader.tsx","framework/graphql/mutations/announcement.ts","framework/graphql/queries/announcement.ts","views/announcement/index.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\nimport { NavlinkReturnFunction } from '@utils/helpers';\n\nconst Breadcrumb = () => {\n\tconst { t } = useTranslation();\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst uuid = queryParams.get('uuid');\n\tconst { id } = useParams();\n\tconst { userProfileData } = useSelector(\n\t\t(state: { userProfile: { userProfileData: UserProfileType; } }) => state.userProfile,\n\t);\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? '';\n\n\t\n\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2]?.includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0]?.toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0]?.toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst thirdLevelLink = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\tmodulePath = data?.replace(/-|\\s/g, ' ');\n\t\t\tconst splitPathName = modulePath.split(' ');\n\t\t\tfor (let i = 0; i < splitPathName.length; i++) {\n\t\t\t\tsplitPathName[i] = splitPathName[i][0].toUpperCase() + splitPathName[i].substring(1); // Use substring instead of substr\n\t\t\t}\n\t\t\tmodulePath = splitPathName.join(' ');\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' '; // Using slice as you did previously\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst removeID = (data: string) => {\n\t\tlet modulePath = '';\n\t\tif (data?.includes('-')) {\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = data?.[0]?.toUpperCase() + (data?.slice(1)) + ' ';\n\t\t\treturn modulePath;\n\t\t}\n\t}\n\n\tconst urlArray = location.pathname.split('/');\n\n\tconst breadcrumbLinks = useCallback(() => {\n\t\tif (urlArray?.length > 0) {\n\t\t\tconst length = urlArray?.length\n\t\t\tif (length < 4) {\n\t\t\t\treturn (\n\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t</span>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 5) {\n\t\t\t\tif (urlArray[3] !== '') {\n\t\t\t\t\tif (urlArray[3].length > 32) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{removeID(urlArray[3]) && <span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t{!removeID(urlArray[3]) &&\n\t\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(removeID(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[2] && `${t(thirdLevelLink(urlArray[2]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 6) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{`${t(moduleName(location.pathname))}`}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[3] && `${t(thirdLevelLink(urlArray[3]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (length < 7) {\n\t\t\t\tlet uuidData = ''\n\t\t\t\tif (uuid) {\n\t\t\t\t\tuuidData = `?uuid=${uuid}`;\n\t\t\t\t} else if (id) {\n\t\t\t\t\tuuidData = `?uuid=${id}`;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[2]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t<NavLink to={`/${ROUTES.app}/${urlArray[2]}/${urlArray[3]}/${(uuid !== '' || id !== '') && uuidData}`} className='text-light-grey hover:underline'>{t(thirdLevelLink(urlArray[3]))}</NavLink>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='mx-2 text-light-grey'>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className='text-primary'>\n\t\t\t\t\t\t\t{urlArray[5] && `${t(thirdLevelLink(urlArray[4]))}`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}, [urlArray]);\n\n\treturn (\n\t\t<div className='w-full'>\n\t\t\t<p className='max-xs:text-xs text-xs-14 max-md:truncate'>\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`)} className='cursor-pointer text-light-grey hover:underline'>\n\t\t\t\t\t\t{t('Home')}\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<span className='mx-2 text-light-grey'>{'>'}</span>\n\t\t\t\t</span>\n\n\t\t\t\t{breadcrumbLinks()}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Breadcrumb);\n","import React from 'react'\n\nfunction Loader() {\n\n    return (\n        <div className='w-12 h-12 mx-auto rounded-[50%] border-solid border-4 border-[#E8E8EA] border-r-[#2575d6] animate-spin absolute left-[58%] top-[40%] z-[9999]'></div>\n    )\n}\n\nexport default Loader\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport Breadcrumb from '@components/breadcrumb/breadcrumb';\nimport { HamburgerMenu } from '@components/icons/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShow } from 'src/redux/courses-management-slice';\n\ninterface UpdatedHeaderProps {\n\theaderActionConst?: any,\n\theaderTitle?: string,\n}\n\nconst UpdatedHeader = ({ headerActionConst, headerTitle }: UpdatedHeaderProps) => {\n\tconst { t } = useTranslation();\n\tconst dispatch = useDispatch();\n\tconst { show } = useSelector(((state: { coursesManagement: { show: boolean } }) => state.coursesManagement));\n\n\tconst location = useLocation();\n\t/**method that coverts the path name as our desired way  */\n\tconst moduleName = (pathname: string) => {\n\t\tlet modulePath = '';\n\t\tif (pathname.split('/')[2].includes('-')) {\n\t\t\tconst path = pathname.split('/')[2].split('-');\n\t\t\tpath.forEach((i: string) => {\n\t\t\t\tmodulePath = modulePath + i[0].toUpperCase() + i.slice(1) + ' ';\n\t\t\t\treturn modulePath;\n\t\t\t});\n\t\t\treturn modulePath;\n\t\t} else {\n\t\t\tmodulePath = pathname.split('/')[2][0].toUpperCase() + pathname.split('/')[2].slice(1);\n\t\t\treturn modulePath;\n\t\t}\n\t};\n\n\tconst onRenderJsxElement = () => {\n\t\tif (headerActionConst) {\n\t\t\treturn (headerActionConst())\n\t\t}\n\t}\n\n\tconst OnClickHandler = useCallback(() => {\n\t\tdispatch(setShow(!show))\n\t}, [show]);\n\n\treturn (\n\t\t<header className='sticky top-0 z-20 flex bg-white border-b shadow-header xl:shadow-none xl:h-auto xl:block border-border-primary xl:px-2 xl:pt-0'>\n\t\t\t<div onClick={OnClickHandler} className='pt-5 cursor-pointer text-xl-22 xl:hidden'>\n\t\t\t\t<HamburgerMenu className='ml-4' />\n\t\t\t</div>\n\t\t\t<div className='p-2.5 xl:p-[18px] xl:shadow-header max-xl:w-[calc(100%-47px)]'>\n\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-2.5'>\n\t\t\t\t\t<div className='w-full xl:w-auto'>\n\t\t\t\t\t\t<h1 className='mb-1 text-2xl max-xl:truncate xl:text-3xl'>{t(headerTitle ?? moduleName(location.pathname))}</h1>\n\t\t\t\t\t\t<Breadcrumb />\n\t\t\t\t\t</div>\n\t\t\t\t\t{headerActionConst &&\n\t\t\t\t\t\t<div className='flex gap-2.5 max-xl:w-[calc(100%+40px)] lg:gap-5'>\n\t\t\t\t\t\t\t{onRenderJsxElement()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default UpdatedHeader;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_ANNOUNCEMENT = gql`\nmutation CreateAnnouncement($title: String, $description: String, $announcementType: String, $emailAttachment: String, $pushImage: String, $platform: String, $userType: String, $userFilter: String, $userToExclude: [Int], $onlySendTo: [Int], $startDate: Date, $endDate: Date) {\n  createAnnouncement(title: $title, description: $description, announcement_type: $announcementType, email_attachment: $emailAttachment, push_image: $pushImage, platform: $platform, userType: $userType, userFilter: $userFilter, userToExclude: $userToExclude, onlySendTo: $onlySendTo, start_date: $startDate, end_date: $endDate) {\n    data {\n      id\n      uuid\n      user_id\n      title\n      description\n      announcement_type\n      email_attachment\n      push_image\n      platform\n      userType\n      userFilter\n      userToExclude\n      onlySendTo\n      start_date\n      end_date\n      status\n      created_at\n      updated_at\n    }\n    meta {\n      message\n      messageCode\n      statusCode\n      status\n      type\n      errors {\n        errorField\n        error\n      }\n      errorType\n    }\n  }\n}`\n\nexport const UPDATE_READ_ANNOUNCEMENTS_FOR_USER = gql`\n  mutation UpdateReadAnnouncementsForUser {\n    updateReadAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`","import { gql } from '@apollo/client';\n\n  export const GET_ANNOUNCEMENTS = gql `\n  query FetchAnnouncementsWithFilters($page: Int, $limit: Int, $sortBy: String, $sortOrder: String, $title: String, $startDate: String, $endDate: String, $announcementType: String, $platform: String, $status: Int) {\n    fetchAnnouncementsWithFilters(page: $page, limit: $limit, sortBy: $sortBy, sortOrder: $sortOrder, title: $title, start_date: $startDate, end_date: $endDate, announcement_type: $announcementType, platform: $platform, status: $status) {\n      data {\n        announcementData {\n          id\n          uuid\n          user_id\n          title\n          description\n          announcement_type\n          email_attachment\n          push_image\n          platform\n          userType\n          userFilter\n          userToExclude\n          onlySendTo\n          start_date\n          end_date\n          status\n          created_at\n          updated_at\n        }\n        count\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n        type\n        errors {\n          errorField\n          error\n        }\n        errorType\n      }\n    }\n  }`\n\n\n\n\nexport const GET_USER = gql `\nquery GetUsersWithPagination($page: Int, $limit: Int, $sortBy: String, $sortOrder: String, $firstName: String, $lastName: String, $email: String, $status: Int, $gender: Int, $phoneNo: String) {\n  getUsersWithPagination(page: $page, limit: $limit, sortBy: $sortBy, sortOrder: $sortOrder, first_name: $firstName, last_name: $lastName, email: $email, status: $status, gender: $gender, phone_no: $phoneNo) {\n    data {\n      userList {\n        id\n        uuid\n        first_name\n        middle_name\n        last_name\n        user_name\n        email\n        gender\n        date_of_birth\n        phone_no\n        phone_country_id\n        role\n        profile_img\n        device_type\n        status\n        user_role_id\n        created_at\n        updated_at\n      }\n      count\n    }\n    meta {\n      message\n      messageCode\n      statusCode\n      status\n      type\n      errors {\n        errorField\n        error\n      }\n      errorType\n    }\n  }\n}\n`\n\nexport const GET_ANNOUNCEMENT_HISTORY_FOR_USER = gql`\n  query GetAnnouncementHistoryForUser($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getAnnouncementHistoryForUser(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENTS_FOR_USERS = gql`\n  query GetAnnouncementsForUser {\n    getAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENT_BY_ID = gql `\n  query GetAnnouncementById($announcementId: String!) {\n    getAnnouncementById(announcementId: $announcementId) {\n      message\n      data {\n        title\n        uuid\n        description\n        createdAt\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENTS_FOR_USER = gql`\n  query GetAnnouncementsForUser {\n    getAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n        }\n        count\n      }\n    }\n  }\n`","import UpdatedHeader from '@components/header/updatedHeader';\nimport React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { DateTime12Format, DateYearFormat, ROUTES } from '@config/constant';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ANNOUNCEMENTS_FOR_USERS } from '@framework/graphql/queries/announcement';\nimport { UPDATE_READ_ANNOUNCEMENTS_FOR_USER } from '@framework/graphql/mutations/announcement';\nimport Loader from '@components/common/loader';\n\nconst Announcement = () => {\n\tconst { t } = useTranslation();\n\tconst navigate = useNavigate();\n\tconst [readAnnouncementForUser] = useMutation(UPDATE_READ_ANNOUNCEMENTS_FOR_USER);\n\tconst { data, loading } = useQuery(GET_ANNOUNCEMENTS_FOR_USERS);\n\n\tconst sysAlert = useCallback((id: string) => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.ticketsList}/system-alert/${id}`)\n\t}, [])\n\n\tuseEffect(() => {\n\t\treadAnnouncementForUser();\t\t\t\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <Loader />}\n\t\t\t<UpdatedHeader headerTitle='Announcements' />\n\t\t\t<div className='mb-5 overflow-auto border border-solid rounded-t-xl border-border-primary md:mb-7'>\n\t\t\t\t<table className='m-0 [&>tbody>tr:nth-child(even)]:bg-white [&>tbody>tr:nth-child(even):hover]:bg-gray-200 text-sm md:text-base leading-5 normal-table'>\n\t\t\t\t\t<thead className='text-lg md:text-xl'>\n\t\t\t\t\t\t<tr className='border-none bg-accents-2'>\n\t\t\t\t\t\t\t<th className='p-4 md:p-5 text-baseColor min-w-[115px] 2xl:min-w-[156px]'>{t('Time')}</th>\n\t\t\t\t\t\t\t<th className='p-4 md:p-5 text-baseColor min-w-[145px] 2xl:min-w-[164px]'>{t('Date')}</th>\n\t\t\t\t\t\t\t<th className='p-4 md:p-5 text-baseColor min-w-[566px]'>{t('Announcement')}</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t{data?.getAnnouncementsForUser?.data?.count > 0 && <tbody className='text-baseColor'>\n\t\t\t\t\t\t{data?.getAnnouncementsForUser?.data?.announcements?.map((announcementData: { uuid: string, createdAt: string, title: string, description: string }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr className='border-b border-solid border-border-primary last:border-none hover:cursor-pointer' onClick={() => sysAlert(announcementData?.uuid)} key={announcementData?.uuid}>\n\t\t\t\t\t\t\t\t\t<td className='px-4 py-3 text-left md:p-5'>\n\t\t\t\t\t\t\t\t\t\t<p>{DateTime12Format(announcementData?.createdAt)}</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td className='px-4 py-3 text-left md:p-5'>\n\t\t\t\t\t\t\t\t\t\t<p>{DateYearFormat(announcementData?.createdAt)}</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td className=\"px-4 py-3 md:p-5\">\n\t\t\t\t\t\t\t\t\t\t<div className='text-left'>\n\t\t\t\t\t\t\t\t\t\t\t<strong className='block mb-1'>{t(announcementData?.title)}</strong>\n\t\t\t\t\t\t\t\t\t\t\t<p dangerouslySetInnerHTML={{ __html: announcementData?.description }}></p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>}\n\t\t\t\t</table>\n\t\t\t\t{data?.getAnnouncementsForUser?.data?.count === 0 &&\n\t\t\t\t\t<p className='p-5 flex items-center justify-center w-full'>No data found...!</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\n\t);\n};\nexport default Announcement;\n"],"names":["Breadcrumb","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","location","useLocation","uuid","URLSearchParams","search","get","id","useParams","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","moduleName","pathname","_pathname$split$","modulePath","split","includes","forEach","i","_i$","toUpperCase","slice","_pathname$split$2$","thirdLevelLink","replace","splitPathName","length","substring","join","_data$","removeID","_data$2","urlArray","breadcrumbLinks","useCallback","_jsx","className","children","concat","_jsxs","_Fragment","NavLink","to","ROUTES","app","uuidData","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","dashboard","subscriber","React","_ref","headerActionConst","headerTitle","dispatch","useDispatch","show","coursesManagement","OnClickHandler","setShow","onClick","HamburgerMenu","onRenderJsxElement","CREATE_ANNOUNCEMENT","gql","_templateObject","_taggedTemplateLiteral","UPDATE_READ_ANNOUNCEMENTS_FOR_USER","_templateObject2","GET_USER","GET_ANNOUNCEMENTS_FOR_USERS","_templateObject3","_templateObject4","GET_ANNOUNCEMENT_BY_ID","_templateObject5","_templateObject6","Announcement","_data$getAnnouncement","_data$getAnnouncement2","_data$getAnnouncement3","_data$getAnnouncement4","_data$getAnnouncement5","_data$getAnnouncement6","_data$getAnnouncement7","navigate","useNavigate","readAnnouncementForUser","useMutation","loading","useQuery","sysAlert","ticketsList","useEffect","Loader","UpdatedHeader","getAnnouncementsForUser","count","announcements","map","announcementData","DateTime12Format","createdAt","DateYearFormat","title","dangerouslySetInnerHTML","__html","description"],"sourceRoot":""}