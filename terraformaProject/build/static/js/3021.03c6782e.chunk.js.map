{"version":3,"file":"static/js/3021.03c6782e.chunk.js","mappings":"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","sources":["framework/graphql/mutations/forgotpassword.ts","views/adminProfile/changeProfilePassword.tsx"],"sourcesContent":["import { gql } from '@apollo/client'\nexport const IS_REQUIRED_PASSWORD_CHANGE = gql`\nmutation ChangePassword($userData: ChangePasswordDto!) {\n    changePassword(userData: $userData) {\n      message\n    }\n  }\n`\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nimport { ROUTES, USER_TYPE } from '@config/constant';\nimport Button from '@components/button/button';\nimport TextInput from '@components/textInput/TextInput';\nimport { Eye, EyeCrossed } from '@components/icons/icons';\nimport { useFormik } from 'formik';\nimport useValidation from '@framework/hooks/validations';\nimport { NavlinkReturnFunction, whiteSpaceRemover } from '@utils/helpers';\nimport LoginImg from '@assets/images/login-img.jpg';\nimport Logo from '@assets/images/logo.png';\n\nimport { useMutation } from '@apollo/client';\nimport { IS_REQUIRED_PASSWORD_CHANGE } from '@framework/graphql/mutations/forgotpassword';\nimport { useSelector } from 'react-redux';\nimport { UserProfileType } from 'src/types/common';\n\nconst UserProfilePasswordChange = () => {\n\tconst { t } = useTranslation();\n\tconst navigate = useNavigate();\n\tconst [changePassword] = useMutation(IS_REQUIRED_PASSWORD_CHANGE);\n\tconst [showOldPassword, setShowOldPassword] = useState(false);\n\tconst [showNewPassword, setShowNewPassword] = useState(false);\n\tconst [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\tconst { changePasswordValidationSchema } = useValidation();\n\tconst { userProfileData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? ''\n\tconst initialValues = {\n\t\toldPassword: '',\n\t\tnewPassword: '',\n\t\tconfirmPassword: '',\n\t};\n\tconst { isIntroductoryPage } = useSelector(((state: { userProfile: { isIntroductoryPage: boolean | string } }) => state.userProfile));\n\tconst cancelPassWordHandler = useCallback(() => {\n\t\tnavigate(NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`));\n\t}, []);\n\n\n\tconst formik = useFormik({\n\t\tinitialValues,\n\t\tvalidationSchema: changePasswordValidationSchema,\n\t\tonSubmit: (values) => {\n\t\t\tchangePassword({\n\t\t\t\tvariables: {\n\t\t\t\t\tuserData: {\n\t\t\t\t\t\toldPassword: values.oldPassword,\n\t\t\t\t\t\tnewPassword: values.newPassword,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\ttoast.success(response?.data?.message);\n\t\t\t\t\tif (!isIntroductoryPage && userType === USER_TYPE.SUBSCRIBER_ADMIN) {\n\t\t\t\t\t\treturn navigate(`/${ROUTES.introductory}`)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigate(NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`));\n\t\t\t\t\t}\n\t\t\t\t\tcancelPassWordHandler();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\ttoast.error(error.networkError.result.errors[0].message);\n\t\t\t\t});\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tif (!userProfileData?.getProfile?.data?.is_required_reset_password && userProfileData?.getProfile?.data?.introductory_page && userType !== USER_TYPE.SUBSCRIBER_ADMIN) {\n\t\t\treturn navigate(NavlinkReturnFunction(userType,USER_TYPE.SUPER_ADMIN,`/${ROUTES.app}/${ROUTES.dashboard}`,`/${ROUTES.app}/${ROUTES.subscriber}`))\n\t\t}\n\t\telse if (!userProfileData?.getProfile?.data?.is_required_reset_password && !userProfileData?.getProfile?.data?.introductory_page && userType === USER_TYPE.SUBSCRIBER_ADMIN) {\n\t\t\treturn navigate(`/${ROUTES.introductory}`)\n\t\t}\n\t}, [userProfileData])\n\n\tconst OnBlur = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n\t\tformik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n\t}, []);\n\n\tconst handleShowPassword = useCallback(() => {\n\t\tsetShowOldPassword((prevState) => !prevState);\n\t}, []);\n\n\tconst handleShowNewPassword = useCallback(() => {\n\t\tsetShowNewPassword((prevState) => !prevState);\n\t}, []);\n\n\tconst handleConfirmPassword = useCallback(() => {\n\t\tsetShowConfirmPassword((prevState) => !prevState);\n\t}, []);\n\n\treturn (\n\t\t<div className='flex w-full h-screen bg-white nm'>\n\t\t\t<img className='hidden object-cover md:block md:w-1/2' src={LoginImg} alt='LoginImage' title='loginimage' height={981} width={961} />\n\t\t\t<div className='flex items-center justify-center w-full px-5 md:w-1/2 md:px-12'>\n\t\t\t\t<form className='w-full max-w-[486px] bg-white' onSubmit={formik.handleSubmit}>\n\t\t\t\t\t<picture>\n\t\t\t\t\t\t<img className='max-w-[302px] mb-5 md:mb-[30px] w-full mx-auto' src={Logo} alt=\"logo\" title='logo' height={80} width={302} />\n\t\t\t\t\t</picture>\n\t\t\t\t\t<h1 className='mb-3 text-center md:mb-5 text-primary'>{t('Change Your Password')}</h1>\n\t\t\t\t\t<div className='relative mb-3 md:mb-5'>\n\t\t\t\t\t\t<TextInput required={true} id='oldPassword' onBlur={OnBlur} type={showOldPassword ? 'text' : 'password'} label={t('Current Password')} value={formik.values.oldPassword} onChange={formik.handleChange} placeholder={t('Current Password')!} />\n\t\t\t\t\t\t<Button className='absolute bg-transparent right-3 top-11' onClick={handleShowPassword} label={''} title=''>\n\t\t\t\t\t\t\t{showOldPassword ? <Eye className='text-light-grey' /> : <EyeCrossed className='text-light-grey' />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{formik.touched.newPassword && formik.errors.oldPassword && <p className='text-red-400'>{formik.errors.oldPassword}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='relative mb-3 md:mb-5'>\n\t\t\t\t\t\t<TextInput required={true} onBlur={OnBlur} id='newPassword' type={showNewPassword ? 'text' : 'password'} label={t('New Password')} value={formik.values.newPassword} onChange={formik.handleChange} placeholder={t('New Password')!} />\n\t\t\t\t\t\t<Button onClick={handleShowNewPassword} className='absolute bg-transparent right-3 top-11' label={''} title=''>\n\t\t\t\t\t\t\t{showNewPassword ? <Eye className='text-light-grey' /> : <EyeCrossed className='text-light-grey' />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{formik.touched.newPassword && formik.errors.newPassword && <p className='text-red-400'>{formik.errors.newPassword}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='relative mb-5 md:mb-[30px]'>\n\t\t\t\t\t\t<TextInput required={true} onBlur={OnBlur} id='confirmPassword' type={showConfirmPassword ? 'text' : 'password'} label={t('Re-enter New Password')} value={formik.values.confirmPassword} onChange={formik.handleChange} placeholder={t('Re-enter New Password')!} />\n\t\t\t\t\t\t<Button onClick={handleConfirmPassword} className='absolute bg-transparent right-3 top-11' label={''} title=''>\n\t\t\t\t\t\t\t{showConfirmPassword ? <Eye className='text-light-grey' /> : <EyeCrossed className='text-light-grey' />}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{formik.touched.confirmPassword && formik.errors.confirmPassword && <p className='text-red-400'>{formik.errors.confirmPassword}</p>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button className='w-full btn-primary btn-normal btn-login' type='submit' label={t('Update Password')} \n\t\t\t\t\ttitle={`${t('Update Password')}`} />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UserProfilePasswordChange;\n"],"names":["IS_REQUIRED_PASSWORD_CHANGE","gql","_templateObject","_taggedTemplateLiteral","UserProfilePasswordChange","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","t","useTranslation","navigate","useNavigate","changePassword","useMutation","showOldPassword","setShowOldPassword","useState","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","changePasswordValidationSchema","useValidation","userProfileData","useSelector","state","userProfile","userType","getProfile","data","user_type","isIntroductoryPage","cancelPassWordHandler","useCallback","NavlinkReturnFunction","USER_TYPE","SUPER_ADMIN","concat","ROUTES","app","dashboard","subscriber","formik","useFormik","initialValues","oldPassword","newPassword","confirmPassword","validationSchema","onSubmit","values","variables","userData","then","response","_response$data","toast","success","message","SUBSCRIBER_ADMIN","introductory","catch","error","networkError","result","errors","useEffect","_userProfileData$getP4","_userProfileData$getP5","_userProfileData$getP6","_userProfileData$getP7","_userProfileData$getP8","_userProfileData$getP9","_userProfileData$getP10","_userProfileData$getP11","is_required_reset_password","introductory_page","OnBlur","e","setFieldValue","target","name","whiteSpaceRemover","handleShowPassword","prevState","handleShowNewPassword","handleConfirmPassword","_jsxs","className","children","_jsx","src","LoginImg","alt","title","height","width","handleSubmit","Logo","TextInput","required","id","onBlur","type","label","value","onChange","handleChange","placeholder","Button","onClick","Eye","EyeCrossed","touched"],"sourceRoot":""}