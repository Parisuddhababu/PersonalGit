{"version":3,"file":"static/js/3094.cb64e99e.chunk.js","mappings":"oMAEmCA,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6mCAA7B,MA4CIC,GAAWH,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,k+BA2DdG,IAjBoCL,EAAAA,EAAAA,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,icAiBTF,EAAAA,EAAAA,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+PAiBjCM,GAAyBR,EAAAA,EAAAA,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uPAcCF,EAAAA,EAAAA,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wO,mMCtH7C,MA2NA,EA3N4BS,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,GAAiBC,EAAAA,EAAAA,KACjBC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,GAASjC,EAAAA,KAC5BkC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAA2B,CAC9DG,MAAO,GACPC,KAAM,EACNC,OAAQ,GACRC,UAAW,KAENC,EAAU,CACf,CAAEC,KAAM,QAASC,UAAU,GAC3B,CAAED,KAAM,OAAQC,UAAU,EAAMC,UAAW,cAC3C,CAAEF,KAAM,QAASC,UAAU,EAAMC,UAAW,SAC5C,CAAEF,KAAM,cAAeC,UAAU,EAAMC,UAAW,eAClD,CAAEF,KAAM,OAAQC,UAAU,EAAMC,UAAW,QAC3C,CAAEF,KAAM,aAAcC,UAAU,EAAMC,UAAW,gBAMlDC,EAAAA,EAAAA,YAAU,KACS,OAAdpB,QAAc,IAAdA,GAAAA,EAAgBqB,IACnBhB,EAAQ,CAAEiB,0BAA2BC,SAASvB,EAAeqB,MAAOG,OAAOC,GAAQC,EAAAA,GAAMC,MAAMF,IAChG,GACE,CAACzB,EAAeqB,KAInB,MAAMO,GAAuBC,EAAAA,EAAAA,cAAY,KACxC3B,EAAS,IAAD4B,OAAKC,EAAAA,GAAOC,IAAG,KAAAF,OAAIC,EAAAA,GAAOE,aAAY,SAAQ,GACpD,IAaGC,EAAqC,IAAvBxB,EAAWG,KAAO,GAChCsB,EAAWD,EAAaxB,EAAWG,KAEnCuB,EAAuB,OAAJhC,QAAI,IAAJA,GAA6B,QAAzB3B,EAAJ2B,EAAMiC,+BAAuB,IAAA5D,GAAM,QAANC,EAA7BD,EAA+B2B,YAAI,IAAA1B,GAAW,QAAXC,EAAnCD,EAAqC4D,iBAAS,IAAA3D,OAA1C,EAAJA,EAAgD4D,QAAQC,GAA8BA,EAAEC,WAAWC,cAAcC,SAASpC,EAAWmC,iBAAgBE,MAAMV,EAAYC,GAc1LU,GAAchB,EAAAA,EAAAA,cAAY,KAAO,IAADiB,EAAAC,EAAAC,EACjC,OAAJ5C,QAAI,IAAJA,GAA6B,QAAzB0C,EAAJ1C,EAAMiC,+BAAuB,IAAAS,GAAM,QAANC,EAA7BD,EAA+B1C,YAAI,IAAA2C,GAAW,QAAXC,EAAnCD,EAAqCT,iBAAS,IAAAU,GAA9CA,EAAgDT,QAAQC,GAA8BA,EAAEC,WAAWC,cAAcC,SAASpC,EAAWmC,gBAAe,GAClJ,KAEIO,IAAkBxC,EAAAA,EAAAA,UAAiBC,EAAWE,OAC/CsC,GAAwB,OAAJ9C,QAAI,IAAJA,GAAmC,QAA/BxB,EAAJwB,EAAM+C,qCAA6B,IAAAvE,GAAM,QAANC,EAAnCD,EAAqCwB,YAAI,IAAAvB,OAArC,EAAJA,EAA2CuE,QAAS,EACxEC,EAAaC,KAAKC,KAAKL,EAAoBD,GAC3CO,GAAmC3B,EAAAA,EAAAA,cAAa4B,IACrD,MAAMC,EAAoB,IACtBhD,EACHG,KAAM4C,GAEP9C,EAAc+C,GACdC,EAAAA,EAAmBC,UAAU,mBAAoBC,KAAKC,UAAUJ,GAAmB,GACjF,KACHtC,EAAAA,EAAAA,YAAU,KACT,MAAM2C,EAAsBJ,EAAAA,EAAmBK,SAAS,mBAAoBH,KAAKC,UAAUpD,IAC3F,GAAIqD,EAAqB,CACxB,MAAME,EAAkBJ,KAAKK,MAAMH,GACnCpD,EAAcsD,EACf,IACE,IACH,MAAME,GAAetC,EAAAA,EAAAA,cAAauC,IACjC5D,EAAc4D,EAAEC,OAAOC,MAAM,GAC3B,IAEH,OACCC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2DAA0DD,SAAA,EACxEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qFAAoFD,SAAA,EAClGF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EACjCE,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CAACF,UAAU,OAAOG,SAAS,UAC3CF,EAAAA,EAAAA,KAAA,QAAAF,SAAO3E,EAAE,sBAEV6E,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAACJ,UAAU,yBAAyBK,MAAOjF,EAAE,QAASkF,QAASpD,EAAqB6C,UAC1FE,EAAAA,EAAAA,KAACM,EAAAA,GAAc,UAGjBV,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sCAAqCD,SAAA,EACnDF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWD,SAAA,CAAE3E,EAAE,SAAS,UACrC6E,EAAAA,EAAAA,KAAA,KAAGD,UAAU,OAAMD,SAAM,OAAJrE,QAAI,IAAJA,GAA6B,QAAzBtB,EAAJsB,EAAMiC,+BAAuB,IAAAvD,GAAM,QAANC,EAA7BD,EAA+BsB,YAAI,IAAArB,OAA/B,EAAJA,EAAqCkD,aAAaiD,YAExEX,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWD,SAAA,CAAE3E,EAAE,QAAQ,UACpCyE,EAAAA,EAAAA,MAAA,KAAGG,UAAU,OAAMD,SAAA,CAAC,IAAwE,QAAlE,OAAJrE,QAAI,IAAJA,GAA6B,QAAzBpB,EAAJoB,EAAMiC,+BAAuB,IAAArD,GAAM,QAANC,EAA7BD,EAA+BoB,YAAI,IAAAnB,OAA/B,EAAJA,EAAqCgD,aAAakD,iBAA2B,IAAU,OAAJ/E,QAAI,IAAJA,GAA6B,QAAzBlB,EAAJkB,EAAMiC,+BAAuB,IAAAnD,GAAM,QAANC,EAA7BD,EAA+BkB,YAAI,IAAAjB,OAA/B,EAAJA,EAAqC8C,aAAakD,uBAE5JZ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWD,SAAA,CAAE3E,EAAE,YAAY,UACxCyE,EAAAA,EAAAA,MAAA,KAAGG,UAAU,OAAMD,SAAA,CAAC,IAAM,OAAJrE,QAAI,IAAJA,GAA6B,QAAzBhB,EAAJgB,EAAMiC,+BAAuB,IAAAjD,GAAM,QAANC,EAA7BD,EAA+BgB,YAAI,IAAAf,OAA/B,EAAJA,EAAqC4C,aAAamD,gBAEzEb,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWD,SAAA,CAAE3E,EAAE,UAAU,UACtCyE,EAAAA,EAAAA,MAAA,KAAGG,UAAU,kBAAiBD,SAAA,CAA+D,KAAzD,OAAJrE,QAAI,IAAJA,GAA6B,QAAzBd,EAAJc,EAAMiC,+BAAuB,IAAA/C,GAAM,QAANC,EAA7BD,EAA+Bc,YAAI,IAAAb,OAA/B,EAAJA,EAAqC0C,aAAaoD,SAAeV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,8BAA6BD,SAAC,YAAgBE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,6BAA4BD,SAAC,aAAgB,WAE7NF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWD,SAAA,CAAE3E,EAAE,mBAAmB,UAC/CyE,EAAAA,EAAAA,MAAA,KAAGG,UAAU,OAAMD,SAAA,CAAC,IAAM,OAAJrE,QAAI,IAAJA,GAA6B,QAAzBZ,EAAJY,EAAMiC,+BAAuB,IAAA7C,GAAM,QAANC,EAA7BD,EAA+BY,YAAI,IAAAX,OAA/B,EAAJA,EAAqCwC,aAAaqD,kBAEzEf,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYD,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,YAAWD,SAAA,CAAE3E,EAAE,eAAe,UAC3CyE,EAAAA,EAAAA,MAAA,KAAGG,UAAU,OAAMD,SAAA,CACjB,KAEAE,EAAAA,EAAAA,KAAA,KACCY,wBAAyB,CACxBC,OAAY,OAAJpF,QAAI,IAAJA,GAA6B,QAAzBV,EAAJU,EAAMiC,+BAAuB,IAAA3C,GAAM,QAANC,EAA7BD,EAA+BU,YAAI,IAAAT,OAA/B,EAAJA,EAAqCsC,aAAawD,2BAQC,mBAA7D,OAAJrF,QAAI,IAAJA,GAA6B,QAAzBR,EAAJQ,EAAMiC,+BAAuB,IAAAzC,GAAM,QAANC,EAA7BD,EAA+BQ,YAAI,IAAAP,OAA/B,EAAJA,EAAqCoC,aAAaqD,aAClDf,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oDAAmDD,SAAA,EACjEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oDAAmDD,SAAA,EACjEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC9BE,EAAAA,EAAAA,KAACe,EAAAA,GAAK,IACL5F,EAAE,sBAEJ6E,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAACJ,UAAU,yBAAyBK,MAAOjF,EAAE,WAAYkF,QAASnC,EAAcqC,MAAK,GAAApD,OAAKhC,EAAE,UAAW2E,UAC7GE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMD,UACpBE,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,YAKTpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sDAAqDD,SAAA,EACnEE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eACfC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oDAAmDD,UACjEE,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAACC,KAAK,OAAOvB,MAAO/D,EAAYuF,SAAU3B,EAAc4B,YAAY,uBAGhFxB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sCAAqCD,SAAA,EACnDF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACCE,EAAAA,EAAAA,KAAA,SAAOD,UAAU,iFAAgFD,UAChGE,EAAAA,EAAAA,KAAA,MAAAF,SACS,OAAPzD,QAAO,IAAPA,OAAO,EAAPA,EAASgF,KAAI,CAACC,EAA8BC,KAE3CvB,EAAAA,EAAAA,KAAA,MAAIwB,MAAM,MAAMzB,UAAU,sCAAqCD,UAC9DF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,CAChCwB,EAAiBhF,KACjBgF,EAAiB/E,WACjBqD,EAAAA,EAAAA,MAAA,KAAGS,QAASA,KAAMoB,OAjIGC,EAiIsBJ,EAAiB9E,eAhIxER,EAAc,IACVD,EACHI,OAAQuF,EACRtF,UAAoC,QAAzBL,EAAWK,UAAsB,OAAS,QAJrBsF,KAiIkD,EAAA5B,SAAA,EAC3C,KAAzB/D,EAAWK,WAAoBL,EAAWI,SAAWmF,EAAiB9E,aAAcwD,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,IAC3E,QAAzB5F,EAAWK,WAAuBL,EAAWI,SAAWmF,EAAiB9E,YAAawD,EAAAA,EAAAA,KAAC4B,EAAAA,GAAU,IACxE,SAAzB7F,EAAWK,WAAwBL,EAAWI,SAAWmF,EAAiB9E,YAAawD,EAAAA,EAAAA,KAAC6B,EAAAA,GAAW,WAGjG,GAAA1E,OAViEoE,EAAQ,WAgBpFvB,EAAAA,EAAAA,KAAA,SAAAF,SACErC,EAAiB4D,KAAI,CAAC5F,EAAsB8F,KAAmB,IAADO,EAjIlDC,EAkIZ,OACCnC,EAAAA,EAAAA,MAAA,MAAIG,UAAU,oFAAmFD,SAAA,EAChGE,EAAAA,EAAAA,KAAA,MAAIwB,MAAM,MAAMzB,UAAU,kGAAiGD,SACzHyB,EAAQ,KAEVvB,EAAAA,EAAAA,KAAA,MAAID,UAAU,sCAAqCD,SAAErE,EAAKqC,WAAarC,EAAKuG,aAC5EhC,EAAAA,EAAAA,KAAA,MAAID,UAAU,sCAAqCD,SAAErE,EAAKwG,SAC1DjC,EAAAA,EAAAA,KAAA,MAAID,UAAU,sCAAqCD,SAAkB,QAAlBgC,EAAErG,EAAKyG,mBAAW,IAAAJ,EAAAA,EAAI,UACzE9B,EAAAA,EAAAA,KAAA,MAAID,UAAU,sCAAqCD,UAClDF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,QAAOD,SAAA,CAAC,KA3IdiC,EA2I+B,OAAJtG,QAAI,IAAJA,OAAI,EAAJA,EAAMsG,KA1IvC,IAATA,EACI,WACY,IAATA,EACH,QACY,IAATA,EACH,aAEA,WAqIC/B,EAAAA,EAAAA,KAAA,MAAID,UAAU,sCAAqCD,SAAA,GAAA3C,OAAK1B,EAAK0G,WAAWlE,MAAM,EAAG,IAAG,KAAAd,OAAI1B,EAAK0G,WAAWlE,MAAM,GAAI,SAAW,GAAAd,OAVpBoE,EAAQ,GAW7G,SAKa,OAArB9D,IACAuC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UACnCE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,kBAIRF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,6CAA4CD,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,iBAAgBD,SAAA,IAAA3C,OAC3BM,EAAiB2E,OAAM,MAC3BpC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAMD,SAAE3E,EAAE,uBAE3B6E,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,YAAavG,EAAWG,KAAMwC,WAAYA,EAAY6D,aAAc1D,EAAkCP,eAAgBA,UAIpI,KAEC,C","sources":["framework/graphql/queries/announcement.ts","views/viewAnnouncement/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\n  export const GET_ANNOUNCEMENTS = gql `\n  query FetchAnnouncementsWithFilters($page: Int, $limit: Int, $sortBy: String, $sortOrder: String, $title: String, $startDate: String, $endDate: String, $announcementType: String, $platform: String, $status: Int) {\n    fetchAnnouncementsWithFilters(page: $page, limit: $limit, sortBy: $sortBy, sortOrder: $sortOrder, title: $title, start_date: $startDate, end_date: $endDate, announcement_type: $announcementType, platform: $platform, status: $status) {\n      data {\n        announcementData {\n          id\n          uuid\n          user_id\n          title\n          description\n          announcement_type\n          email_attachment\n          push_image\n          platform\n          userType\n          userFilter\n          userToExclude\n          onlySendTo\n          start_date\n          end_date\n          status\n          created_at\n          updated_at\n        }\n        count\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n        type\n        errors {\n          errorField\n          error\n        }\n        errorType\n      }\n    }\n  }`\n\n\n\n\nexport const GET_USER = gql `\nquery GetUsersWithPagination($page: Int, $limit: Int, $sortBy: String, $sortOrder: String, $firstName: String, $lastName: String, $email: String, $status: Int, $gender: Int, $phoneNo: String) {\n  getUsersWithPagination(page: $page, limit: $limit, sortBy: $sortBy, sortOrder: $sortOrder, first_name: $firstName, last_name: $lastName, email: $email, status: $status, gender: $gender, phone_no: $phoneNo) {\n    data {\n      userList {\n        id\n        uuid\n        first_name\n        middle_name\n        last_name\n        user_name\n        email\n        gender\n        date_of_birth\n        phone_no\n        phone_country_id\n        role\n        profile_img\n        device_type\n        status\n        user_role_id\n        created_at\n        updated_at\n      }\n      count\n    }\n    meta {\n      message\n      messageCode\n      statusCode\n      status\n      type\n      errors {\n        errorField\n        error\n      }\n      errorType\n    }\n  }\n}\n`\n\nexport const GET_ANNOUNCEMENT_HISTORY_FOR_USER = gql`\n  query GetAnnouncementHistoryForUser($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getAnnouncementHistoryForUser(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENTS_FOR_USERS = gql`\n  query GetAnnouncementsForUser {\n    getAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENT_BY_ID = gql `\n  query GetAnnouncementById($announcementId: String!) {\n    getAnnouncementById(announcementId: $announcementId) {\n      message\n      data {\n        title\n        uuid\n        description\n        createdAt\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENTS_FOR_USER = gql`\n  query GetAnnouncementsForUser {\n    getAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n        }\n        count\n      }\n    }\n  }\n`","import React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { ROUTES } from '@config/constant';\nimport Button from '@components/button/button';\nimport { GetDefaultIcon, GetAscIcon, GetDescIcon, AnnouncementIco, ArrowSmallLeft, Group, Reset } from '@components/icons/icons';\nimport TextInput from '@components/textInput/TextInput';\nimport filterServiceProps from '@components/filter/filter';\nimport Pagination from '@components/Pagination/Pagination';\nimport { ExcludeDataArr } from '@framework/graphql/graphql';\nimport { GET_ANNOUNCEMENT_BY_ID } from '@framework/graphql/queries/announcement';\nimport { PaginationParams } from 'src/types/announcement';\nimport { ColArrType } from 'src/types/country';\n\nimport { useQuery } from '@apollo/client';\n\nconst AnnouncementDetails = () => {\n\tconst { t } = useTranslation();\n\tconst announcementId = useParams();\n\tconst navigate = useNavigate();\n\tconst { data, refetch } = useQuery(GET_ANNOUNCEMENT_BY_ID);\n\tconst [searchTerm, setSearchTerm] = useState('');\n\tconst [filterData, setFilterData] = useState<PaginationParams>({\n\t\tlimit: 10,\n\t\tpage: 1,\n\t\tsortBy: '',\n\t\tsortOrder: '',\n\t});\n\tconst COL_ARR = [\n\t\t{ name: 'Sr.No', sortable: false },\n\t\t{ name: 'Name', sortable: true, fieldName: 'first_name' },\n\t\t{ name: 'Email', sortable: true, fieldName: 'email' },\n\t\t{ name: 'Device Type', sortable: true, fieldName: 'device_type' },\n\t\t{ name: 'Role', sortable: true, fieldName: 'role' },\n\t\t{ name: 'Created At', sortable: true, fieldName: 'created_at' },\n\t] as ColArrType[];\n\n\t/**\n\t * IF WE GET ID BASED ON THAT WE WILL GET Announcement DATA\n\t */\n\tuseEffect(() => {\n\t\tif (announcementId?.id) {\n\t\t\trefetch({ fetchSingleAnnouncementId: parseInt(announcementId.id) }).catch((err) => toast.error(err));\n\t\t}\n\t}, [announcementId.id]);\n\t/**\n\t * on clicking cancel it will redirect to main events page\n\t */\n\tconst onCancelAnnouncement = useCallback(() => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.announcement}/list`);\n\t}, []);\n\t/**\n\t *\n\t * @param sortFieldName Method used for storing sort data\n\t */\n\tconst onHandleSortAnnouncement = (sortFieldName: string) => {\n\t\tsetFilterData({\n\t\t\t...filterData,\n\t\t\tsortBy: sortFieldName,\n\t\t\tsortOrder: filterData.sortOrder === 'asc' ? 'desc' : 'asc',\n\t\t});\n\t};\n\n\tconst startIndex = (filterData.page - 1) * 10;\n\tconst endIndex = startIndex + filterData.page;\n\n\tconst searchedComments = data?.fetchSingleAnnouncement?.data?.usersList?.filter((c: { first_name: string }) => c.first_name.toLowerCase().includes(searchTerm.toLowerCase())).slice(startIndex, endIndex);\n\n\tconst renderRole = (role: number) => {\n\t\tif (role === 0) {\n\t\t\treturn 'Customer';\n\t\t} else if (role === 1) {\n\t\t\treturn 'Admin';\n\t\t} else if (role === 2) {\n\t\t\treturn 'SuperAdmin';\n\t\t} else {\n\t\t\treturn '-';\n\t\t}\n\t};\n\n\tconst RefreshData = useCallback(() => {\n\t\tdata?.fetchSingleAnnouncement?.data?.usersList?.filter((c: { first_name: string }) => c.first_name.toLowerCase().includes(searchTerm.toLowerCase()));\n\t}, []);\n\n\tconst [recordsPerPage] = useState<number>(filterData.limit);\n\tconst totalAnnouncement = data?.fetchAnnouncementsWithFilters?.data?.count || 1;\n\tconst totalPages = Math.ceil(totalAnnouncement / recordsPerPage);\n\tconst handlePageChangeViewAnnouncement = useCallback((newPage: number): void => {\n\t\tconst updatedFilterData = {\n\t\t\t...filterData,\n\t\t\tpage: newPage,\n\t\t};\n\t\tsetFilterData(updatedFilterData);\n\t\tfilterServiceProps.saveState('viewAnnouncement', JSON.stringify(updatedFilterData));\n\t}, []);\n\tuseEffect(() => {\n\t\tconst savedFilterDataJSON = filterServiceProps.getState('viewAnnouncement', JSON.stringify(filterData));\n\t\tif (savedFilterDataJSON) {\n\t\t\tconst savedFilterData = JSON.parse(savedFilterDataJSON);\n\t\t\tsetFilterData(savedFilterData);\n\t\t}\n\t}, []);\n\tconst onSearchTerm = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetSearchTerm(e.target.value);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div className='mb-6 bg-white shadow-lg rounded overflow-auto md:w-full '>\n\t\t\t\t<div className='border-b border-[#c8ced3] bg-[#f0f3f5] py-3 px-5 flex items-center justify-between'>\n\t\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t\t<AnnouncementIco className='mr-2' fontSize='12px' />\n\t\t\t\t\t\t<span>{t('Announcement')}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button className='btn-primary btn-normal' label={t('Back')} onClick={onCancelAnnouncement}>\n\t\t\t\t\t\t<ArrowSmallLeft />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className='grid grid-cols-1 md:grid-cols-2 m-4'>\n\t\t\t\t\t<div className='flex pb-2'>\n\t\t\t\t\t\t<p className='font-bold'>{t('Title')} : </p>\n\t\t\t\t\t\t<p className='px-3'>{data?.fetchSingleAnnouncement?.data?.announcement.title}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t\t<p className='font-bold'>{t('Type')} : </p>\n\t\t\t\t\t\t<p className='px-3'> {data?.fetchSingleAnnouncement?.data?.announcement.annoucemnt_type === null ? '-' : data?.fetchSingleAnnouncement?.data?.announcement.annoucemnt_type}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t\t<p className='font-bold'>{t('Platform')} : </p>\n\t\t\t\t\t\t<p className='px-3'> {data?.fetchSingleAnnouncement?.data?.announcement.platform}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t\t<p className='font-bold'>{t('Status')} : </p>\n\t\t\t\t\t\t<p className='px-3 ml-2  w-20'>{data?.fetchSingleAnnouncement?.data?.announcement.status === 1 ? <span className='badge badge-success rounded'>Active</span> : <span className='badge badge-danger rounded'>InActive</span>} </p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex  pb-2 '>\n\t\t\t\t\t\t<p className='font-bold'>{t('Advanced Filter')} : </p>\n\t\t\t\t\t\t<p className='px-3'> {data?.fetchSingleAnnouncement?.data?.announcement.userFilter}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex pb-2 '>\n\t\t\t\t\t\t<p className='font-bold'>{t('Description')} : </p>\n\t\t\t\t\t\t<p className='px-3'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: data?.fetchSingleAnnouncement?.data?.announcement.description,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{data?.fetchSingleAnnouncement?.data?.announcement.userFilter === 'userToExclude' ? (\n\t\t\t\t<div className='mb-3 bg-white shadow-lg rounded-sm overflow-auto '>\n\t\t\t\t\t<div className='bg-gray-200 p-3 flex items-center justify-between'>\n\t\t\t\t\t\t<div className='flex mb-2 mr-2'>\n\t\t\t\t\t\t\t<Group />\n\t\t\t\t\t\t\t{t('Excluded Users')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button className='btn-primary btn-normal' label={t('Refresh')} onClick={RefreshData}  title={`${t('Reset')}`} >\n\t\t\t\t\t\t\t<div className='mr-4'>\n\t\t\t\t\t\t\t\t<Reset />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='grid grid-cols-1 md:grid-cols-2 l:grid-cols-4 gap-6'>\n\t\t\t\t\t\t<div className='flex mb-4'></div>\n\t\t\t\t\t\t<div className='btn-group mt-6 mr-4 flex items-start justify-end '>\n\t\t\t\t\t\t\t<TextInput type='text' value={searchTerm} onChange={onSearchTerm} placeholder='Search Users' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='p-3 overflow-auto custom-dataTable '>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead className='text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400'>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t{COL_ARR?.map((viewAnnounceData: ColArrType, index: number) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<th scope='col' className='px-6 py-3   border border-slate-500' key={`${index + 1}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{viewAnnounceData.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{viewAnnounceData.sortable && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a onClick={() => onHandleSortAnnouncement(viewAnnounceData.fieldName)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(filterData.sortOrder === '' || filterData.sortBy !== viewAnnounceData.fieldName) && <GetDefaultIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{filterData.sortOrder === 'asc' && filterData.sortBy === viewAnnounceData.fieldName && <GetAscIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{filterData.sortOrder === 'desc' && filterData.sortBy === viewAnnounceData.fieldName && <GetDescIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{searchedComments.map((data: ExcludeDataArr, index: number) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<tr className='bg-white border-b dark:bg-gray-800 dark:border-gray-700   border border-slate-500' key={`${index + 1}`}>\n\t\t\t\t\t\t\t\t\t\t\t<th scope='row' className='px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white   border border-slate-500'>\n\t\t\t\t\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t<td className='px-6 py-4   border border-slate-500'>{data.first_name + data.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className='px-6 py-4   border border-slate-500'>{data.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className='px-6 py-4   border border-slate-500'>{data.device_type ?? 'null'}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className='px-6 py-4   border border-slate-500'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=' w-20'> {renderRole(data?.role)}</div>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className='px-6 py-4   border border-slate-500'>{`${data.created_at.slice(0, 10)} ${data.created_at.slice(11, 19)}`}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t{searchedComments === null && (\n\t\t\t\t\t\t\t<div className='flex justify-center'>\n\t\t\t\t\t\t\t\t<div>No Data</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='p-3 flex items-center justify-between mt-8'>\n\t\t\t\t\t\t<span className='text-slate-400'>\n\t\t\t\t\t\t\t{`${searchedComments.length} `}\n\t\t\t\t\t\t\t<span className='ml-1'>{t('Total Records')}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<Pagination currentPage={filterData.page} totalPages={totalPages} onPageChange={handlePageChangeViewAnnouncement} recordsPerPage={recordsPerPage} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t</>\n\t);\n};\nexport default AnnouncementDetails;\n"],"names":["gql","_templateObject","_taggedTemplateLiteral","GET_USER","_templateObject2","GET_ANNOUNCEMENTS_FOR_USERS","_templateObject3","_templateObject4","GET_ANNOUNCEMENT_BY_ID","_templateObject5","_templateObject6","AnnouncementDetails","_data$fetchSingleAnno","_data$fetchSingleAnno2","_data$fetchSingleAnno3","_data$fetchAnnounceme","_data$fetchAnnounceme2","_data$fetchSingleAnno7","_data$fetchSingleAnno8","_data$fetchSingleAnno9","_data$fetchSingleAnno10","_data$fetchSingleAnno11","_data$fetchSingleAnno12","_data$fetchSingleAnno13","_data$fetchSingleAnno14","_data$fetchSingleAnno15","_data$fetchSingleAnno16","_data$fetchSingleAnno17","_data$fetchSingleAnno18","_data$fetchSingleAnno19","_data$fetchSingleAnno20","_data$fetchSingleAnno21","_data$fetchSingleAnno22","t","useTranslation","announcementId","useParams","navigate","useNavigate","data","refetch","useQuery","searchTerm","setSearchTerm","useState","filterData","setFilterData","limit","page","sortBy","sortOrder","COL_ARR","name","sortable","fieldName","useEffect","id","fetchSingleAnnouncementId","parseInt","catch","err","toast","error","onCancelAnnouncement","useCallback","concat","ROUTES","app","announcement","startIndex","endIndex","searchedComments","fetchSingleAnnouncement","usersList","filter","c","first_name","toLowerCase","includes","slice","RefreshData","_data$fetchSingleAnno4","_data$fetchSingleAnno5","_data$fetchSingleAnno6","recordsPerPage","totalAnnouncement","fetchAnnouncementsWithFilters","count","totalPages","Math","ceil","handlePageChangeViewAnnouncement","newPage","updatedFilterData","filterServiceProps","saveState","JSON","stringify","savedFilterDataJSON","getState","savedFilterData","parse","onSearchTerm","e","target","value","_jsxs","_Fragment","children","className","_jsx","AnnouncementIco","fontSize","Button","label","onClick","ArrowSmallLeft","title","annoucemnt_type","platform","status","userFilter","dangerouslySetInnerHTML","__html","description","Group","Reset","TextInput","type","onChange","placeholder","map","viewAnnounceData","index","scope","onHandleSortAnnouncement","sortFieldName","GetDefaultIcon","GetAscIcon","GetDescIcon","_data$device_type","role","last_name","email","device_type","created_at","length","Pagination","currentPage","onPageChange"],"sourceRoot":""}