{"version":3,"file":"static/js/8933.85e43767.chunk.js","mappings":"yLAMA,MAAMA,EAAgDC,IAA6B,IAA5B,SAAEC,EAAQ,MAAEC,EAAM,IAAIF,EAC5E,MAeMG,GAAqBC,EAAAA,EAAAA,cAAaC,IACvCJ,EAASI,EAAO,GACd,IACH,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UACnBF,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACR,SAAUE,EAAoBO,OApB7B,CACdC,UAAU,EACVC,WAAW,EACXC,SAAU,EACVC,oBAAoB,EACpBC,wBAAwB,EACxBC,qBAAsB,oBACtBC,YAAa,8BACbC,YAAY,EACZC,kBAAmB,QACnBC,SAAU,CACTC,wBAAwB,GAEzBC,OAAQ,KAOmDC,aAAcrB,KACnE,EAIR,EAAesB,EAAAA,KAAWzB,E,wEC3BnB,MAuBP,EALgCC,IAAoS,IAAnS,OAAEyB,EAAM,QAAEC,EAAO,gBAAEC,EAAe,SAAEnB,GAAyPR,EAE7T,MApBqC4B,EAACH,EAAoCC,EAAsCC,KAChH,MAAM,KAAEE,IAASC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,KACTF,EAAKG,GAAG,mBAAmB,KAC1BC,OAAOC,KAAKT,GAAQU,SAASC,IACxBH,OAAOC,KAAKR,GAASW,SAASD,IACjCT,EAAgBS,EACjB,GACC,IAEI,KACNP,EAAKS,IAAI,mBAAmB,KACrB,GACL,IAED,CAACb,GAAQ,EAIZG,CAAuBH,EAAQC,EAASC,IACjCrB,EAAAA,EAAAA,KAAAiC,EAAAA,SAAA,CAAA/B,SAAGA,GAAY,C,yECvBhB,MAAMgC,GAAsBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,umCAsCzBC,GAAqCH,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8Q,6FCtClBF,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6mCAA7B,MA4CIG,GAAWL,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,k+BA2DdI,IAjBoCN,EAAAA,EAAAA,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,icAiBTF,EAAAA,EAAAA,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+PAiBjCO,GAAyBT,EAAAA,EAAAA,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uPAcCF,EAAAA,EAAAA,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wO,yVC1G7C,MA8sBA,EA9sBwBU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAM,EAAEC,IAAM/B,EAAAA,EAAAA,OACNgC,KAAMC,EAAUC,QAASC,IAAgBC,EAAAA,EAAAA,GAASpB,EAAAA,KACnDqB,IAAsBC,EAAAA,EAAAA,GAAY5B,EAAAA,IAClC6B,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAiB,QACtDC,EAAUC,IAAeF,EAAAA,EAAAA,UAAiB,QAC1CG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAiB,QACpDK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,KACtCO,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,CAAC,IACnCS,EAAoBC,IAAyBV,EAAAA,EAAAA,UAAmB,KAChEW,EAAUC,IAAeZ,EAAAA,EAAAA,UAAmB,KAC5Ca,EAAWC,IAAgBd,EAAAA,EAAAA,WAAS,IACrC,gCAAEe,IAAoCC,EAAAA,EAAAA,KACtCC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACRC,GAAcC,KAAmBtB,EAAAA,EAAAA,UAAiB,KAElDuB,GAAYC,KAAiBxB,EAAAA,EAAAA,UAA2B,CAC9DyB,MAAO,GACPC,KAAM,EACNC,OAAQ,GACRC,UAAW,KAGNC,GAAU,CACf,CAAEC,KAAM,QAASC,UAAU,GAC3B,CAAED,KAAMxC,EAAE,cAAeyC,UAAU,EAAMlE,UAAW,cACpD,CAAEiE,KAAMxC,EAAE,SAAUyC,UAAU,EAAMlE,UAAW,SAC/C,CAAEiE,KAAMxC,EAAE,eAAgByC,UAAU,EAAMlE,UAAW,eACrD,CAAEiE,KAAMxC,EAAE,QAASyC,UAAU,EAAMlE,UAAW,QAC9C,CAAEiE,KAAMxC,EAAE,mBAAoByC,UAAU,EAAMlE,UAAW,gBAEnDmE,GAAgBC,KAAqBjC,EAAAA,EAAAA,UAAiBuB,GAAWE,OAClES,IAAwB,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,QAAS,EACnCC,GAAaC,KAAKC,KAAKJ,GAAgBF,IACvCO,IAAkC1G,EAAAA,EAAAA,cAAa2G,IACpD,MAAMC,EAAoB,IACtBlB,GACHG,KAAMc,GAGPhB,GAAciB,GACdC,EAAAA,EAAmBC,UAAU,wBAAyBC,KAAKC,UAAUJ,GAAmB,GACtF,KACHjF,EAAAA,EAAAA,YAAU,KACT,MAAMsF,EAAsBJ,EAAAA,EAAmBK,SAAS,wBAAyBH,KAAKC,UAAUtB,KAChG,GAAIuB,EAAqB,CACxB,MAAME,EAAkBJ,KAAKK,MAAMH,GACnCtB,GAAcwB,EACf,IACE,KAKHxF,EAAAA,EAAAA,YAAU,KAC8B,IAAD0F,EAA1B,OAAR1D,QAAQ,IAARA,GAAAA,EAAU2D,wBACb3C,EAAoB,OAARhB,QAAQ,IAARA,GAAgC,QAAxB0D,EAAR1D,EAAU2D,8BAAsB,IAAAD,OAAxB,EAARA,EAAkC3D,KAC/C,GACE,CAAS,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAU2D,yBAEd,MAoCMC,IAASC,EAAAA,EAAAA,IAAU,CACxBC,cArCyC,CACzCC,MAAO,GACPC,iBAAkB,IAClBC,OAAQ,GACRC,YAAa,GACbC,UAAW,GACXC,SAAU,GACV3D,SAAU,GACV4D,WAAY,GACZC,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,WAAY,IA0BZC,iBAAkBnD,EAClBoD,SAAUC,UACT,IAAIC,EAAWjB,GAAOkB,OAAOX,UAEG,kBAArBW,EAAOX,WACbW,EAAOX,YACVU,QAAiBE,EAAAA,EAAAA,GAAiB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQX,YAGtC,IAAIa,EAAmB,GAEtBA,EADsC,MAAnCpB,GAAOkB,OAAOd,iBACE,OAC0B,MAAnCJ,GAAOkB,OAAOd,iBACL,MAEA,QAGpB5D,EAAmB,CAClB6E,UAAW,CACVlB,MAAa,OAANe,QAAM,IAANA,OAAM,EAANA,EAAQf,MACfC,iBAAkBgB,EAClBd,YAAmB,OAANY,QAAM,IAANA,OAAM,EAANA,EAAQZ,YACrBC,UAAWU,EACXT,SAAU9D,EACVG,SAAUA,EACV4D,WAAY1D,EACZ2D,UAAiB,OAANQ,QAAM,IAANA,OAAM,EAANA,EAAQR,UACnBC,QAAe,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQP,QACjBC,cAAevD,EACfwD,WAAYtD,KAGZ+D,MAAMC,IACN,MAAMpF,EAAOoF,EAAIpF,KAC+B,MAA5CA,EAAKK,mBAAmBgF,KAAKC,YAChCC,EAAAA,GAAMC,QAAQxF,EAAKK,mBAAmBgF,KAAKI,SAC3C5B,GAAO6B,YACPC,MAEAJ,EAAAA,GAAMK,MAAM5F,EAAKK,mBAAmBgF,KAAKI,QAC1C,IAEAI,OAAM,KACNN,EAAAA,GAAMK,MAAM7F,EAAE,oBAAoB,GACjC,IAIC4F,IAAWrJ,EAAAA,EAAAA,cAAY,KAC5BoF,EAAS,IAADoE,OAAKC,EAAAA,GAAOC,IAAG,KAAAF,OAAIC,EAAAA,GAAOE,aAAY,SAAQ,GACpD,IAEGC,GAAwBC,IAC7B,MAAMC,EAASD,EAAMC,OACA,MAAjBA,EAAOhK,OACVoE,EAAkB,OAEE,MAAjB4F,EAAOhK,OACVoE,EAAkB,WAEE,MAAjB4F,EAAOhK,OACVoE,EAAkB,OAEE,MAAjB4F,EAAOhK,OACVoE,EAAkB,MACnB,EAEK6F,GAAwBF,IAC7B,MAAMC,EAASD,EAAMC,OAEA,MAAjBA,EAAOhK,OACVuE,EAAY,OAEQ,MAAjByF,EAAOhK,OACVuE,EAAY,YAEQ,MAAjByF,EAAOhK,OACVuE,EAAY,SAEQ,MAAjByF,EAAOhK,OACVuE,EAAY,WACb,EAEK2F,GAA6BH,IAClC,MAAMC,EAASD,EAAMC,OAEA,MAAjBA,EAAOhK,OACVyE,EAAiB,OAEG,MAAjBuF,EAAOhK,OACVyE,EAAiB,iBAEG,MAAjBuF,EAAOhK,OACVyE,EAAiB,aAClB,GAMD5C,EAAAA,EAAAA,YAAU,KACL+D,IACH7B,EAAY6B,IAAY6D,OAAOU,IAC9BhB,EAAAA,GAAMK,MAAMW,EAAI,GAElB,GACE,CAACvE,KAKJ,MA4BMwE,GAA2BC,IAAkB,IAADC,EAEjD,OAAgB,QAAhBA,EADeC,EAAAA,GAAiBC,QAAQC,GAAMC,SAASD,EAAEE,OAASN,IACpD,UAAE,IAAAC,OAAA,EAATA,EAAWnE,IAAI,EAGjByE,GAAgBhH,IAErB,GADAuB,GAAa,GACTL,EAAmB3C,SAASyB,EAAKiH,IAAK,CACzC,MAAMjG,EAAWE,EAAmB0F,QAAQM,GAAMA,IAAMlH,EAAKiH,KAC7D9F,EAAsBH,EACvB,MACCG,GAAuBgG,GAAS,IAAIA,EAAMnH,EAAKiH,KAChD,EAEKG,GAAoBpH,IAEzB,GADAuB,GAAa,GACTH,EAAS7C,SAASyB,EAAKiH,IAAK,CAC/B,MAAMjG,EAAWI,EAASwF,QAAQM,GAAMA,IAAMlH,EAAKiH,KACnD5F,EAAYL,EACb,MACCK,GAAa8F,GAAS,IAAIA,EAAMnH,EAAKiH,KACtC,EAEKI,IAA0B/K,EAAAA,EAAAA,cAAa6J,IAAgD,IAADmB,EAC3F,MAAMC,EAAyB,QAArBD,EAAGnB,EAAMC,OAAOoB,aAAK,IAAAF,OAAA,EAAlBA,EAAqB,GAC9BC,IACH1D,GAAO4D,cAAc,YAAaF,GAClCxF,GAAgB2F,IAAIC,gBAAgBJ,IACrC,GACE,KACIK,GAAeC,KAAoBpH,EAAAA,EAAAA,UAAiB,IAErDqH,IAAmBxL,EAAAA,EAAAA,cAAY,KACpCyF,GAAgB,IAChB8F,GAAiB,IACjBhE,GAAO4D,cAAc,iBAAkB,IACvC,MAAMM,EAAYC,SAASC,eAAe,SACtCF,IACHA,EAAU3L,MAAQ,GACnB,GACE,CAAC2F,GAAiB8F,MACdK,GAAeC,KAAoB1H,EAAAA,EAAAA,UAAS,IAE7C2H,GAA+B,OAARnI,QAAQ,IAARA,GAAgC,QAAxBT,EAARS,EAAU2D,8BAAsB,IAAApE,GAAM,QAANC,EAAhCD,EAAkCQ,YAAI,IAAAP,GAAU,QAAVC,EAAtCD,EAAwC4I,gBAAQ,IAAA3I,OAAxC,EAARA,EAAkDkH,QAAQ0B,IAAyB,IAAAC,EAAA,OAAiB,QAAjBA,EAAKD,EAAEE,kBAAU,IAAAD,OAAA,EAAZA,EAAcE,cAAclK,SAAmB,OAAVuC,QAAU,IAAVA,OAAU,EAAVA,EAAY2H,cAAc,IAE9KC,IAAWpM,EAAAA,EAAAA,cAAY,KAAO,IAADqM,EAAAC,EAAAC,EAElC,MAAMT,EAA+B,OAARnI,QAAQ,IAARA,GAAgC,QAAxB0I,EAAR1I,EAAU2D,8BAAsB,IAAA+E,GAAM,QAANC,EAAhCD,EAAkC3I,YAAI,IAAA4I,GAAU,QAAVC,EAAtCD,EAAwCP,gBAAQ,IAAAQ,OAAxC,EAARA,EAAkDjC,QAAQ0B,IAAyB,IAAAQ,EAAA,OAAiB,QAAjBA,EAAKR,EAAEE,kBAAU,IAAAM,OAAA,EAAZA,EAAcL,cAAclK,SAAmB,OAAVuC,QAAU,IAAVA,OAAU,EAAVA,EAAY2H,cAAc,IAGpLN,GAAiBC,EAAqB,GACpC,CAACD,KAEEY,IAAUzM,EAAAA,EAAAA,cAAY,KAE3ByE,EAAc,IACdoH,GAAiB,GAAG,GAClB,CAACpH,EAAeoH,MAEnBlK,EAAAA,EAAAA,YAAU,KACLiD,EAAmB8H,UAA+B,OAApBZ,SAAoB,IAApBA,QAAoB,EAApBA,GAAsBY,SACvDzH,GAAa,EACd,GACE,CAACL,KAEJjD,EAAAA,EAAAA,YAAU,KACLmD,EAAS4H,UAA+B,OAApBZ,SAAoB,IAApBA,QAAoB,EAApBA,GAAsBY,SAC7CzH,GAAa,EACd,GACE,CAACH,IAEJ,MAAM6H,IAAY3M,EAAAA,EAAAA,cAAa4M,IAC9BrF,GAAO4D,cAAcyB,EAAE9C,OAAO7D,MAAM4G,EAAAA,EAAAA,IAAkBD,GAAG,GACvD,IAEG/M,IAAWG,EAAAA,EAAAA,cAAa4M,IAC7BrF,GAAO4D,cAAc,cAAeyB,EAAE,GACpC,KACHjL,EAAAA,EAAAA,YAAU,KACTyE,GAAkBV,GAAWE,MAAM,GACjC,CAACF,GAAWE,QACf,MAAMkH,IAAe9M,EAAAA,EAAAA,cAAa4M,IACjCnI,EAAcmI,EAAE9C,OAAOhK,MAAM,GAC3B,IACH,OACCI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC3BF,EAAAA,EAAAA,KAAC6M,EAAAA,EAAuB,CAAC1L,OAAQkG,GAAOlG,OAAQC,QAASiG,GAAOjG,QAASC,gBAAiBgG,GAAOhG,gBAAgBnB,UAChH4M,EAAAA,EAAAA,MAAA,QAAM7M,UAAU,4DAA4DmI,SAAUf,GAAO0F,aAAa7M,SAAA,EACzGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UAC1C4M,EAAAA,EAAAA,MAAA,KAAA5M,SAAA,CACEqD,EAAE,sBAAsB,KAACvD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,MAAQ,IAAEqD,EAAE,wBAGvEuJ,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,2DAA0DC,SAAA,EACxEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACpBF,EAAAA,EAAAA,KAACgN,EAAAA,EAAS,CAACrM,YAAa4C,EAAE,SAAUwC,KAAK,QAAQpG,SAAU0H,GAAO4F,aAAcC,OAAQT,GAAWU,MAAO5J,EAAE,SAAU3D,MAAOyH,GAAOkB,OAAOf,MAAO4B,MAAO/B,GAAOlG,OAAOqG,OAASH,GAAOjG,QAAQoG,OAASH,GAAOlG,OAAOqG,MAAO4F,UAAU,OAExOpN,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAACqN,EAAAA,EAAc,CACd5C,GAAG,mBACH2C,UAAU,EACVE,QAASjG,GAAOkB,OAAOd,iBACvB9H,SAAU0H,GAAO4F,aACjBlH,KAAM,mBACNwH,aAAc,CACb,CAAExH,KAAMxC,EAAE,SAAUgH,IAAK,GACzB,CAAExE,KAAMxC,EAAE,QAASgH,IAAK,GACxB,CAAExE,KAAMxC,EAAE,OAAQgH,IAAK,IAExB4C,MAAO5J,EAAE,QAET6F,MAAO/B,GAAOjG,QAAQqG,kBAAoBJ,GAAOlG,OAAOsG,kBAAoB,WAI/EzH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACW,MAAnCmH,GAAOkB,OAAOd,kBACdqF,EAAAA,EAAAA,MAAA,OAAA5M,SAAA,EACC4M,EAAAA,EAAAA,MAAA,KAAG7M,UAAU,yCAAwCC,SAAA,CACnDqD,EAAE,eAAe,KAACvD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,UAEnDF,EAAAA,EAAAA,KAACwN,EAAAA,EAAQ,CAAC5N,MAAOyH,GAAOkB,OAAOZ,YAAahI,SAAUA,KACrD0H,GAAOlG,OAAOwG,aAAeN,GAAOjG,QAAQuG,cAAe3H,EAAAA,EAAAA,KAAA,KAAGC,UAAU,QAAOC,SAAEqD,EAAE8D,GAAOlG,OAAOwG,mBAGnG3H,EAAAA,EAAAA,KAACgN,EAAAA,EAAS,CAACrM,YAAa4C,EAAE,eAAgBwC,KAAK,cAAcpG,SAAU0H,GAAO4F,aAAcC,OAAQT,GAAWU,MAAO5J,EAAE,eAAgB3D,MAAOyH,GAAOkB,OAAOZ,YAAayB,MAAO/B,GAAOlG,OAAOwG,aAAeN,GAAOjG,QAAQuG,aAAeN,GAAOlG,OAAOwG,YAAayF,UAAU,MAG/O,MAAnC/F,GAAOkB,OAAOd,mBAA4BzH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAA+BC,SAAEqD,EAAE,sBACvD,MAAnC8D,GAAOkB,OAAOd,mBAA4BzH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAA+BC,SAAEqD,EAAE,gBACvD,MAAnC8D,GAAOkB,OAAOd,mBACdqF,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,OAAMC,SAAA,EACpB4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,+BAA8BC,SAAA,EAC5C4M,EAAAA,EAAAA,MAAA,OAAA5M,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAOyN,QAAQ,QAAQxN,UAAU,qUAAoUC,SACnWqD,EAAE,kBAGJvD,EAAAA,EAAAA,KAACgN,EAAAA,EAAS,CAACU,KAAK,OAAOjD,GAAG,QAAQ1E,KAAK,QAAQnG,OAAO+N,EAAAA,EAAAA,IAAevC,IAAgBzK,YAAa,GAAIhB,SAAUkL,GAAyB+C,QAAM,QAEhJ5N,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACtBF,EAAAA,EAAAA,KAAC6N,EAAAA,EAAM,CAAC5N,UAAU,sBAAsB6N,QAASxC,GAAkB6B,MAAO5J,EAAE,SAAWiE,MAAK,GAAA8B,OAAK/F,EAAE,eAGlG8D,GAAOjG,QAAQwG,YAAakF,EAAAA,EAAAA,MAAA,OAAK7M,UAAS,iCAAAqJ,OAAmCjC,GAAOjG,QAAQwG,UAAY,OAAS,IAAK1H,SAAA,CAAC,KAAGkL,IAAoD,MAAnC/D,GAAOkB,OAAOd,kBAA4BJ,GAAOkB,OAAOX,UAAU7B,KAAK,UAEjL,MAAnCsB,GAAOkB,OAAOd,kBAA4BnC,KAC1CtF,EAAAA,EAAAA,KAAAiC,EAAAA,SAAA,CAAA/B,SACEmH,GAAOlG,OAAOyG,UAAY,MAC1B5H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6DAA4DC,UAC1EF,EAAAA,EAAAA,KAAA,OAAK+N,IAAKzI,GAAc0I,IAAI,gBAAgB/N,UAAU,uDAQ5D6M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,0EAAyEC,SAAA,EACvFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qFAAoFC,UAClGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UACjCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAEqD,EAAE,iBAI3CuJ,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,qDAAoDC,SAAA,EAClE4M,EAAAA,EAAAA,MAAA,OAAA5M,SAAA,EACC4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAU,cAAaC,SAAA,CAC5BqD,EAAE,YAAY,KAACvD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,UAEhD4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,kCAAiCC,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,MAAM7K,MAAO,IAAKuO,gBAAc,EAACpI,KAAK,iBAAiBpG,SAAU+J,MACxF1J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,mBAK9BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,UAAU7K,MAAO,IAAKmG,KAAK,iBAAiBpG,SAAU+J,MAC7E1J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,uBAK9BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,MAAM7K,MAAO,IAAKmG,KAAK,iBAAiBpG,SAAU+J,MACzE1J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,mBAK9BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,MAAM7K,MAAO,IAAKmG,KAAK,iBAAiBpG,SAAU+J,MACzE1J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,yBAOhCvD,EAAAA,EAAAA,KAAA,OAAAE,UACC4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,OAAMC,SAAA,EACpB4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAU,cAAaC,SAAA,CAC5BqD,EAAE,aAAa,KAACvD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,UAEjD4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,+BAA8BC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,MAAM7K,MAAO,IAAKuO,gBAAc,EAACpI,KAAK,WAAWpG,SAAUkK,MAClF7J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,mBAK9BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,WAAW7K,MAAO,IAAKmG,KAAK,WAAWpG,SAAUkK,MACxE7J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,wBAK9BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,QAAQ7K,MAAO,IAAKmG,KAAK,WAAWpG,SAAUkK,MACrE7J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,qBAK9BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,WAAW7K,MAAO,IAAKmG,KAAK,WAAWpG,SAAUkK,MACxE7J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,gCAQjCuJ,EAAAA,EAAAA,MAAA,OAAA5M,SAAA,EACC4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAU,cAAaC,SAAA,CAC5BqD,EAAE,oBAAoB,KAACvD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,UAExD4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,kBAAiBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,gBAAgB7K,MAAO,IAAKmG,KAAK,gBAAgBpG,SAAUmK,MAClF9J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,iCAM/BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,eAAehO,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWgO,IAAGC,EAAAA,EAAY,oBAAoBhO,UAClD4M,EAAAA,EAAAA,MAAA,SAAO7M,UAAWgO,IAAGC,EAAAA,EAAY,cAAchO,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,QAAQjD,GAAG,aAAa7K,MAAO,IAAKmG,KAAK,gBAAgBpG,SAAUmK,MAC/E9J,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,oCAQjCuJ,EAAAA,EAAAA,MAAA,OAAA5M,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAEqD,EAAE,yBAClCvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACzBF,EAAAA,EAAAA,KAACgN,EAAAA,EAAS,CACTrM,YAAa4C,EAAE,cACfmK,KAAK,OACL3H,KAAK,YACLpG,SAAU0H,GAAO4F,aACjBE,MAAO5J,EAAE,cACT3D,MAAOyH,GAAOkB,OAAOR,eAGvB/H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACpBF,EAAAA,EAAAA,KAACgN,EAAAA,EAAS,CACTrM,YAAa4C,EAAE,YACfmK,KAAK,OACL3H,KAAK,UACLpG,SAAU0H,GAAO4F,aACjBE,MAAO5J,EAAE,YACT3D,MAAOyH,GAAOkB,OAAOP,kBAMN,kBAAlB5D,GAAuD,eAAlBA,GACrC0I,EAAAA,EAAAA,MAAA7K,EAAAA,SAAA,CAAA/B,SAAA,EACC4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,2DAA0DC,SAAA,EACxEF,EAAAA,EAAAA,KAACgN,EAAAA,EAAS,CAACU,KAAK,OAAOjD,GAAG,eAAe7K,MAAO0E,EAAY3D,YAAa4C,EAAE,aAAc5D,SAAUiN,MACnGE,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,cAAaC,SAAA,EAC3BF,EAAAA,EAAAA,KAAC6N,EAAAA,EAAM,CAAC5N,UAAU,cAAcyN,KAAK,SAASP,MAAO5J,EAAE,UAAWuK,QAAS5B,GAAW1E,MAAK,GAAA8B,OAAK/F,EAAE,WAAYrD,UAC7GF,EAAAA,EAAAA,KAACoO,EAAAA,GAAM,CAACnO,UAAU,YAEnBD,EAAAA,EAAAA,KAAC6N,EAAAA,EAAM,CAAC5N,UAAU,yBAAyBkN,MAAO5J,EAAE,SAAUuK,QAASvB,GAAU/E,MAAK,GAAA8B,OAAK/F,EAAE,YAAarD,UACzGF,EAAAA,EAAAA,KAACqO,EAAAA,GAAO,CAACpO,UAAU,iBAKH,kBAAlBmE,GACA0I,EAAAA,EAAAA,MAAA,KAAG7M,UAAU,iBAAgBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,OAAS,IAAEqD,EAAE,4DAG7CuJ,EAAAA,EAAAA,MAAA,KAAG7M,UAAU,iBAAgBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,OAAS,IAAEqD,EAAE,wDAG9CvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,UACtD4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,2CAA0CC,SAAA,EACxDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sCAAqCC,SAAEqD,EAAE,WAEzDvD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,2FAA2FN,SAAW+M,GAzW5FA,KACpCxG,GAAkBoI,OAAO5B,IACzB,MAAMhG,EAAoB,IACtBlB,GACHE,MAAO4E,SAASoC,GAChB/G,KAAM,GAEPF,GAAciB,GACdC,EAAAA,EAAmBC,UAAU,wBAAyBC,KAAKC,UAAUJ,GAAmB,EAiW8C6H,CAA4B7B,EAAE9C,OAAOhK,OAAQA,MAAO4F,GAAWE,MAAMxF,SAC9K,OAAnBsO,EAAAA,SAAmB,IAAnBA,EAAAA,QAAmB,EAAnBA,EAAAA,GAAqBC,KAAI,CAACC,EAAcC,KACjC3O,EAAAA,EAAAA,KAAA,UAAAE,SAA8BwO,GAAI,GAAApF,OAAlBqF,EAAQ,SAGjC3O,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qCAAoCC,SAAEqD,EAAE,mBAG1DvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,UACnD4M,EAAAA,EAAAA,MAAA,SAAA5M,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,UACC4M,EAAAA,EAAAA,MAAA,MAAA5M,SAAA,EACC4M,EAAAA,EAAAA,MAAA,MAAI8B,MAAM,MAAM3O,UAAU,cAAaC,SAAA,CACnB,kBAAlBkE,IAAqCpE,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,WAAWJ,SAAUxI,EAAWnF,SAzgB9DkP,KAAO,IAADC,EAAAC,EACrChK,GAAciK,IAAeA,IACrB,OAARvL,QAAQ,IAARA,GAAgC,QAAxBqL,EAARrL,EAAU2D,8BAAsB,IAAA0H,GAAM,QAANC,EAAhCD,EAAkCtL,YAAI,IAAAuL,GAAtCA,EAAwClD,SAAS4C,KAAKjL,IACrDmB,GAAuBgG,GAAS,IAAIA,EAAU,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,KAAI,IAGhD3F,GACJH,EAAsB,GACvB,IAkgB8B,eAAlBP,IAAkCpE,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,WAAWJ,SAAUxI,EAAWnF,SAhgB/DsP,KAAO,IAADC,EAAAC,EACjCpK,GAAciK,IAAeA,IACrB,OAARvL,QAAQ,IAARA,GAAgC,QAAxByL,EAARzL,EAAU2D,8BAAsB,IAAA8H,GAAM,QAANC,EAAhCD,EAAkC1L,YAAI,IAAA2L,GAAtCA,EAAwCtD,SAAS4C,KAAKjL,IACrDqB,GAAa8F,GAAS,IAAIA,EAAU,OAAJnH,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,KAAI,IAGtC3F,GACJD,EAAY,GACb,OA0fkB,OAAPiB,SAAO,IAAPA,QAAO,EAAPA,GAAS2I,KAAKW,IAEbpP,EAAAA,EAAAA,KAAA,MAAI4O,MAAM,MAAK1O,UACd4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,oBAAmBC,SAAA,CAChCkP,EAAmBrJ,KACnBqJ,EAAmBpJ,WACnB8G,EAAAA,EAAAA,MAAA,KAAGgB,QAASA,KAAMuB,OA3YAC,EA2YyBF,EAAmBtN,eA1Y7E2D,GAAc,IACVD,GACHI,OAAQ0J,EACRzJ,UAAoC,QAAzBL,GAAWK,UAAsB,OAAS,QAJrByJ,KA2YuD,EAAApP,SAAA,EAC7C,KAAzBsF,GAAWK,WAAoBL,GAAWI,SAAWwJ,EAAmBtN,aAAc9B,EAAAA,EAAAA,KAACuP,EAAAA,GAAc,IAC7E,QAAzB/J,GAAWK,WAAuBL,GAAWI,SAAWwJ,EAAmBtN,YAAa9B,EAAAA,EAAAA,KAACwP,EAAAA,GAAU,IAC1E,SAAzBhK,GAAWK,WAAwBL,GAAWI,SAAWwJ,EAAmBtN,YAAa9B,EAAAA,EAAAA,KAACyP,EAAAA,GAAW,WAPrFL,EAAmBtN,mBAiB5C9B,EAAAA,EAAAA,KAAA,SAAAE,UACe,OAAbwL,SAAa,IAAbA,QAAa,EAAbA,GAAec,QAAS,EACtBd,GAAc+C,KAAI,CAACiB,EAAgCf,KAElD7B,EAAAA,EAAAA,MAAA,MAAA5M,SAAA,CACoB,kBAAlBkE,GACA0I,EAAAA,EAAAA,MAAA,MAAI7M,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,WAAWJ,UAAW5I,EAAmB3C,SAAS2N,EAAajF,IAAKqD,QAASA,IAAMtD,GAAakF,KAAkB,OAG/H,GAGkB,eAAlBtL,GACA0I,EAAAA,EAAAA,MAAA,MAAI7M,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,WAAWJ,UAAW1I,EAAS7C,SAAS2N,EAAajF,IAAKqD,QAASA,IAAMlD,GAAiB8E,KAAkB,OAGzH,IAED1P,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAEyO,EAAQ,KAErC3O,EAAAA,EAAAA,KAAA,MAAAE,SAAKwP,EAAa1D,WAAa,IAAM0D,EAAaC,aAElD3P,EAAAA,EAAAA,KAAA,MAAAE,SAAKwP,EAAaE,QACY,OAA7BF,EAAaG,aAAuB7P,EAAAA,EAAAA,KAAA,MAAAE,SAAKwP,EAAaG,eAAoB7P,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WAE/EF,EAAAA,EAAAA,KAAA,MAAAE,SAAK8J,GAAwB0F,EAAazF,SAC1CjK,EAAAA,EAAAA,KAAA,MAAAE,SAAA,GAAAoJ,QAAQwG,EAAAA,EAAAA,IAAcJ,EAAaK,WAAYC,EAAAA,GAAYC,wBAAuB,SAxB1EP,EAAajF,MA4Bf,OAARhH,QAAQ,IAARA,GAAgC,QAAxBN,EAARM,EAAU2D,8BAAsB,IAAAjE,GAAM,QAANC,EAAhCD,EAAkCK,YAAI,IAAAJ,GAAU,QAAVC,EAAtCD,EAAwCyI,gBAAQ,IAAAxI,OAAxC,EAARA,EAAkDoL,KAAI,CAACyB,EAAoCvB,KAE1F7B,EAAAA,EAAAA,MAAA,MAAA5M,SAAA,CACoB,kBAAlBkE,GACA0I,EAAAA,EAAAA,MAAA,MAAI7M,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,WAAWJ,UAAW5I,EAAmB3C,SAASmO,EAAiBzF,IAAKqD,QAASA,IAAMtD,GAAa0F,KAAsB,OAGvI,GAGkB,eAAlB9L,GACA0I,EAAAA,EAAAA,MAAA,MAAI7M,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAO0N,KAAK,WAAWJ,UAAW1I,EAAS7C,SAASmO,EAAiBzF,IAAKqD,QAASA,IAAMlD,GAAiBsF,KAAsB,OAGjI,IAGDlQ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAEyO,EAAQ,KACtC3O,EAAAA,EAAAA,KAAA,MAAAE,SAAKgQ,EAAiBlE,WAAa,IAAMkE,EAAiBP,aAE1D3P,EAAAA,EAAAA,KAAA,MAAAE,SAAKgQ,EAAiBN,QACY,OAAjCM,EAAiBL,aAAuB7P,EAAAA,EAAAA,KAAA,MAAAE,SAAKgQ,EAAiBL,eAAoB7P,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WAEvFF,EAAAA,EAAAA,KAAA,MAAAE,SAAK8J,GAAwBkG,EAAiBjG,SAC9CjK,EAAAA,EAAAA,KAAA,MAAAE,SAAA,GAAAoJ,QAAQwG,EAAAA,EAAAA,IAAcI,EAAiBH,WAAYC,EAAAA,GAAYC,wBAAuB,SAxB9EC,EAAiBzF,cAgCjCqC,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,6CAA4CC,SAAA,EAC1D4M,EAAAA,EAAAA,MAAA,QAAM7M,UAAU,yBAAwBC,SAAA,CAC9B,OAARuD,QAAQ,IAARA,GAAgC,QAAxBH,EAARG,EAAU2D,8BAAsB,IAAA9D,GAAhCA,EAAkCE,KAAI,GAAA8F,OAAc,OAAR9E,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,OAAU,GACjEpG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEqD,EAAE,uBAE3BvD,EAAAA,EAAAA,KAACmQ,EAAAA,EAAU,CAACC,YAAa5K,GAAWG,KAAMU,WAAYA,GAAYgK,aAAc7J,GAAiCP,eAAgBA,WAInI,OAGFjG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACpE4M,EAAAA,EAAAA,MAAA,OAAK7M,UAAU,YAAWC,SAAA,EACzBF,EAAAA,EAAAA,KAAC6N,EAAAA,EAAM,CAACH,KAAK,SAASzN,UAAU,yBAAyBkN,MAAO/H,EAAOqF,GAAKlH,EAAE,UAAYA,EAAE,QAC5FiE,MAAK,GAAA8B,OAAKlE,EAAOqF,GAAKlH,EAAE,UAAYA,EAAE,SAAUrD,UAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACpBF,EAAAA,EAAAA,KAACsQ,EAAAA,GAAW,SAGdtQ,EAAAA,EAAAA,KAAC6N,EAAAA,EAAM,CAAC5N,UAAU,yBAAyBkN,MAAO5J,EAAE,UAAWuK,QAAS3E,GAAU3B,MAAK,GAAA8B,OAAK/F,EAAE,WAAYrD,UACzGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACpBF,EAAAA,EAAAA,KAACuQ,EAAAA,GAAK,CAACtQ,UAAU,mCAOlB,C","sources":["components/ckEditor/ckEditor.tsx","components/customHooks/useTranslationFormErrors.tsx","framework/graphql/mutations/announcement.ts","framework/graphql/queries/announcement.ts","views/announcement/addAnnouncement.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { JoditEditorProps } from 'src/types/component';\n\nimport JoditReact from 'jodit-react-ts';\nimport 'jodit/build/jodit.min.css';\n\nconst CKEditorComponent: React.FC<JoditEditorProps> = ({ onChange, value='' }) => {\n\tconst config = {\n\t\treadonly: false,\n\t\tautofocus: false,\n\t\ttabIndex: 1,\n\t\taskBeforePasteHTML: false,\n\t\taskBeforePasteFromWord: false,\n\t\tdefaultActionOnPaste: 'insert_clear_html',\n\t\tplaceholder: 'Write something awesome ...',\n\t\tbeautyHTML: true,\n\t\ttoolbarButtonSize: 'large',\n\t\tuploader: {\n\t\t\tinsertImageAsBase64URI: true,\n\t\t},\n\t\theight: 596\n\t};\n\tconst handleEditorChange = useCallback((editor: string) => {\n\t\tonChange(editor);\n\t}, []);\n\treturn (\n\t\t<div className='App'>\n\t\t\t<JoditReact onChange={handleEditorChange} config={config} defaultValue={value} />\n\t\t</div>\n\t);\n};\n\nexport default React.memo(CKEditorComponent);\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { FormikErrors, FormikTouched, FormikValues } from 'formik';\n\nexport const useTranslateFormErrors = (errors: FormikErrors<FormikValues>, touched: FormikTouched<FormikValues>, setFieldTouched: (field: string, touched?: boolean, shouldValidate?: boolean) => Promise<FormikErrors<FormikValues>> | Promise<void>) => {\n\tconst { i18n } = useTranslation();\n\tuseEffect(() => {\n\t\ti18n.on('languageChanged', () => {\n\t\t\tObject.keys(errors).forEach((fieldName) => {\n\t\t\t\tif (Object.keys(touched).includes(fieldName)) {\n\t\t\t\t\tsetFieldTouched(fieldName);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn () => {\n\t\t\ti18n.off('languageChanged', () => {\n\t\t\t\treturn;\n\t\t\t});\n\t\t};\n\t}, [errors]);\n};\n\nconst WithTranslateFormErrors = ({ errors, touched, setFieldTouched, children }: { errors: FormikErrors<FormikValues>; touched: FormikTouched<FormikValues>; setFieldTouched: (field: string, touched?: boolean, shouldValidate?: boolean) => Promise<FormikErrors<FormikValues>> | Promise<void>; children: React.ReactNode }) => {\n\tuseTranslateFormErrors(errors, touched, setFieldTouched);\n\treturn <>{children}</>;\n};\n\nexport default WithTranslateFormErrors;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_ANNOUNCEMENT = gql`\nmutation CreateAnnouncement($title: String, $description: String, $announcementType: String, $emailAttachment: String, $pushImage: String, $platform: String, $userType: String, $userFilter: String, $userToExclude: [Int], $onlySendTo: [Int], $startDate: Date, $endDate: Date) {\n  createAnnouncement(title: $title, description: $description, announcement_type: $announcementType, email_attachment: $emailAttachment, push_image: $pushImage, platform: $platform, userType: $userType, userFilter: $userFilter, userToExclude: $userToExclude, onlySendTo: $onlySendTo, start_date: $startDate, end_date: $endDate) {\n    data {\n      id\n      uuid\n      user_id\n      title\n      description\n      announcement_type\n      email_attachment\n      push_image\n      platform\n      userType\n      userFilter\n      userToExclude\n      onlySendTo\n      start_date\n      end_date\n      status\n      created_at\n      updated_at\n    }\n    meta {\n      message\n      messageCode\n      statusCode\n      status\n      type\n      errors {\n        errorField\n        error\n      }\n      errorType\n    }\n  }\n}`\n\nexport const UPDATE_READ_ANNOUNCEMENTS_FOR_USER = gql`\n  mutation UpdateReadAnnouncementsForUser {\n    updateReadAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`","import { gql } from '@apollo/client';\n\n  export const GET_ANNOUNCEMENTS = gql `\n  query FetchAnnouncementsWithFilters($page: Int, $limit: Int, $sortBy: String, $sortOrder: String, $title: String, $startDate: String, $endDate: String, $announcementType: String, $platform: String, $status: Int) {\n    fetchAnnouncementsWithFilters(page: $page, limit: $limit, sortBy: $sortBy, sortOrder: $sortOrder, title: $title, start_date: $startDate, end_date: $endDate, announcement_type: $announcementType, platform: $platform, status: $status) {\n      data {\n        announcementData {\n          id\n          uuid\n          user_id\n          title\n          description\n          announcement_type\n          email_attachment\n          push_image\n          platform\n          userType\n          userFilter\n          userToExclude\n          onlySendTo\n          start_date\n          end_date\n          status\n          created_at\n          updated_at\n        }\n        count\n      }\n      meta {\n        message\n        messageCode\n        statusCode\n        status\n        type\n        errors {\n          errorField\n          error\n        }\n        errorType\n      }\n    }\n  }`\n\n\n\n\nexport const GET_USER = gql `\nquery GetUsersWithPagination($page: Int, $limit: Int, $sortBy: String, $sortOrder: String, $firstName: String, $lastName: String, $email: String, $status: Int, $gender: Int, $phoneNo: String) {\n  getUsersWithPagination(page: $page, limit: $limit, sortBy: $sortBy, sortOrder: $sortOrder, first_name: $firstName, last_name: $lastName, email: $email, status: $status, gender: $gender, phone_no: $phoneNo) {\n    data {\n      userList {\n        id\n        uuid\n        first_name\n        middle_name\n        last_name\n        user_name\n        email\n        gender\n        date_of_birth\n        phone_no\n        phone_country_id\n        role\n        profile_img\n        device_type\n        status\n        user_role_id\n        created_at\n        updated_at\n      }\n      count\n    }\n    meta {\n      message\n      messageCode\n      statusCode\n      status\n      type\n      errors {\n        errorField\n        error\n      }\n      errorType\n    }\n  }\n}\n`\n\nexport const GET_ANNOUNCEMENT_HISTORY_FOR_USER = gql`\n  query GetAnnouncementHistoryForUser($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n    getAnnouncementHistoryForUser(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENTS_FOR_USERS = gql`\n  query GetAnnouncementsForUser {\n    getAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n          createdAt\n        }\n        count\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENT_BY_ID = gql `\n  query GetAnnouncementById($announcementId: String!) {\n    getAnnouncementById(announcementId: $announcementId) {\n      message\n      data {\n        title\n        uuid\n        description\n        createdAt\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENTS_FOR_USER = gql`\n  query GetAnnouncementsForUser {\n    getAnnouncementsForUser {\n      message\n      data {\n        announcements {\n          uuid\n          title\n          description\n        }\n        count\n      }\n    }\n  }\n`","import React, { useCallback, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\nimport cn from 'classnames';\nimport { AnnouncementRole, DATE_FORMAT, ROUTES, SHOW_PAGE_COUNT_ARR } from '@config/constant';\nimport { GetDefaultIcon, GetAscIcon, GetDescIcon, CheckCircle, Refresh, Search, Cross } from '@components/icons/icons';\nimport uploadFile from '@components/common/uploadFile';\nimport Button from '@components/button/button';\nimport TextInput from '@components/textInput/TextInput';\nimport CkEditor from '@components/ckEditor/ckEditor';\nimport RadioButtonNew from '@components/radiobutton/radioButtonNew';\nimport Pagination from '@components/Pagination/Pagination';\nimport filterServiceProps from '@components/filter/filter';\nimport WithTranslateFormErrors from '@components/customHooks/useTranslationFormErrors';\nimport { createAnnouncementRes, UserDataAnnounce, UserDataType } from '@framework/graphql/graphql';\nimport { CREATE_ANNOUNCEMENT } from '@framework/graphql/mutations/announcement';\nimport { GET_USER } from '@framework/graphql/queries/announcement';\nimport useValidation from '@framework/hooks/validations';\nimport FormClasses from '@pageStyles/Form.module.scss';\nimport { CreateAnnouncement, PaginationParams } from 'src/types/announcement';\nimport { ColArrType } from 'src/types/common';\nimport { getDateFormat, translationFun, whiteSpaceRemover } from '@utils/helpers';\n\nimport { useFormik } from 'formik';\nimport { useMutation, useQuery } from '@apollo/client';\n\nconst AddAnnouncement = () => {\n\tconst { t } = useTranslation();\n\tconst { data: datalist, refetch: getUserData } = useQuery(GET_USER);\n\tconst [createAnnouncement] = useMutation(CREATE_ANNOUNCEMENT);\n\tconst [platFormStatus, setPlatformStatus] = useState<string>('all');\n\tconst [userType, setUserType] = useState<string>('all');\n\tconst [advanceFilter, setAdvanceFilter] = useState<string>('all');\n\tconst [searchTerm, setSearchTerm] = useState('');\n\tconst [userData, setUserData] = useState({} as UserDataType);\n\tconst [userToExcludeState, setUserToExcludeState] = useState<number[]>([]);\n\tconst [onlySend, setOnlySend] = useState<number[]>([]);\n\tconst [selectAll, setSelectAll] = useState(true);\n\tconst { addAnnouncementValidationSchema } = useValidation();\n\tconst navigate = useNavigate();\n\tconst params = useParams();\n\tconst [imagePreview, setImagePreview] = useState<string>('');\n\n\tconst [filterData, setFilterData] = useState<PaginationParams>({\n\t\tlimit: 10,\n\t\tpage: 1,\n\t\tsortBy: '',\n\t\tsortOrder: '',\n\t});\n\n\tconst COL_ARR = [\n\t\t{ name: 'Sr.No', sortable: false },\n\t\t{ name: t('First Name'), sortable: true, fieldName: 'first_name' },\n\t\t{ name: t('Email'), sortable: true, fieldName: 'email' },\n\t\t{ name: t('Device Type'), sortable: true, fieldName: 'device_type' },\n\t\t{ name: t('Role'), sortable: true, fieldName: 'role' },\n\t\t{ name: t('Registration At'), sortable: true, fieldName: 'created_at' },\n\t] as ColArrType[];\n\tconst [recordsPerPage, setRecordsPerPage] = useState<number>(filterData.limit);\n\tconst totalRuleSets = userData?.count || 0;\n\tconst totalPages = Math.ceil(totalRuleSets / recordsPerPage);\n\tconst handlePageChangeAddAnnouncement = useCallback((newPage: number): void => {\n\t\tconst updatedFilterData = {\n\t\t\t...filterData,\n\t\t\tpage: newPage,\n\t\t};\n\n\t\tsetFilterData(updatedFilterData);\n\t\tfilterServiceProps.saveState('filterAddAnnouncement', JSON.stringify(updatedFilterData));\n\t}, []);\n\tuseEffect(() => {\n\t\tconst savedFilterDataJSON = filterServiceProps.getState('filterAddAnnouncement', JSON.stringify(filterData));\n\t\tif (savedFilterDataJSON) {\n\t\t\tconst savedFilterData = JSON.parse(savedFilterDataJSON);\n\t\t\tsetFilterData(savedFilterData);\n\t\t}\n\t}, []);\n\n\t/**\n\t * Used for set user data from res in local variable\n\t */\n\tuseEffect(() => {\n\t\tif (datalist?.getUsersWithPagination) {\n\t\t\tsetUserData(datalist?.getUsersWithPagination?.data);\n\t\t}\n\t}, [datalist?.getUsersWithPagination]);\n\n\tconst initialValues: CreateAnnouncement = {\n\t\ttitle: '',\n\t\tannouncementType: '0',\n\t\tstatus: '',\n\t\tdescription: '',\n\t\tpushImage: '',\n\t\tplatform: '',\n\t\tuserType: '',\n\t\tuserFilter: '',\n\t\tstartDate: '',\n\t\tendDate: '',\n\t\tuserToExclude: [],\n\t\tonlySendTo: [],\n\t};\n\n\tconst handleSelectAllAnnounce = () => {\n\t\tsetSelectAll((prevState) => !prevState);\n\t\tdatalist?.getUsersWithPagination?.data?.userList.map((data: UserDataAnnounce) => {\n\t\t\tsetUserToExcludeState((prev) => [...prev, data?.id]);\n\t\t});\n\n\t\tif (!selectAll) {\n\t\t\tsetUserToExcludeState([]);\n\t\t}\n\t};\n\tconst handleSelectAllList = () => {\n\t\tsetSelectAll((prevState) => !prevState);\n\t\tdatalist?.getUsersWithPagination?.data?.userList.map((data: UserDataAnnounce) => {\n\t\t\tsetOnlySend((prev) => [...prev, data?.id]);\n\t\t});\n\n\t\tif (!selectAll) {\n\t\t\tsetOnlySend([]);\n\t\t}\n\t};\n\n\tconst formik = useFormik({\n\t\tinitialValues,\n\t\tvalidationSchema: addAnnouncementValidationSchema,\n\t\tonSubmit: async (values) => {\n\t\t\tlet imageUrl = formik.values.pushImage;\n\n\t\t\tif (typeof values.pushImage !== 'string') {\n\t\t\t\tif (values.pushImage) {\n\t\t\t\t\timageUrl = await uploadFile(values?.pushImage);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet AnnouncementType = '';\n\t\t\tif (formik.values.announcementType === '1') {\n\t\t\t\tAnnouncementType = 'push';\n\t\t\t} else if (formik.values.announcementType === '2') {\n\t\t\t\tAnnouncementType = 'sms';\n\t\t\t} else {\n\t\t\t\tAnnouncementType = 'email';\n\t\t\t}\n\n\t\t\tcreateAnnouncement({\n\t\t\t\tvariables: {\n\t\t\t\t\ttitle: values?.title,\n\t\t\t\t\tannouncementType: AnnouncementType,\n\t\t\t\t\tdescription: values?.description,\n\t\t\t\t\tpushImage: imageUrl,\n\t\t\t\t\tplatform: platFormStatus,\n\t\t\t\t\tuserType: userType,\n\t\t\t\t\tuserFilter: advanceFilter,\n\t\t\t\t\tstartDate: values?.startDate,\n\t\t\t\t\tendDate: values?.endDate,\n\t\t\t\t\tuserToExclude: userToExcludeState,\n\t\t\t\t\tonlySendTo: onlySend,\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data as createAnnouncementRes;\n\t\t\t\t\tif (data.createAnnouncement.meta.statusCode === 201) {\n\t\t\t\t\t\ttoast.success(data.createAnnouncement.meta.message);\n\t\t\t\t\t\tformik.resetForm();\n\t\t\t\t\t\tonCancel();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoast.error(data.createAnnouncement.meta.message);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\ttoast.error(t('Failed to create'));\n\t\t\t\t});\n\t\t},\n\t});\n\n\tconst onCancel = useCallback(() => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.announcement}/list`);\n\t}, []);\n\n\tconst platFormRadioHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst target = event.target as HTMLInputElement;\n\t\tif (target.value === '0') {\n\t\t\tsetPlatformStatus('all');\n\t\t}\n\t\tif (target.value === '1') {\n\t\t\tsetPlatformStatus('android');\n\t\t}\n\t\tif (target.value === '2') {\n\t\t\tsetPlatformStatus('ios');\n\t\t}\n\t\tif (target.value === '3') {\n\t\t\tsetPlatformStatus('web');\n\t\t}\n\t};\n\tconst userTypeRadioHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst target = event.target as HTMLInputElement;\n\n\t\tif (target.value === '0') {\n\t\t\tsetUserType('all');\n\t\t}\n\t\tif (target.value === '1') {\n\t\t\tsetUserType('customer');\n\t\t}\n\t\tif (target.value === '2') {\n\t\t\tsetUserType('admin');\n\t\t}\n\t\tif (target.value === '3') {\n\t\t\tsetUserType('subAdmin');\n\t\t}\n\t};\n\tconst advanceFilterRadioHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst target = event.target as HTMLInputElement;\n\n\t\tif (target.value === '0') {\n\t\t\tsetAdvanceFilter('all');\n\t\t}\n\t\tif (target.value === '1') {\n\t\t\tsetAdvanceFilter('userToExclude');\n\t\t}\n\t\tif (target.value === '2') {\n\t\t\tsetAdvanceFilter('onlySendTo');\n\t\t}\n\t};\n\n\t/**\n\t * Used for refetch listing of user data after filter\n\t */\n\tuseEffect(() => {\n\t\tif (filterData) {\n\t\t\tgetUserData(filterData).catch((err) => {\n\t\t\t\ttoast.error(err);\n\t\t\t});\n\t\t}\n\t}, [filterData]);\n\t/**\n\t *\n\t * @param sortFieldName Method used for storing sort data\n\t */\n\tconst onHandleSortAnnouncement = (sortFieldName: string) => {\n\t\tsetFilterData({\n\t\t\t...filterData,\n\t\t\tsortBy: sortFieldName,\n\t\t\tsortOrder: filterData.sortOrder === 'asc' ? 'desc' : 'asc',\n\t\t});\n\t};\n\n\t/**\n\t *\n\t * @param e Method used for change dropdown for page limit\n\t */\n\tconst onPageDrpSelectAnnouncement = (e: string) => {\n\t\tsetRecordsPerPage(Number(e));\n\t\tconst updatedFilterData = {\n\t\t\t...filterData,\n\t\t\tlimit: parseInt(e),\n\t\t\tpage: 1,\n\t\t};\n\t\tsetFilterData(updatedFilterData);\n\t\tfilterServiceProps.saveState('filterAddAnnouncement', JSON.stringify(updatedFilterData));\n\t};\n\n\t/**\n\t *\n\t * @param role Method used for getting role name\n\t * @returns\n\t */\n\tconst getAnnouncementRoleName = (role: number) => {\n\t\tconst result = AnnouncementRole.filter((a) => parseInt(a.key) === role);\n\t\treturn result[0]?.name;\n\t};\n\n\tconst handleUserTo = (data: { id: number }) => {\n\t\tsetSelectAll(true);\n\t\tif (userToExcludeState.includes(data.id)) {\n\t\t\tconst userData = userToExcludeState.filter((i) => i !== data.id);\n\t\t\tsetUserToExcludeState(userData);\n\t\t} else {\n\t\t\tsetUserToExcludeState((prev) => [...prev, data.id]);\n\t\t}\n\t};\n\tconst handleOnlySendTo = (data: { id: number }) => {\n\t\tsetSelectAll(true);\n\t\tif (onlySend.includes(data.id)) {\n\t\t\tconst userData = onlySend.filter((i) => i !== data.id);\n\t\t\tsetOnlySend(userData);\n\t\t} else {\n\t\t\tsetOnlySend((prev) => [...prev, data.id]);\n\t\t}\n\t};\n\tconst handleChangeBannerImage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst file = event.target.files?.[0];\n\t\tif (file) {\n\t\t\tformik.setFieldValue('pushImage', file);\n\t\t\tsetImagePreview(URL.createObjectURL(file));\n\t\t}\n\t}, []);\n\tconst [selectedImage, setSelectedImage] = useState<string>('');\n\n\tconst handleResetImage = useCallback(() => {\n\t\tsetImagePreview('');\n\t\tsetSelectedImage('');\n\t\tformik.setFieldValue('pushImage.name', ''); // Reset pushImage.name to an empty string\n\t\tconst fileInput = document.getElementById('image') as HTMLInputElement;\n\t\tif (fileInput) {\n\t\t\tfileInput.value = '';\n\t\t}\n\t}, [setImagePreview, setSelectedImage]);\n\tconst [searchResults, setSearchResults] = useState([]);\n\n\tconst searchedCommentsList = datalist?.getUsersWithPagination?.data?.userList?.filter((c: { first_name: string }) => c.first_name?.toLowerCase().includes(searchTerm?.toLowerCase()));\n\n\tconst onSearch = useCallback(() => {\n\t\t// Perform the search logic on the data\n\t\tconst searchedCommentsList = datalist?.getUsersWithPagination?.data?.userList?.filter((c: { first_name: string }) => c.first_name?.toLowerCase().includes(searchTerm?.toLowerCase()));\n\n\t\t// Update the searchResults state with the filtered data\n\t\tsetSearchResults(searchedCommentsList);\n\t}, [setSearchResults]);\n\n\tconst onReset = useCallback(() => {\n\t\t// Clear the search term and reset the search results\n\t\tsetSearchTerm('');\n\t\tsetSearchResults([]);\n\t}, [setSearchTerm, setSearchResults]);\n\n\tuseEffect(() => {\n\t\tif (userToExcludeState.length === searchedCommentsList?.length) {\n\t\t\tsetSelectAll(false);\n\t\t}\n\t}, [userToExcludeState]);\n\n\tuseEffect(() => {\n\t\tif (onlySend.length === searchedCommentsList?.length) {\n\t\t\tsetSelectAll(false);\n\t\t}\n\t}, [onlySend]);\n\n\tconst OnBlurAnn = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n\t\tformik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n\t}, []);\n\t//CkEditor onChange Function\n\tconst onChange = useCallback((e: string) => {\n\t\tformik.setFieldValue('description', e);\n\t}, []);\n\tuseEffect(() => {\n\t\tsetRecordsPerPage(filterData.limit);\n\t}, [filterData.limit]);\n\tconst onSearchTerm = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetSearchTerm(e.target.value);\n\t}, []);\n\treturn (\n\t\t<div className='w-full mb-4'>\n\t\t\t<WithTranslateFormErrors errors={formik.errors} touched={formik.touched} setFieldTouched={formik.setFieldTouched}>\n\t\t\t\t<form className='bg-white shadow-md rounded  pt-6  border border-[#c8ced3]' onSubmit={formik.handleSubmit}>\n\t\t\t\t\t<div className='flex justify-end pr-8 pb-2'>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{t('Fields marked with')} <span className='text-red-500'>*</span> {t('are mandatory.')}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='grid grid-cols-1 md:grid-cols-2 l:grid-cols-4 gap-6 px-8'>\n\t\t\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t\t\t<TextInput placeholder={t('Title')} name='title' onChange={formik.handleChange} onBlur={OnBlurAnn} label={t('Title')} value={formik.values.title} error={formik.errors.title && formik.touched.title && formik.errors.title} required={true} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<RadioButtonNew\n\t\t\t\t\t\t\t\tid='announcementType'\n\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\tchecked={formik.values.announcementType}\n\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\tname={'announcementType'}\n\t\t\t\t\t\t\t\tradioOptions={[\n\t\t\t\t\t\t\t\t\t{ name: t('Email'), key: 0 },\n\t\t\t\t\t\t\t\t\t{ name: t('Push'), key: 1 },\n\t\t\t\t\t\t\t\t\t{ name: t('SMS'), key: 2 },\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tlabel={t('Type')}\n\t\t\t\t\t\t\t\t// error={formik.errors.announcementType && formik.touched.announcementType ? formik.errors.announcementType : ''}\n\t\t\t\t\t\t\t\terror={formik.touched.announcementType && formik.errors.announcementType || ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='mb-4 px-8'>\n\t\t\t\t\t\t{formik.values.announcementType === '0' ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p className='font-normal text-sm text-gray-700 mb-3'>\n\t\t\t\t\t\t\t\t\t{t('Description')} <span className='text-red-500'>*</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<CkEditor value={formik.values.description} onChange={onChange} />\n\t\t\t\t\t\t\t\t{formik.errors.description && formik.touched.description && <p className='error'>{t(formik.errors.description)}</p>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TextInput placeholder={t('Description')} name='description' onChange={formik.handleChange} onBlur={OnBlurAnn} label={t('Description')} value={formik.values.description} error={formik.errors.description && formik.touched.description && formik.errors.description} required={true} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{formik.values.announcementType === '0' && <p className='font-normal text-sm px-8 mb-3'>{t('Email Attachment')}</p>}\n\t\t\t\t\t{formik.values.announcementType === '1' && <p className='font-normal text-sm px-8 mb-3'>{t('Push Image')}</p>}\n\t\t\t\t\t{formik.values.announcementType !== '2' && (\n\t\t\t\t\t\t<div className='flex'>\n\t\t\t\t\t\t\t<div className='flex justify-start px-8 mb-4'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label htmlFor='image' className=\"after:content-['Browse'] after:text-black-500  after:bg-slate-200 block text-sm font-normal md:p-2 border border-solid h-9 w-full relative after:top-[3px] after:right-0 rounded-sm after:bottom-0 mr-28 after:absolute after:ml-2  after:border after:h-9 after:-translate-y-1 after:inline-flex after:items-center after:md:p-2 \">\n\t\t\t\t\t\t\t\t\t\t{t('Choose file')}\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<TextInput type='file' id='image' name='image' value={translationFun(selectedImage)} placeholder={''} onChange={handleChangeBannerImage} hidden />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=' px-8 '>\n\t\t\t\t\t\t\t\t\t<Button className='btn-pink btn-normal' onClick={handleResetImage} label={t('Reset')}  title={`${t('Reset')}`}></Button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{!formik.touched.pushImage && <div className={`flex items-center text-center ${formik.touched.pushImage ? 'px-8' : ''}`}> {!selectedImage && formik.values.announcementType === '0' && formik.values.pushImage.name} </div>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{formik.values.announcementType === '1' && imagePreview && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{formik.errors.pushImage ? null : (\n\t\t\t\t\t\t\t\t\t\t<div className='flex items-center justify-center h-[150px] w-[200px] mb-2 '>\n\t\t\t\t\t\t\t\t\t\t\t<img src={imagePreview} alt='Image Preview' className='object-fill  w-full aspect-auto rounded-md' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className='mx-8 w-full md:w-auto bg-white  rounded-sm mb-5 border border-[#c8ced3]'>\n\t\t\t\t\t\t<div className='bg-[#f0f3f5] py-3 px-5 flex items-center justify-between border-b border-[#c8ced3]'>\n\t\t\t\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t\t\t\t<span className='text-sm font-normal'>{t('Filter')}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='w-full grid grid-cols-1 lg:grid-cols-2  gap-6 p-5 '>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label className='font-normal'>\n\t\t\t\t\t\t\t\t\t{t('Platform')} <span className='text-red-500'>*</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='radio-btn-group flex mr-6 mt-4 '>\n\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='all' value={'0'} defaultChecked name='platFormStatus' onChange={platFormRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('All')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='android' value={'1'} name='platFormStatus' onChange={platFormRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('Android')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='ios' value={'2'} name='platFormStatus' onChange={platFormRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('IOS')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='web' value={'3'} name='platFormStatus' onChange={platFormRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('WEB')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t\t\t\t\t<label className='font-normal'>\n\t\t\t\t\t\t\t\t\t\t{t('User Type')} <span className='text-red-500'>*</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center mr-6 mt-4 '>\n\t\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='all' value={'0'} defaultChecked name='userType' onChange={userTypeRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('All')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='customer' value={'1'} name='userType' onChange={userTypeRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('Customer')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='admin' value={'2'} name='userType' onChange={userTypeRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('Admin')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='subAdmin' value={'3'} name='userType' onChange={userTypeRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('SubAdmin')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label className='font-normal'>\n\t\t\t\t\t\t\t\t\t{t('Advanced Filters')} <span className='text-red-500'>*</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<div className='flex flex-wrap '>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center mr-6 mt-4 '>\n\t\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='userToExclude' value={'1'} name='advanceFilter' onChange={advanceFilterRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('User To Exclude')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center mr-4 mt-4'>\n\t\t\t\t\t\t\t\t\t\t<div className='radio-btn'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['form-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={cn(FormClasses['radio-btn-group'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className={cn(FormClasses['radio-btn'])}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='radio' id='onlySendTo' value={'2'} name='advanceFilter' onChange={advanceFilterRadioHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='ml-2'>{t('Only Send To')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label className='font-normal'>{t('Registered Between')}</label>\n\t\t\t\t\t\t\t\t<div className='mb-4 mt-3'>\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tplaceholder={t('Start Date')}\n\t\t\t\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\t\t\t\tname='startDate'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tlabel={t('Start Date')}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.startDate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tplaceholder={t('End Date')}\n\t\t\t\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\t\t\t\tname='endDate'\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\t\t\t\tlabel={t('End Date')}\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.endDate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{advanceFilter === 'userToExclude' || advanceFilter === 'onlySendTo' ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className='grid grid-cols-1 md:grid-cols-2 l:grid-cols-4 gap-6 p-5 '>\n\t\t\t\t\t\t\t\t\t<TextInput type='text' id='table-search' value={searchTerm} placeholder={t('Search...')} onChange={onSearchTerm} />\n\t\t\t\t\t\t\t\t\t<div className='btn-group  '>\n\t\t\t\t\t\t\t\t\t\t<Button className='btn-primary' type='button' label={t('Search')} onClick={onSearch}  title={`${t('Search')}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Search className='mr-1' />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button className='btn-warning btn-normal' label={t('Reset')} onClick={onReset}  title={`${t('Refresh')}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Refresh className='mr-1' />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{advanceFilter === 'userToExclude' ? (\n\t\t\t\t\t\t\t\t\t<p className='mb-8 mt-4 px-5'>\n\t\t\t\t\t\t\t\t\t\t<span className='text-red-500'> *</span> {t('notification will be sent to users excepted selected')}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<p className='mb-8 mt-4 px-5'>\n\t\t\t\t\t\t\t\t\t\t<span className='text-red-500'> *</span> {t('notification will be sent to selected users only')}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between pb-2'>\n\t\t\t\t\t\t\t\t\t<div className='p-3 flex items-center justify-start mb-3'>\n\t\t\t\t\t\t\t\t\t\t<span className=' text-sm text-gray-900 font-normal '>{t('Show')}</span>\n\n\t\t\t\t\t\t\t\t\t\t<select className='border border-[#e4e7ea] rounded px-3 text-sm py-1.5 text-gray-500 mx-1 w-[75px] bg-white' onChange={(e) => onPageDrpSelectAnnouncement(e.target.value)} value={filterData.limit}>\n\t\t\t\t\t\t\t\t\t\t\t{SHOW_PAGE_COUNT_ARR?.map((item: number, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={`${index + 1}`}>{item}</option>;\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<span className=' text-sm text-gray-900 font-normal'>{t('entries')}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='p-3 overflow-auto custom-dataTable '>\n\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col' className='text-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{advanceFilter === 'userToExclude' && <input type='checkbox' checked={!selectAll} onChange={handleSelectAllAnnounce} />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{advanceFilter === 'onlySendTo' && <input type='checkbox' checked={!selectAll} onChange={handleSelectAllList} />}\n\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t{COL_ARR?.map((ColValAnnouncement: ColArrType) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col' key={ColValAnnouncement.fieldName}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ColValAnnouncement.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ColValAnnouncement.sortable && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a onClick={() => onHandleSortAnnouncement(ColValAnnouncement.fieldName)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(filterData.sortOrder === '' || filterData.sortBy !== ColValAnnouncement.fieldName) && <GetDefaultIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{filterData.sortOrder === 'asc' && filterData.sortBy === ColValAnnouncement.fieldName && <GetAscIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{filterData.sortOrder === 'desc' && filterData.sortBy === ColValAnnouncement.fieldName && <GetDescIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{searchResults?.length > 0\n\t\t\t\t\t\t\t\t\t\t\t\t? searchResults.map((announceData: UserDataAnnounce, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={announceData.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{advanceFilter === 'userToExclude' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='checkbox' checked={!!userToExcludeState.includes(announceData.id)} onClick={() => handleUserTo(announceData)} />{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{advanceFilter === 'onlySendTo' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='checkbox' checked={!!onlySend.includes(announceData.id)} onClick={() => handleOnlySendTo(announceData)} />{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-center'>{index + 1}</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{announceData.first_name + ' ' + announceData.last_name}</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{announceData.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{announceData.device_type !== null ? <td>{announceData.device_type}</td> : <td> none</td>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{getAnnouncementRoleName(announceData.role)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{`${getDateFormat(announceData.created_at, DATE_FORMAT.momentDateTime24Format)} `}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t\t\t\t: datalist?.getUsersWithPagination?.data?.userList?.map((announcementData: UserDataAnnounce, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={announcementData.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{advanceFilter === 'userToExclude' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='checkbox' checked={!!userToExcludeState.includes(announcementData.id)} onClick={() => handleUserTo(announcementData)} />{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{advanceFilter === 'onlySendTo' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='checkbox' checked={!!onlySend.includes(announcementData.id)} onClick={() => handleOnlySendTo(announcementData)} />{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=' text-center'>{index + 1}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{announcementData.first_name + ' ' + announcementData.last_name}</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{announcementData.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{announcementData.device_type !== null ? <td>{announcementData.device_type}</td> : <td> none</td>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{getAnnouncementRoleName(announcementData.role)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{`${getDateFormat(announcementData.created_at, DATE_FORMAT.momentDateTime24Format)} `}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t  })}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='p-3 flex items-center justify-between mt-8'>\n\t\t\t\t\t\t\t\t\t<span className='text-slate-400 text-xs'>\n\t\t\t\t\t\t\t\t\t\t{datalist?.getUsersWithPagination?.data ? `${userData?.count}` : 0}\n\t\t\t\t\t\t\t\t\t\t<span className='ml-1'>{t('Total Records')}</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<Pagination currentPage={filterData.page} totalPages={totalPages} onPageChange={handlePageChangeAddAnnouncement} recordsPerPage={recordsPerPage} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex  bg-[#f0f3f5] py-2 px-7 border border-[#c8ced3]'>\n\t\t\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t\t\t<Button type='submit' className='btn-primary btn-normal' label={params.id ? t('Update') : t('Save')} \n\t\t\t\t\t\t\ttitle={`${params.id ? t('Update') : t('Save')}`}>\n\t\t\t\t\t\t\t\t<div className='mr-1'>\n\t\t\t\t\t\t\t\t\t<CheckCircle />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button className='btn-warning btn-normal' label={t('Cancel')} onClick={onCancel} title={`${t('Cancel')}`}>\n\t\t\t\t\t\t\t\t<div className='mr-1'>\n\t\t\t\t\t\t\t\t\t<Cross className='mr-1 fill-white' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</WithTranslateFormErrors>\n\t\t</div>\n\t);\n};\n\nexport default AddAnnouncement;\n"],"names":["CKEditorComponent","_ref","onChange","value","handleEditorChange","useCallback","editor","_jsx","className","children","JoditReact","config","readonly","autofocus","tabIndex","askBeforePasteHTML","askBeforePasteFromWord","defaultActionOnPaste","placeholder","beautyHTML","toolbarButtonSize","uploader","insertImageAsBase64URI","height","defaultValue","React","errors","touched","setFieldTouched","useTranslateFormErrors","i18n","useTranslation","useEffect","on","Object","keys","forEach","fieldName","includes","off","_Fragment","CREATE_ANNOUNCEMENT","gql","_templateObject","_taggedTemplateLiteral","UPDATE_READ_ANNOUNCEMENTS_FOR_USER","_templateObject2","GET_USER","GET_ANNOUNCEMENTS_FOR_USERS","_templateObject3","_templateObject4","GET_ANNOUNCEMENT_BY_ID","_templateObject5","_templateObject6","AddAnnouncement","_datalist$getUsersWit6","_datalist$getUsersWit7","_datalist$getUsersWit8","_datalist$getUsersWit12","_datalist$getUsersWit13","_datalist$getUsersWit14","_datalist$getUsersWit15","t","data","datalist","refetch","getUserData","useQuery","createAnnouncement","useMutation","platFormStatus","setPlatformStatus","useState","userType","setUserType","advanceFilter","setAdvanceFilter","searchTerm","setSearchTerm","userData","setUserData","userToExcludeState","setUserToExcludeState","onlySend","setOnlySend","selectAll","setSelectAll","addAnnouncementValidationSchema","useValidation","navigate","useNavigate","params","useParams","imagePreview","setImagePreview","filterData","setFilterData","limit","page","sortBy","sortOrder","COL_ARR","name","sortable","recordsPerPage","setRecordsPerPage","totalRuleSets","count","totalPages","Math","ceil","handlePageChangeAddAnnouncement","newPage","updatedFilterData","filterServiceProps","saveState","JSON","stringify","savedFilterDataJSON","getState","savedFilterData","parse","_datalist$getUsersWit","getUsersWithPagination","formik","useFormik","initialValues","title","announcementType","status","description","pushImage","platform","userFilter","startDate","endDate","userToExclude","onlySendTo","validationSchema","onSubmit","async","imageUrl","values","uploadFile","AnnouncementType","variables","then","res","meta","statusCode","toast","success","message","resetForm","onCancel","error","catch","concat","ROUTES","app","announcement","platFormRadioHandler","event","target","userTypeRadioHandler","advanceFilterRadioHandler","err","getAnnouncementRoleName","role","_result$","AnnouncementRole","filter","a","parseInt","key","handleUserTo","id","i","prev","handleOnlySendTo","handleChangeBannerImage","_event$target$files","file","files","setFieldValue","URL","createObjectURL","selectedImage","setSelectedImage","handleResetImage","fileInput","document","getElementById","searchResults","setSearchResults","searchedCommentsList","userList","c","_c$first_name","first_name","toLowerCase","onSearch","_datalist$getUsersWit9","_datalist$getUsersWit10","_datalist$getUsersWit11","_c$first_name2","onReset","length","OnBlurAnn","e","whiteSpaceRemover","onSearchTerm","WithTranslateFormErrors","_jsxs","handleSubmit","TextInput","handleChange","onBlur","label","required","RadioButtonNew","checked","radioOptions","CkEditor","htmlFor","type","translationFun","hidden","Button","onClick","src","alt","cn","FormClasses","defaultChecked","Search","Refresh","Number","onPageDrpSelectAnnouncement","SHOW_PAGE_COUNT_ARR","map","item","index","scope","handleSelectAllAnnounce","_datalist$getUsersWit2","_datalist$getUsersWit3","prevState","handleSelectAllList","_datalist$getUsersWit4","_datalist$getUsersWit5","ColValAnnouncement","onHandleSortAnnouncement","sortFieldName","GetDefaultIcon","GetAscIcon","GetDescIcon","announceData","last_name","email","device_type","getDateFormat","created_at","DATE_FORMAT","momentDateTime24Format","announcementData","Pagination","currentPage","onPageChange","CheckCircle","Cross"],"sourceRoot":""}