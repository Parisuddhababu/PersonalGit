{"version":3,"file":"static/js/9230.a146a1b0.chunk.js","mappings":"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","sources":["framework/graphql/mutations/technicalManual.ts","framework/graphql/queries/technicalManual.ts","views/subTechnicalManualsAndGuides/subAddEditTechnicalManualsGuides.tsx"],"sourcesContent":["\nimport { gql } from '@apollo/client';\nexport const CREATE_MANUAL_CATEGORY = gql`\nmutation CreateManualCategory($manualCategoryData: CreateManualCategoryDto!) {\n    createManualCategory(manualCategoryData: $manualCategoryData) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n        parent {\n          uuid\n          name\n          description\n          image_url\n        }\n      }\n    }\n  }\n`;\n\nexport const UPDATE_MANUAL_CATEGORY= gql`\nmutation UpdateManualCategory($categoryId: String!, $manualCategoryData: UpdateManualCategoryDto!) {\n    updateManualCategory(categoryId: $categoryId, manualCategoryData: $manualCategoryData) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n      }\n    }\n  }\n`\n\nexport const DELETE_MANUAL_CATEGORY= gql`\nmutation DeleteManualCategory($manualCategoryId: String!) {\n  deleteManualCategory(manualCategoryId: $manualCategoryId) {\n    message\n    data {\n      uuid\n      name\n      description\n      image_url\n      parent {\n        uuid\n        name\n        description\n        image_url\n      }\n    }\n  }\n}`","import { gql } from '@apollo/client';\nexport const GET_MANUAL_CATEGORIES_PAGINATION = gql `\nquery GetManualCategories($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!) {\n  getManualCategories(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search) {\n    message\n    data {\n      manualCategories {\n        uuid\n        name\n        description\n        image_url\n      \n      }\n      count\n    }\n  }\n}\n  `\n  export const GET_PARENT_CATEGORIES = gql `\n  query GetAllParentCategory {\n    getAllParentCategory {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n      }\n    }\n  }`\n\n  export const GET_MANUAL_CATEGORIES_ID = gql `\n  query GetManualCategoryById($manualCategoryId: String!) {\n    getManualCategoryById(manualCategoryId: $manualCategoryId) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n        parent {\n          uuid\n          name\n          description\n          image_url\n        }\n      }\n    }\n  }`\n\nexport const GET_PARENT_MANUAL_CATEGORIES_ID = gql `\n  query GetManualParentCategoryById($manualCategoryId: String!) {\n    getManualParentCategoryById(manualCategoryId: $manualCategoryId) {\n      message\n      data {\n        uuid\n        name\n        description\n        image_url\n        children {\n          uuid\n          name\n          description\n          image_url\n        }\n      }\n    }\n  }`","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback, useEffect, useState, createRef, useRef } from 'react'\nimport { useFormik } from 'formik'\nimport { t } from 'i18next'\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { Dialog } from 'primereact/dialog';\nimport 'primereact/resources/themes/lara-light-indigo/theme.css';\nimport 'primereact/resources/primereact.css';\nimport Cropper, { ReactCropperElement } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport logo from '@assets/images/sidebar-logo.png'\nimport { Camera, Cross } from '@components/icons/icons'\nimport DropDown from '@components/dropdown/dropDown'\nimport TextInput from '@components/textInput/TextInput'\nimport Button from '@components/button/button'\nimport { DropdownOptionType } from 'src/types/component'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { GET_MANUAL_CATEGORIES_ID, GET_PARENT_CATEGORIES } from '@framework/graphql/queries/technicalManual'\nimport { StateDataArr } from '@framework/graphql/graphql'\nimport { CREATE_MANUAL_CATEGORY, UPDATE_MANUAL_CATEGORY } from '@framework/graphql/mutations/technicalManual'\nimport { DATA_URL_TO_FILE, uploadImage } from '@config/constant'\nimport useValidation from '@framework/hooks/validations'\nimport { CreateTechnical } from 'src/types/technicalManual'\nimport { whiteSpaceRemover } from '@utils/helpers'\n\nconst AddEditTechnicalSubManualsGuides = (props: any) => {\n  const [subManualDrpData, setSubManualDrpData] = useState<DropdownOptionType[]>([]);\n  const params = useParams()\n  const { data: manualCategories, refetch: fetchDropDown } = useQuery(GET_PARENT_CATEGORIES);\n  const [createManual] = useMutation(CREATE_MANUAL_CATEGORY);\n  const [updateManual] = useMutation(UPDATE_MANUAL_CATEGORY);\n  const { data: SubscriberByIdData, refetch } = useQuery(GET_MANUAL_CATEGORIES_ID, { variables: { subscribersId: params.id }, skip: !params.id })\n  const { addTechnicalManualChildValidationSchema } = useValidation();\n  const [isSubManualModelShow, setIsSubManualModelShow] = useState<boolean>(false)\n  const [addSubManualClass, setAddSubManualClass] = useState<boolean>(false);\n  const [subManulaImage, setSubManualImage] = useState('');\n  const cropperSubManualRef = createRef<ReactCropperElement>();\n  const [subManualCropper, setSubManualCropper] = useState(false);\n  const [isEditSubManual, setIsEditSubManual] = useState<boolean>(false);\n  const fileInputSubManualRef = useRef<HTMLInputElement | null>(null);\n  const [imageSubManualLoader,setImageSubManualLoader] = useState(false);\n  const initialSubManualValues = {\n    name: '',\n    description: '',\n    image_url: '',\n    parent_id: ''\n\n  }\n\n  const sendDataToParent = () => {\n    props.onData(refetch);\n  }\n\n  const formik = useFormik({\n    initialValues: initialSubManualValues,\n    validationSchema: addTechnicalManualChildValidationSchema,\n    onSubmit: async (values) => {\n      if (props.onData.uuid) {\n        const manualCategoryData = {\n          name: values.name,\n          description: values.description,\n          parent_id: values.parent_id,\n          image_url: values.image_url,\n        };\n        updateManual({\n          variables: {\n            manualCategoryData: manualCategoryData,\n            categoryId: String(props.onData.uuid),\n          },\n        })\n          .then((res) => {\n\n            const data = res.data\n            toast.success(data?.updateManualCategory?.message)\n            formik.resetForm()\n            props.dataRefetch();\n            onCancelSubManual()\n            props.onCloseAddForm()\n\n          })\n          .catch((err) => {\n            toast.error(err?.networkError?.result?.errors[0]?.message)\n\n          })\n\n      } else {\n        createManual({\n          variables: {\n            manualCategoryData: {\n              name: values.name,\n              description: values.description,\n              parent_id: values.parent_id,\n              image_url: values.image_url,\n            },\n          },\n        })\n          .then((res) => {\n            const data = res.data\n            toast.success(data?.createManualCategory?.message)\n            formik.resetForm()\n            props.onCloseAddForm()\n            sendDataToParent()\n          })\n          .catch((err) => {\n            toast.error(err?.networkError?.result?.errors[0]?.message)\n          })\n      }\n    }\n  })\n\n  useEffect(() => {\n    setIsSubManualModelShow(true);\n    setAddSubManualClass(true);\n    if (props?.onData?.uuid) {\n      setIsEditSubManual(true);\n    }\n  }, [props])\n\n\n\n  /**\n * Method used for get state api with id\n */\n  useEffect(() => {\n    if (props.onData.uuid) {\n      refetch({ manualCategoryId: (props.onData.uuid) }).catch((e) => toast.error(e));\n    }\n  }, [props.onData.uuid]);\n\n  useEffect(() => {\n    fetchDropDown()\n    const tempDataArr = [] as DropdownOptionType[];\n    manualCategories?.getAllParentCategory?.data?.map((data: StateDataArr) => {\n      tempDataArr.push({ name: data?.name, key: data?.uuid });\n    });\n    setSubManualDrpData(tempDataArr);\n  }, [manualCategories]);\n\n  const handleSubManualChange = useCallback((event: { target: { value: React.SetStateAction<string | number | null> } }) => {\n    formik.handleChange(event);\n  }, [])\n\n  const handleSubManualLogo = useCallback((e: any) => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      if (file.type.startsWith('image/')) {\n        if (file.size > 5 * 1024 * 1024) {\n          toast.error('Image size must be less than 5MB');\n        } else {\n          const reader = new FileReader();\n          reader.onload = () => {\n            setSubManualImage(reader.result as any);\n            setSubManualCropper(true);\n          };\n          reader.readAsDataURL(file);\n        }\n      } else {\n        toast.error('Please select a valid image file');\n      }\n    }\n    if (fileInputSubManualRef.current) {\n      fileInputSubManualRef.current.value = '';\n    }\n  }, []);\n  /**\n   * \n   * @param fieldName particular field name pass base on error show\n   * @returns \n   */\n  const getErrorTechnicalSubManualMessage = (fieldName: keyof CreateTechnical) => {\n    return formik.errors[fieldName] && formik.touched[fieldName]\n      ? formik.errors[fieldName]\n      : ''\n  }\n\n  const OnSubManualBlur = useCallback((e: React.FocusEvent<HTMLInputElement> | React.FocusEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\n    formik.setFieldValue(e.target.name, whiteSpaceRemover(e));\n  }, []);\n\n  useEffect(() => {\n    if (props.onData.uuid) {\n\n      formik.setValues({\n\n        name: props.onData.name,\n        description: props.onData.description,\n        parent_id: props.onData.parent.uuid,\n        image_url: props.onData.image_url,\n      });\n    }\n  }, [SubscriberByIdData]);\n\n  const getCropSubManualData = async (): Promise<void> => {\n    if (typeof cropperSubManualRef.current?.cropper !== 'undefined') {\n      await setImageSubManualLoader(true);\n      let fileName: string | null = null;\n      const file = DATA_URL_TO_FILE(cropperSubManualRef.current?.cropper.getCroppedCanvas().toDataURL(), 'image.png');\n      const formData = new FormData();\n      formData.append('image', file);\n      fileName = await uploadImage(formData,'');\n      if (fileName) {\n        formik.setFieldValue('image_url', fileName);\n        setSubManualCropper(false);\n      }\n      await setImageSubManualLoader(false);\n    }\n  };\n  const onCancelSubManual = useCallback(() => {\n    setIsSubManualModelShow(false);\n    props.onCloseAddForm()\n  }, [])\n\n  const dialogActionSubManualConst = () => {\n    return (\n      <div className='flex justify-end gap-3 md:gap-5'>\n        <Button className='btn-secondary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Cancel\" onClick={() => setSubManualCropper(false)}  title={`${t('Cancel')}`}  />\n        <Button className='btn-primary btn-normal w-full md:w-[160px] whitespace-nowrap' type='button' label=\"Save\" disabled={imageSubManualLoader} onClick={() => getCropSubManualData()} title={`${t('Save')}`}  />\n      </div>\n    )\n  }\n  return (\n    <>\n      {isSubManualModelShow && (\n        <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isSubManualModelShow ? '' : 'hidden'}`}>\n          <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addSubManualClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n            <div className='w-full mx-5 sm:max-w-[780px]'>\n              {/* <!-- Modal content --> */}\n              <div className='relative bg-white rounded-xl'>\n                {/* <!-- Modal header --> */}\n                <div className='flex items-center justify-between p-5 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                  <h6>{isEditSubManual ? 'Update Manual' : 'Add Manual'}</h6>\n                  {isEditSubManual ? <>     <Button onClick={onCancelSubManual} label={t('')}  title={`${t('Close')}`} >\n                    <span className='text-xl-22'><Cross className='text-error' /></span>\n                  </Button></> : <>     <Button onClick={props.onCloseAddForm} label={t('')} title={`${t('Close')}`} >\n                    <span className='text-xl-22'><Cross className='text-error' /></span>\n                  </Button></>}\n                </div>\n                {/* <!-- Modal body --> */}\n                <div className='w-full '>\n                  <form onSubmit={formik.handleSubmit}>\n                    <div className='p-5 bg-white max-h-[calc(100vh-260px)] overflow-auto'>\n                      <div className='mb-2 text-right'>\n                        {t('Fields marked with')} <span className='text-red-500'>*</span> {t('are mandatory.')}\n                      </div>\n                      <div className='mb-3'>\n                        <div className='box-border flex flex-col items-center justify-center p-5 mb-5 border border-solid border-border-primary rounded-xl'>\n                          <label\n                            htmlFor='image_url'\n                            className='relative flex flex-col items-center justify-center'>\n                            <div className='flex items-center justify-center w-32 h-32 overflow-hidden border border-gray-300 border-solid rounded-full cursor-pointer sm:w-44 sm:h-44'>\n                              {formik?.values?.image_url ? <img src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${formik.values.image_url}`} alt='image_url' className='object-contain w-full h-full bg-black' /> :\n                                <img src={logo} alt='image_url' className='object-contain w-full h-full bg-black' />}\n                            </div>\n                            <input\n                              type=\"file\"\n                              id=\"image_url\"\n                              name=\"image_url\"\n                              accept=\"image/*\"\n                              onChange={handleSubManualLogo}\n                              ref={fileInputSubManualRef}\n                              className=\"hidden\"\n                            />\n                            <div className='absolute bottom-0 p-2 text-2xl font-bold text-white rounded-full right-1 sm:right-2 bg-primary'>{<Camera />}</div>\n                          </label>\n                          {formik.errors.image_url && formik.touched.image_url ? <span className='relative mt-2 md:text-xs-15 error'>{formik.errors.image_url}</span> : ''}\n                        </div>\n                        <div className='mb-4'>\n                          <DropDown placeholder={t('Select Parent Category')} required={true} name='parent_id' onChange={handleSubManualChange} value={formik.values.parent_id} id='parentCategory' label={t('Parent Category')} options={subManualDrpData} error={getErrorTechnicalSubManualMessage('parent_id')} /></div>\n                      </div>\n                      <div className='mb-3'>\n                        <TextInput onBlur={OnSubManualBlur} placeholder={t('Name')} required={true} name='name' onChange={formik.handleChange} label={t('Name')} value={formik.values.name} error={getErrorTechnicalSubManualMessage('name')} />\n                      </div>\n                      <div className='mb-3'>\n                        <TextInput onBlur={OnSubManualBlur} placeholder={t('Description')} required={true} name='description' onChange={formik.handleChange} label={t('Description')} value={formik.values.description} error={getErrorTechnicalSubManualMessage('description')} />\n                      </div>\n                    </div>\n                    <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                      <Button className='btn-primary btn-normal mb-3 md:mb-0 w-full md:w-[160px]' type='submit' label={t('Save')}\n                       title={`${t('Save')}`}  />\n                      {isEditSubManual ? <Button className='btn-secondary btn-normal w-full md:w-[160px]' label={t('Cancel')} onClick={onCancelSubManual}  title={`${t('Cancel')}`}  />\n                        : <Button className='btn-secondary btn-normal w-full md:w-[160px]' label={t('Cancel')} onClick={props.onCloseAddForm}  title={`${t('Cancel')}`} />\n                      }\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <Dialog className=\"custom-dialog\" header=\"Crop Image\" visible={subManualCropper} style={{ width: '50vw' }} onHide={() => setSubManualCropper(false)} footer={() => dialogActionSubManualConst()}>\n        {\n          subManulaImage &&\n          <Cropper\n            ref={cropperSubManualRef}\n            style={{ height: 400, width: '100%' }}\n            zoomTo={0.5}\n            aspectRatio={1}\n            preview=\".img-preview\"\n            src={subManulaImage}\n            viewMode={1}\n            minCropBoxHeight={10}\n            minCropBoxWidth={10}\n            background={false}\n            responsive={true}\n            autoCropArea={1}\n            checkOrientation={false}\n            guides={true}\n            cropBoxResizable={false}\n          />\n        }\n      </Dialog>\n    </>\n  )\n}\n\nexport default AddEditTechnicalSubManualsGuides\n"],"names":["CREATE_MANUAL_CATEGORY","gql","_templateObject","_taggedTemplateLiteral","UPDATE_MANUAL_CATEGORY","_templateObject2","DELETE_MANUAL_CATEGORY","_templateObject3","GET_MANUAL_CATEGORIES_PAGINATION","GET_PARENT_CATEGORIES","GET_MANUAL_CATEGORIES_ID","GET_PARENT_MANUAL_CATEGORIES_ID","_templateObject4","props","_formik$values","subManualDrpData","setSubManualDrpData","useState","params","useParams","data","manualCategories","refetch","fetchDropDown","useQuery","createManual","useMutation","updateManual","SubscriberByIdData","variables","subscribersId","id","skip","addTechnicalManualChildValidationSchema","useValidation","isSubManualModelShow","setIsSubManualModelShow","addSubManualClass","setAddSubManualClass","subManulaImage","setSubManualImage","cropperSubManualRef","createRef","subManualCropper","setSubManualCropper","isEditSubManual","setIsEditSubManual","fileInputSubManualRef","useRef","imageSubManualLoader","setImageSubManualLoader","formik","useFormik","initialValues","name","description","image_url","parent_id","validationSchema","onSubmit","async","onData","uuid","manualCategoryData","values","categoryId","String","then","res","_data$updateManualCat","toast","success","updateManualCategory","message","resetForm","dataRefetch","onCancelSubManual","onCloseAddForm","catch","err","_err$networkError","_err$networkError$res","_err$networkError$res2","error","networkError","result","errors","_data$createManualCat","createManualCategory","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","useEffect","_props$onData","manualCategoryId","e","_manualCategories$get","_manualCategories$get2","tempDataArr","getAllParentCategory","map","push","key","handleSubManualChange","useCallback","event","handleChange","handleSubManualLogo","preventDefault","files","target","length","file","type","startsWith","size","reader","FileReader","onload","readAsDataURL","current","value","getErrorTechnicalSubManualMessage","fieldName","touched","OnSubManualBlur","setFieldValue","whiteSpaceRemover","setValues","parent","dialogActionSubManualConst","_jsxs","className","children","_jsx","Button","label","onClick","title","concat","t","disabled","_cropperSubManualRef$","cropper","_cropperSubManualRef$2","fileName","DATA_URL_TO_FILE","getCroppedCanvas","toDataURL","formData","FormData","append","uploadImage","getCropSubManualData","_Fragment","tabIndex","Cross","handleSubmit","htmlFor","src","process","alt","logo","accept","onChange","ref","Camera","DropDown","placeholder","required","options","TextInput","onBlur","Dialog","header","visible","style","width","onHide","footer","Cropper","height","zoomTo","aspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","guides","cropBoxResizable"],"sourceRoot":""}