{"version":3,"file":"static/js/6685.73e72996.chunk.js","mappings":"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","sources":["framework/graphql/mutations/createBranch.ts","framework/graphql/queries/getCompanyBranches.ts","components/vendorDetails/vendorUserAdd.tsx","components/vendorDetails/vendorUserDetails.tsx","components/vendorDetails/importVendorEmployeesList.tsx","views/vendorDetails/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const CREATE_NEW_BRANCH = gql`\n  mutation CreateCompanyBranch($companyBranchData: CreateCompanyBranchDto!) {\n    createCompanyBranch(companyBranchData: $companyBranchData) {\n      message\n      data {\n        uuid\n      }\n    }\n  }\n`\n\nexport const DELETE_EMPLOYEE_USER = gql`\n  mutation DeleteSubscriberEmployeeUser($subscriberUserId: String!, $userData: DeleteUserDto) {\n    deleteSubscriberEmployeeUser(subscriberUserId: $subscriberUserId, userData: $userData) {\n      message\n    }\n  }\n`","import { gql } from '@apollo/client';\n\nexport const GET_COMPANY_BRANCHES = gql`\n  query GetCompanyBranches($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!, $companyId: String!) {\n    getCompanyBranches(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search, companyId: $companyId) {\n      message\n      data {\n        count\n        branches {          \n          uuid\n          branch {\n            location\n            uuid\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_COMPANY_TENANT_DETAILS = gql`\n  query GetCompanyTenantDetails($companyId: String!, $branchId: String!) {\n    getCompanyTenantDetails(company_id: $companyId, branch_id: $branchId) {\n      message\n      data {\n        email\n        company_name\n        website\n        authorized_person\n        industry_type\n        type        \n        phone_number\n        country_code\n        location\n        total_employees\n      }\n    }\n  }\n`\n\nexport const GET_COMPANY_CONTRACTOR_DETAILS = gql`\nquery GetCompanyContractorDetails($branchId: String!, $companyId: String!) {\n  getCompanyContractorDetails(branch_id: $branchId, company_id: $companyId) {\n    message\n    data {\n      authorized_person\n      company_name\n      email\n      industry_type\n      location\n      total_employees\n      phone_number\n      country_code\n      type\n      website\n    }\n  }\n}\n`\n\nexport const GET_COMPANY_TENANT_EMPLOYEE_LIST = gql`\nquery GetCompanyTenantEmployeeList($userData: GetSubscriberDto!) {\n  getCompanyTenantEmployeeList(userData: $userData) {\n    data {\n      employee {\n        email\n        uuid\n        status\n        first_name\n        last_name\n        phone_number\n        country_code {\n          name\n          id\n          uuid\n          countryCode\n          phoneCode\n        }\n        department\n        user_type\n        company_id {\n          uuid\n          name\n          description\n          type\n          attachments          \n          website_url          \n          industryType {\n            name\n            uuid\n            description\n          }\n        }\n      }\n      count\n    }\n  }\n}\n`\nexport const GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST = gql`\nquery GetCompanyContractorsList($userData: GetSubscriberDto!) {\n  getCompanyContractorsList(userData: $userData) {\n    message\n    data {\n      employee {\n        email\n        uuid\n        status\n        first_name\n        last_name\n        phone_number\n        country_code {         \n          uuid\n          name\n          phoneCode\n        }        \n        department\n        user_type\n        company_id {\n          uuid\n          name\n          description\n          type\n          attachments\n          website_url          \n          industryType {\n            uuid\n            name            \n          }\n          tenantContractorType {\n            uuid\n            name            \n            type\n          }\n        }\n        user_roles {\n          uuid\n          role_id {\n            uuid\n            name\n            description\n            status\n          }\n        }\n      }\n      count\n    }\n  }\n}\n`\n\nexport const GET_USER_DETAILS_BY_ID = gql`\n  query GetUserById($userId: String!) {\n    getUserById(userId: $userId) {\n      message\n      data {\n        user {\n          country_code {\n            countryCode\n            name\n            phoneCode\n            uuid\n          }\n          position\n          email\n          educational_interests\n          first_name\n          last_name\n          user_type\n          is_required_reset_password\n          organization\n          phone_number\n          preferred_language\n          profile_picture\n          role_name\n          uuid\n          pronounce\n          reporting_manager_id {\n            uuid\n            profile_picture\n            last_name\n            first_name\n            location\n            organization\n          }\n          department\n          location\n        }\n        location\n        role_id {\n          name\n          status\n          uuid\n        }\n        role\n      }\n    }\n  }\n`","import Button from '@components/button/button'\nimport { ROUTES } from '@config/constant'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { setCustomCreateNewAccountStep } from 'src/redux/courses-management-slice'\n\ninterface VendorUserProps {\n    companyId: string | null,\n    locationId: string | null,\n}\n\nfunction VendorUserAdd({companyId, locationId}: Readonly<VendorUserProps>) {\n    const { t } = useTranslation()\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const addNewBtn = () => {\n        dispatch(setCustomCreateNewAccountStep(1));\n        navigate(`/${ROUTES.app}/${ROUTES.createNewAccount}/?company_uuid=${companyId}&branch_id=${locationId}&contractor-details-page=true`);\n    }\n\n    return (\n        <>\n            {/* Tenant User Add Component */}\n            <div className='w-full lg:w-[calc(50%-10px)] h-full bg-border-secondary p-5 min-h-[227px] justify-center rounded-xl border border-solid border-border-light-blue-shade flex flex-col items-center'>\n                <div className='mb-[30px]'>\n                    <p className='font-bold text-center'>{t('No employees has been added yet.')}</p>\n                    <p className='font-bold text-center'>{t('Please add employees by clicking Add new button.')}</p>\n                </div>\n                <Button className=\"btn btn-primary text-white whitespace-nowrap w-[160px]\" label={t('Add New')} type=\"button\" onClick={() => addNewBtn()}  title={`${t('Add New')}`} />\n            </div>\n        </>\n    )\n}\n\nexport default VendorUserAdd\n","import { JoinedPhoneNumbersWithCode } from '@config/constant';\nimport React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\n\ninterface VendorDetailsData {\n    getCompanyContractorDetails: {\n        data: {\n            address: string\n            authorized_person: string[]\n            company_name: string\n            email: string[]\n            industry: string\n            location: string\n            phone_number: string[]\n            total_employees: number\n            type: string\n            website: string\n            industry_type: string\n            country_code: string[]\n        }\n    }\n}\n\nfunction VendorUserDetails() {\n    const { t } = useTranslation();\n    const { getCompanyContractorDetails } = useSelector((state: { tenantDetails: VendorDetailsData }) => state.tenantDetails);\n    return (\n        <div className='p-5 mb-5 border border-border-primary rounded-xl bg-light-blue md:mb-7'>\n            {(typeof getCompanyContractorDetails === 'object' && Object.keys(getCompanyContractorDetails)?.length !== 0) && <h6 className='mb-5 leading-7'>{t(getCompanyContractorDetails?.data?.company_name)}</h6>}\n\n            {(typeof getCompanyContractorDetails === 'object' && Object.keys(getCompanyContractorDetails)?.length !== 0) &&<div className=\"flex flex-wrap justify-between gap-3 lg:gap-5\">\n                {/* <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Industry: ')}<span className='block font-bold lg:inline-block'>{getCompanyContractorDetails?.data?.industry_type}</span></p> */}\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Type: ')}<span className='block font-bold lg:inline-block'>{t(getCompanyContractorDetails?.data?.type === '1' ? 'Tenant' : 'Contractor')}</span></p>\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Location: ')}<span className='block font-bold lg:inline-block'>{t(getCompanyContractorDetails?.data?.location)}</span></p>\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Contact Information: ')}<span className='block font-bold lg:inline-block'>{JoinedPhoneNumbersWithCode(getCompanyContractorDetails?.data?.phone_number, getCompanyContractorDetails?.data?.country_code)}</span></p>\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Authorized Person: ')}<span className='block font-bold lg:inline-block'>{t(getCompanyContractorDetails?.data?.authorized_person?.join(', '))}</span></p>\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Website: ')}<span className='block font-bold break-all lg:inline-block'>{t(getCompanyContractorDetails?.data?.website)}</span></p>\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Employees: ')}<span className='block font-bold lg:inline-block'>{getCompanyContractorDetails?.data?.total_employees}</span></p>\n                <p className='break-words w-full md:w-[calc(50%-10px)]'>{t('Email ID: ')}<span className='block font-bold lg:inline-block'>{t(getCompanyContractorDetails?.data?.email?.join(', '))}</span></p>\n            </div>}\n        \n        </div>\n    )\n}\n\nexport default VendorUserDetails\n\n","import React, { useCallback, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next';\nimport Button from '@components/button/button';\nimport { ColArrType } from '@types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Cross } from '@components/icons/icons';\nimport { importEmployeeList } from '@config/common';\n\ninterface VendorEmployeesProps {\n    companyId: string | null,\n    locationId: string | null,\n    onImportCallBack: any\n}\n\ninterface RejectedUserType {\n    uuid: string,\n    first_name: string,\n    last_name: string,    \n    email: string,\n    phone_number: string,\n    role: string,\n    reason: string,\n}\n\nfunction ImportVendorEmployeesList({ companyId, locationId, onImportCallBack }: Readonly<VendorEmployeesProps>) {\n    const { t } = useTranslation();\n    const vendorFileInputRef = useRef<HTMLInputElement | null>(null);\n    const [rejectedVendorUserPopup, setRejectedVendorUserPopup] = useState<boolean>(false);\n    const [rejectedVendorUsersData, setRejectedVendorUsersData] = useState<{successCount: number;rejectCount: number; totalCount: number;rejectedUsers:RejectedUserType[]}>({successCount: 0,rejectCount: 0, totalCount: 0, rejectedUsers: [] });\n    const COL_ARR_REJECT_IMPORT_VENDOR_USER = [\n\t\t{ name: t('Sr.No'), sortable: false },\n\t\t{ name: t('First Name'), sortable: true, fieldName: 'first_name' },\n\t\t{ name: t('Last Name'), sortable: true, fieldName: 'last_name' },\n\t\t{ name: t('email'), sortable: true, fieldName: 'email' },\n\t\t{ name: t('Phone Number'), sortable: true, fieldName: 'phone_number' },\n\t\t{ name: t('Role'), sortable: true, fieldName: 'role' },\n        { name: t('Reason'), sortable: true, fieldName: 'reason' },\n\t] as ColArrType[];\n    const [isVendorImportFiles, setIsVendorImportFiles] = useState<boolean>(false);\n    const onImportVendorEmployeeList = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setIsVendorImportFiles(false);\n        const files = event.currentTarget.files;    \n        await importEmployeeList({\n            files,\n            companyId,\n            branchId: locationId,\n            onImportCallBack,\n            setRejectedUserPopup: setRejectedVendorUserPopup,\n            setRejectedUsersData: setRejectedVendorUsersData,\n\t\t\temployeeType: '2'\n        }) \n    }, [companyId, locationId]);\n\n    const oncancel = () => {\n        setIsVendorImportFiles(false)\n        setRejectedVendorUserPopup(false);\n    }\n    const onImport = useCallback(() => {\n        setIsVendorImportFiles(prev=>!prev)\n    }, [isVendorImportFiles])\n\n    return (\n        <>\n            <div className='w-full lg:w-[calc(50%-10px)] h-full bg-border-secondary p-5 min-h-[227px] justify-center rounded-xl border border-solid border-border-light-blue-shade flex flex-col items-center'>\n                <div className='mb-[30px]'>\n                    <p className='font-bold text-center'>{t('You can import your employees details by clicking import button.')}</p>\n                    <p className='font-bold text-center'>{t('It supports CSV format.')}</p>\n                </div>\n                <Button className='btn btn-primary text-white whitespace-nowrap w-[220px]' type='button' label={'Import Employees List'} onClick={() => onImport()}  title={`${t('Import Employee List')}`} />\n            </div>\n            {rejectedVendorUserPopup && (\n\t\t\t\t<div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${rejectedVendorUserPopup ? '' : 'hidden'}`}>\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${rejectedVendorUserPopup ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[1200px]'>\n\t\t\t\t\t\t\t<div className='relative bg-white rounded-xl'>\n\t\t\t\t\t\t\t\t{/* <!-- Modal header --> */}\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold md:text-xl text-baseColor'>{'Uploaded Employee Details'}</p>\n\t\t\t\t\t\t\t\t\t<Button onClick={() => oncancel()} label=''  title={`${t('Close')}`}>\n\t\t\t\t\t\t\t\t\t\t<span className='text-xl-22'><Cross className='text-error' /></span>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <!-- Modal body --> */}\n                                <div className='flex flex-wrap justify-center gap-3 p-5 md:gap-10'>\n                                    <p className='font-bold max-md:px-5'>Total User: <span className='font-regular'>{rejectedVendorUsersData.totalCount}</span></p>\n                                    <p className='font-bold text-success max-md:px-5'>Success User: <span className='font-regular'>{rejectedVendorUsersData.successCount}</span></p>\n                                    <p className='font-bold text-error max-md:px-5'>Rejected User: <span className='font-regular'>{rejectedVendorUsersData.rejectCount}</span></p>\n                                </div>\n                                <div className='flex items-center justify-between px-5'>\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold md:text-xl text-baseColor'>{'Rejected Employee List'}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='w-full p-5 max-h-[calc(100vh-260px)] overflow-auto'>\n\t\t\t\t\t\t\t\t\t<div className=\"overflow-auto custom-dataTable\">\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{COL_ARR_REJECT_IMPORT_VENDOR_USER?.map((colVal: ColArrType, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'whitespace-nowrap'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`${index + 1}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='flex items-center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{colVal.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t{rejectedVendorUsersData.rejectedUsers?.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(data: RejectedUserType, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={data?.uuid}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left pl-7\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.first_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.phone_number}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.role}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left min-w-[300px]\">{data?.reason}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n            {isVendorImportFiles && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isVendorImportFiles ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${isVendorImportFiles ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n                        <div className='w-full mx-5 sm:max-w-[640px]'>\n                            <div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n                                \n                                <h6 className='mb-6 font-bold leading-normal text-center md:mb-10'>{t('Before you upload the list, the roles should be created')}</h6>\n                                <div className='flex items-center justify-center space-x-5 md:flex-row'>\n                                    <label id='importCsv' className=\"btn btn-primary btn-normal w-full md:w-auto md:min-w-[160px] mb-0\">\n                                        Okay\n                                        <input\n                                            id='importCsv'\n                                            type=\"file\"\n                                            name='importCsv'\n                                            multiple\n                                            ref={vendorFileInputRef}\n                                            className='hidden focus:bg-transparent'\n                                            accept=\".csv\"\n                                            onChange={(e) => onImportVendorEmployeeList(e)}\n                                            key={uuidv4()}\n                                        />\n                                    </label>\n                                    \n                                    <Button className='btn-secondary btn-normal w-full md:w-auto md:min-w-[160px]' label={t('Cancel')} onClick={oncancel}  title={`${t('Cancel')}`}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default ImportVendorEmployeesList\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { ColArrType } from 'src/types/cms';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { API_BASE_URL, CHANGE_STATUS_WARNING_TEXT, ContractorStatus, DELETE_WARNING_TEXT, ROUTES, SHOW_PAGE_COUNT_ARR, TenantUserDetailsDrpData, USER_TYPE, updateBranchId, token } from '@config/constant';\nimport { toast } from 'react-toastify';\nimport Button from '@components/button/button';\nimport { ArrowSortingDown, ArrowSortingUp, Cross, DropdownArrowDown, Edit, Eye, Filter2, GetDefaultIcon, ImportDoc, Search, Trash, Map } from '@components/icons/icons';\nimport TextInput from '@components/textInput/TextInput';\nimport CommonModel from '@components/common/commonModel';\nimport filterServiceProps from '../../components/filter/filter';\nimport Pagination from '@components/Pagination/Pagination';\nimport VendorUserAdd from '@components/vendorDetails/vendorUserAdd';\nimport VendorUserDetails from '@components/vendorDetails/vendorUserDetails';\nimport ImportVendorEmployeesList from '@components/vendorDetails/importVendorEmployeesList';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { GET_COMPANY_CONTRACTOR_DETAILS, GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST, GET_COMPANY_BRANCHES } from '@framework/graphql/queries/getCompanyBranches';\nimport { CREATE_NEW_BRANCH, DELETE_EMPLOYEE_USER } from '@framework/graphql/mutations/createBranch';\nimport axios from 'axios';\nimport DropDown from '@components/dropdown/dropDown';\nimport { setGetCompanyContractorDetails } from 'src/redux/tenant-management-slice';\nimport { setCustomCreateNewAccountStep } from 'src/redux/courses-management-slice';\nimport { UserProfileType, UserRoles } from 'src/types/common';\nimport { DropdownOptionType } from '@types';\nimport { useFormik } from 'formik';\nimport { StateDataArr } from '@framework/graphql/graphql';\nimport { SUBSCRIBER_LOCATION } from '@framework/graphql/queries/createEmployeeLocation';\nimport Loader from '@components/common/loader';\nimport { CHANGE_EMPLOYEE_STATUS } from '@framework/graphql/mutations/contractorPage';\nimport { v4 as uuidv4 } from 'uuid';\nimport RejectedUserPopup from '@components/tenantDetails/rejectedUserPopup';\nimport { importEmployeeList } from '@config/common';\nexport type PaginationParams = {\n\tlimit: number\n\tpage: number\n\tsortField: string\n\tsortOrder: string\n\tsearch: string\n\tcompany_id: string | null\n\tbranch_id: string\n\tindex?: number\n\tstatus?: number\n}\n\ninterface RejectedUserType {\n\tuuid: string,\n\tfirst_name: string,\n\tlast_name: string,\n\temail: string,\n\tphone_number: string,\n\trole: string,\n\treason: string,\n}\n\nconst VendorDetailsPage = () => {\n\tconst dispatch = useDispatch();\n\tconst { t } = useTranslation();\n\tconst navigate = useNavigate();\n\tconst fileVendorDetailsInputRef = useRef<HTMLInputElement | null>(null);\t\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst companyId = queryParams.get('company_uuid');\n\tconst branchId = queryParams.get('branch_id');\n\tconst [deleteEmployeeUser, deleteLoading] = useMutation(DELETE_EMPLOYEE_USER);\n\tconst [isVendorDelete, setIsVendorDelete] = useState<boolean>(false);\n\tconst [vendorLoading, setVendorLoading] = useState<boolean>(false);\n\tconst [rejectedVendorUserPopup, setRejectedVendorUserPopup] = useState<boolean>(false);\n\tconst { contractor } = useSelector(((state: { rolesManagement: { contractor: UserRoles } }) => state.rolesManagement));\n\tconst { userProfileData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n\tconst [rejectedVendorUsersData, setRejectedVendorUsersData] = useState<{ successCount: number; rejectCount: number; totalCount: number; rejectedUsers: RejectedUserType[] }>({ successCount: 0, rejectCount: 0, totalCount: 0, rejectedUsers: [] });\n\tconst [isDeleteVendorData, setIsDeleteVendorData] = useState<{ uuid: string, userType: string | number }>({ uuid: '', userType: '' });\n\tconst [toShowVendorData, setToShowVendorData] = useState<boolean>(false);\n\tconst [isAddNewBranchVendorModelShow, setIsAddNewBranchVendorModelShow] = useState<boolean>(false)\n\tconst [vendorAddClass, setVendorAddClass] = useState<boolean>(false);\n\tconst [isVendorDisable, setIsVendorDisable] = useState(false)\n\tconst [branchVendorDrpData, setBranchVendorDrpData] = useState<DropdownOptionType[]>([]);\n\tconst [createNewBranch, branchLoading] = useMutation(CREATE_NEW_BRANCH);\n\tconst { data: getCompanyBranchesData, refetch: refetchGetCompanyBranchesData } = useQuery(GET_COMPANY_BRANCHES, { variables: { limit: 10, page: 1, sortField: 'createdAt', sortOrder: 'descend', search: '', companyId: companyId } });\n\tconst [stateVendorDrpData, setStateVendorDrpData] = useState<DropdownOptionType[]>([]);\n\tconst { data: subscriberLocation, refetch: subscriberLocationRefetch } = useQuery(SUBSCRIBER_LOCATION, { variables: { companyId: '' } });\n\tconst [updateEmployeeStatus, statusLoading] = useMutation(CHANGE_EMPLOYEE_STATUS)\n\tconst [isStatusVendorModelShow, setIsStatusVendorModelShow] = useState<boolean>(false)\n\tconst [VendorObj, setVendorObj] = useState({} as { first_name: string, uuid: string, last_name: string, department: string, email: string, phone_number: string, user_type: number, status: number });\n\tconst [isImportVendorFiles,setIsImportVendorFiles] = useState<boolean>(false);\n\tconst COL_VENDOR_ARR = [\n\t\t{ name: t('Sr.No'), sortable: false },\n\t\t{ name: t('Employee First Name'), sortable: true, fieldName: 'first_name' },\n\t\t{ name: t('Employee Last Name'), sortable: true, fieldName: 'last_name' },\n\t\t{ name: t('Department'), sortable: true, fieldName: 'department' },\n\t\t{ name: t('User Type'), sortable: true, fieldName: 'user.user_type' },\n\t\t{ name: t('email'), sortable: true, fieldName: 'email' },\n\t\t{ name: t('Phone Number'), sortable: true, fieldName: 'phone_number' },\n\t\t{ name: t('Status'), sortable: true, fieldName: 'user.status' },\n\t] as ColArrType[];\n\t\n\tconst [updateStateVendorDrpData, setUpdateStateVendorDrpData] = useState<DropdownOptionType[]>([]);\n\n\tconst initialVendorValues = {\n\t\tlocationName: '',\n\t\tuserLocation: '',\n\t}\n\n\tconst formik = useFormik({\n\t\tinitialValues: initialVendorValues,\n\t\tonSubmit: () => {\n\t\t\tsetIsAddNewBranchVendorModelShow(false);\n\t\t\tsetVendorAddClass(false);\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (subscriberLocation) {\n\t\t\tsubscriberLocationRefetch();\n\t\t}\n\t}, [])\n\n\tconst { data: getCompanyContractorDetails, refetch: getCompanyContractorDetailsRefetch } = useQuery(GET_COMPANY_CONTRACTOR_DETAILS, {\n\t\tskip: !formik.values.userLocation,\n\t\tfetchPolicy: 'no-cache', variables: { companyId: companyId, branchId: formik?.values?.userLocation }\n\t});\n\n\tconst { data, refetch: getCompanyEmployeeListRefetch } = useQuery(GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST, {\n\t\tskip: !formik.values.userLocation,\n\t\tfetchPolicy: 'no-cache',\n\t\tvariables: {\n\t\t\tuserData: {\n\t\t\t\tlimit: 10,\n\t\t\t\tpage: 1,\n\t\t\t\tsortField: 'createdAt',\n\t\t\t\tsortOrder: 'descend',\n\t\t\t\tsearch: '',\n\t\t\t\tcompany_id: companyId,\n\t\t\t\tbranch_id: formik?.values?.userLocation\n\t\t\t}\n\t\t}\n\t});\n\n\tconst [filterVendorData, setFilterVendorData] = useState<PaginationParams>({\n\t\tlimit: 10,\n\t\tpage: 1,\n\t\tsortField: 'createdAt',\n\t\tsortOrder: 'descend',\n\t\tsearch: '',\n\t\tcompany_id: companyId,\n\t\tbranch_id: formik?.values?.userLocation,\n\t\tindex: 0\n\t});\n\n\tuseEffect(() => {\n\t\tif (getCompanyContractorDetails?.getCompanyContractorDetails?.data) {\n\t\t\tdispatch(setGetCompanyContractorDetails(getCompanyContractorDetails?.getCompanyContractorDetails))\n\t\t}\n\t}, [getCompanyContractorDetails?.getCompanyContractorDetails?.data])\n\n\tuseEffect(() => {\n\t\tif (formik?.values?.userLocation) {\n\t\t\tupdateBranchId(formik.values.userLocation);\n\t\t\tsetFilterVendorData({\n\t\t\t\t...filterVendorData,\n\t\t\t\tbranch_id: formik?.values?.userLocation\n\t\t\t});\n\t\t}\n\t}, [formik.values.userLocation])\n\n\tuseEffect(() => {\n\t\tif (filterVendorData?.branch_id) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\tconst { index, ...newObject } = filterVendorData;\n\t\t\tgetCompanyEmployeeListRefetch({ userData: { ...newObject } }).catch((err) => toast.error(err));\n\t\t}\n\t}, [filterVendorData, formik.values.userLocation]);\n\n\tuseEffect(() => {\n\t\tif (data?.getCompanyContractorsList?.data?.count > 0) {\n\t\t\tsetToShowVendorData(true);\n\t\t}\n\t}, [data?.getCompanyContractorsList?.data?.count]);\n\n\n\t/**\n\t *\n\t * @param sortFieldName Method used for storing sort data\n\t */\n\tconst onHandleSortVendor = (sortFieldName: string) => {\n\t\tsetFilterVendorData({\n\t\t\t...filterVendorData,\n\t\t\tsortField: sortFieldName,\n\t\t\tsortOrder: filterVendorData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n\t\t});\n\t};\n\t/**\n\t *\n\t * @param e Method used for change dropdown for page limit\n\t */\n\n\tconst onPageDrpSelectVendor = (e: string) => {\n\t\tsetRecordsPerPageVendor(Number(e));\n\t\tconst updatedFilterData = {\n\t\t\t...filterVendorData,\n\t\t\tlimit: parseInt(e),\n\t\t\tpage: 1,\n\t\t\tsearch: '',\n\t\t\tindex: 0,\n\t\t};\n\t\tsetFilterVendorData(updatedFilterData);\n\t\tfilterServiceProps.saveState(\n\t\t\t'filterContractorUserManagement',\n\t\t\tJSON.stringify(updatedFilterData)\n\t\t);\n\t};\n\n\tconst [recordsPerPageVendor, setRecordsPerPageVendor] = useState<number>(\n\t\tfilterVendorData.limit\n\t);\n\tconst totalVendorManagement = data?.getCompanyContractorsList?.data?.count || 0;\n\tconst totalVendorPages = Math.ceil(totalVendorManagement / recordsPerPageVendor);\n\tconst handleVendorPageChange = useCallback((newPage: number): void => {\n\t\tconst updatedVendorFilterData = {\n\t\t\t...filterVendorData,\n\t\t\tpage: newPage,\n\t\t\tindex: (newPage - 1) * filterVendorData.limit,\n\t\t};\n\t\tsetFilterVendorData(updatedVendorFilterData);\n\t\tfilterServiceProps.saveState(\n\t\t\t'filterContractorUserManagement',\n\t\t\tJSON.stringify(updatedVendorFilterData)\n\t\t);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetRecordsPerPageVendor(filterVendorData.limit);\n\t}, [filterVendorData.limit]);\n\n\tconst onVendorDelete = useCallback((id: string, userType: number) => {\n\t\tsetIsVendorDelete(true);\n\t\tsetIsDeleteVendorData({ uuid: id, userType: userType });\n\t}, []);\n\n\tconst onVendorEdit = useCallback((id: string, userType: number) => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.userDetails}/?uuid=${id}&company_id=${companyId}&branchId=${formik?.values?.userLocation}&userCompanyType=2&Is_subAdmin=${userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR}`)\n\t}, [formik.values.userLocation]);\n\n\tconst onVendorView = useCallback((id: string, userType: number) => {\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.userDetails}/?uuid=${id}&read_Data=true&company_id=${companyId}&branchId=${formik?.values?.userLocation}&userCompanyType=2&Is_subAdmin=${userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR}`)\n\t}, [formik.values.userLocation]);\n\n\tconst onVendorClose = useCallback(() => {\n\t\tsetIsVendorDelete(false);\n\t}, []);\n\n\tconst onVendorRemove = useCallback(() => {\n\t\tdeleteEmployeeUser({\n\t\t\tvariables: {\n\t\t\t\tsubscriberUserId: isDeleteVendorData?.uuid,\n\t\t\t\tuserData: {\n\t\t\t\t\tuser_type: isDeleteVendorData?.userType,\n\t\t\t\t}\n\t\t\t},\n\t\t}).then((res) => {\n\t\t\tconst data = res.data.courseData\n\t\t\ttoast.success(data?.message);\n\t\t\tsetIsVendorDelete(false);\n\t\t\tgetCompanyEmployeeListRefetch();\n\t\t\tgetCompanyContractorDetailsRefetch();\n\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\ttoast.error(err?.networkError?.result?.errors?.[0]?.message);\n\t\t\t});\n\t}, [isDeleteVendorData]);\n\n\t/***\n\t\t* @param e Method used for store search value\n\t*/\n\tconst handleVendorChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetFilterVendorData({ ...filterVendorData, search: e.target.value })\n\t}, [])\n\n\tconst onDownloadVendorCsv = useCallback(() => {\n\t\taxios.get(`${API_BASE_URL}users/export-company-contractor-users-csv/?company_id=${companyId}`, { headers: { authorization: token ? `Bearer ${token}` : '' }, responseType: 'blob' })\n\t\t\t.then((response) => {\n\t\t\t\tconst url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t\t\tconst link = document.createElement('a');\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.setAttribute('download', 'Contractor-Users.csv');\n\t\t\t\tdocument.body.appendChild(link);\n\t\t\t\tlink.click();\n\t\t\t\ttoast.success(response?.data?.message);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\ttoast.error(err.message);\n\t\t\t});\n\t}, []);\n\n\tconst onImportVendorEmployeeList = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetIsImportVendorFiles(false)\n\t\tconst files = event.currentTarget.files;\n\t\t\n\n\t\tawait importEmployeeList({\n            files,\n            companyId,\n            branchId,\n            onImportCallBack: onImportCallBack,\n            setRejectedVendorUserPopup,\n            setRejectedVendorUsersData,\n\t\t\temployeeType: '2'\n        }) \n        \n\t\tif (fileVendorDetailsInputRef.current) {\n\t\t\tfileVendorDetailsInputRef.current.value = '';\n\t\t}\n\t}, [companyId, formik?.values?.userLocation]);\n\n\tconst onVendorCancel = () => {\n\t\tsetRejectedVendorUserPopup(false);\n\t\tsetIsImportVendorFiles(false);\n\t}\n\n\tconst onFilterVendorDrpHandleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst selectedSortOption = event.target.value;\n\t\tconst [sortField, sortOrder] = selectedSortOption.split(':');\n\t\tsetFilterVendorData({\n\t\t\t...filterVendorData,\n\t\t\tsortField,\n\t\t\tsortOrder,\n\t\t});\n\t}\n\tconst handleVendorClick = useCallback(() => {\n\t\tsetIsAddNewBranchVendorModelShow(true);\n\t\tsetVendorAddClass(true);\n\t}, []);\n\n\tconst headerVendorActionConst = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_ADMIN && contractor?.write) &&\n\t\t\t\t\t<div className={`flex w-full gap-3 xmd:gap-5 lg:w-auto ${vendorLoading ? 'pointer-events-none' : ''}`}>\n\t\t\t\t\t\t<Button className='btn-normal btn-secondary whitespace-nowrap' label={t('+ Add New Location')} onClick={handleVendorClick} />\n\t\t\t\t\t\t<DropDown placeholder={'Select Location'} className='w-[212px] -mt-2 max-md:mr-2' label='' inputIcon={<Map fontSize='18' />} name='userLocation' onChange={formik.handleChange} value={formik.values.userLocation} error={formik?.errors?.userLocation} options={branchVendorDrpData} id='userLocation' />\n\t\t\t\t\t</div>}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst onDownloadVendorSampleCsv = useCallback(() => {\n\t\taxios.get(`${API_BASE_URL}media/download-csv/contractor`, { headers: { authorization: token ? `Bearer ${token}` : '' }, responseType: 'blob' })\n\t\t\t.then((response) => {\n\t\t\t\tconst url = window.URL.createObjectURL(new Blob([response.data]));\n\t\t\t\tconst link = document.createElement('a');\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.setAttribute('download', 'Contractor-Sample.csv');\n\t\t\t\tdocument.body.appendChild(link);\n\t\t\t\tlink.click();\n\t\t\t\ttoast.success(response?.data?.message);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\ttoast.error(err.message);\n\t\t\t});\n\t}, []);\n\n\tconst userType = userProfileData?.getProfile?.data?.user_type ?? ''\n\n\tconst addNewVendorBtn = () => {\n\t\tdispatch(setCustomCreateNewAccountStep(1));\n\t\tnavigate(`/${ROUTES.app}/${ROUTES.createNewAccount}/?company_uuid=${companyId}&branch_id=${formik?.values?.userLocation}&contractor-details-page=true`);\n\t}\n\n\tuseEffect(() => {\n\t\tconst tempDataArr = [] as DropdownOptionType[];\n\t\tif (getCompanyBranchesData?.getCompanyBranches) {\n\t\t\tlet userLocationData = '' as string;\n\t\t\tif (branchId) {\n\t\t\t\tuserLocationData = branchId\n\t\t\t} else if (getCompanyBranchesData?.getCompanyBranches?.data?.branches?.[0]?.branch?.uuid) {\n\t\t\t\tuserLocationData = getCompanyBranchesData?.getCompanyBranches?.data?.branches?.[0]?.branch?.uuid\n\t\t\t}\n\t\t\tgetCompanyBranchesData?.getCompanyBranches?.data?.branches?.map((data: StateDataArr) => {\n\t\t\t\ttempDataArr.push({ name: data?.branch?.location, key: data?.branch?.uuid });\n\t\t\t});\n\t\t\tsetBranchVendorDrpData(tempDataArr);\n\t\t\tformik.setFieldValue('userLocation', userLocationData)\n\t\t}\n\t}, [getCompanyBranchesData, branchId])\n\n\tconst onCancelVendor = useCallback(() => {\n\t\tsetIsAddNewBranchVendorModelShow(false);\n\t\tformik.setFieldValue('locationName', '');\n\t\tsetVendorAddClass(false);\n\t}, [])\n\n\tconst onVendorLocationAdd = useCallback(() => {\n\t\tcreateNewBranch({\n\t\t\tvariables: {\n\t\t\t\tcompanyBranchData: {\n\t\t\t\t\t// name: formik.values.locationName,\n\t\t\t\t\tcompany_id: companyId,\n\t\t\t\t\tbranch_id: formik.values.locationName,\n\t\t\t\t}\n\t\t\t},\n\t\t}).then((res) => {\n\t\t\tconst data = res.data.courseData\n\t\t\ttoast.success(data?.message);\n\t\t\trefetchGetCompanyBranchesData();\n\t\t\tsetIsAddNewBranchVendorModelShow(false);\n\t\t\tformik.resetForm();\n\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\ttoast.error(err?.networkError?.result?.errors?.[0]?.message);\n\t\t\t\tsetIsAddNewBranchVendorModelShow(false);\n\t\t\t});\n\t}, [formik.values.locationName])\n\n\tuseEffect(() => {\n\t\tif (subscriberLocation?.subscriberLocations) {\n\t\t\tconst tempDataArr = [] as DropdownOptionType[];\n\t\t\tsubscriberLocation?.subscriberLocations?.data?.map((data: { location: string, uuid: string }) => {\n\t\t\t\ttempDataArr.push({ name: data.location, key: data?.uuid });\n\t\t\t});\n\t\t\tsetStateVendorDrpData(tempDataArr);\n\t\t}\n\t}, [subscriberLocation]);\n\n\tuseEffect(() => {\n\t\tif (branchVendorDrpData?.length > 0 && stateVendorDrpData?.length > 0) {\n\t\t\tconst updatedArray = stateVendorDrpData?.filter(item1 => !branchVendorDrpData.some(item2 => item2.key === item1.key));\n\t\t\tsetUpdateStateVendorDrpData(updatedArray);\n\t\t\tsetIsVendorDisable(updatedArray?.length === 0);\n\t\t}\n\t}, [branchVendorDrpData, stateVendorDrpData])\n\n\n\tconst onChangeVendorStatus = useCallback((data: { first_name: string, uuid: string, last_name: string, department: string, email: string, phone_number: string, user_type: number, status: number }) => {\n\t\tsetIsStatusVendorModelShow(true)\n\t\tsetVendorObj(data)\n\t}, [])\n\n\tconst changeVendorStatus = useCallback(() => {\n\t\tupdateEmployeeStatus({\n\t\t\tvariables: {\n\t\t\t\tsubscriberUserId: VendorObj.uuid,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconst data = res.data\n\t\t\t\ttoast.success(data.activeInactiveEmployee.message)\n\t\t\t\tsetIsStatusVendorModelShow(false)\n\t\t\t\tgetCompanyEmployeeListRefetch()\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\ttoast.error(err?.networkError?.result?.errors[0]?.message)\n\t\t\t})\n\t}, [isStatusVendorModelShow])\n\n\tconst onCloseVendorSubscriber = useCallback(() => {\n\t\tsetIsStatusVendorModelShow(false)\n\t}, []);\n\tconst onClickVendorImport = useCallback(()=>{\n\t\tsetIsImportVendorFiles(true);\n\t},[isImportVendorFiles])\n\n\tconst onImportCallBack = useCallback((data: boolean) => {\n        setVendorLoading(data)\n        if (!vendorLoading) {\n            getCompanyEmployeeListRefetch();\n        }\n    }, [data]);\n\n\n\treturn (\n\t\t<>\n\t\t\t{vendorLoading && <Loader />}\n\t\t\t<UpdatedHeader headerActionConst={headerVendorActionConst} />\n\t\t\t<div>\n\t\t\t\t<VendorUserDetails />\n\t\t\t\t{(!toShowVendorData && (userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR : contractor?.write)) && <div className='flex flex-wrap gap-3 mb-5 md:mb-7'>\n\t\t\t\t\t<VendorUserAdd companyId={companyId} locationId={formik?.values?.userLocation} />\n\t\t\t\t\t<ImportVendorEmployeesList companyId={companyId} locationId={formik?.values?.userLocation} onImportCallBack={onImportCallBack} />\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"flex justify-end pb-5 md:pb-7\">\n\t\t\t\t\t<button className=\"btn bg-default btn-secondary btn-normal w-full md:w-[220px] \" type=\"button\" onClick={() => onDownloadVendorSampleCsv()}  title={`${t('Download Sample CSV')}`} >Download Sample CSV</button>\n\t\t\t\t</div>\n\t\t\t\t{toShowVendorData && <div className=\"p-5 overflow-auto border border-solid rounded-xl border-border-primary\">\n\t\t\t\t\t<div className='flex flex-wrap items-center justify-between gap-3 mb-5 md:gap-5'>\n\t\t\t\t\t\t<h6 className='w-full md:w-auto'>{t(`${getCompanyContractorDetails?.getCompanyContractorDetails?.data?.company_name} Employee Details`)}</h6>\n\t\t\t\t\t\t<div className=\"flex flex-wrap w-full gap-3 md:flex-nowrap md:gap-5 md:w-auto\">\n\n\t\t\t\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR : contractor?.write) && <Button className=\"btn btn-primary text-white whitespace-nowrap w-[160px]\" label={t('Add New')} type=\"button\" onClick={() => addNewVendorBtn()}  title={`${t('Add New')}`}  />}\n\n\t\t\t\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR : contractor?.write) && \n\t\t\t\t\t\t\t<Button className='w-full btn btn-gray sm:w-[260px] p-3.5 text-xs-14 md:text-base' label={t('Import Employees List')} onClick={onClickVendorImport}  title={`${t('Import Employee List')}`}  >\n\t\t\t\t\t\t\t<ImportDoc className='order-2 ml-auto ' />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<button className=\"w-full btn btn-gray md:w-[260px] p-3.5\" onClick={() => onDownloadVendorCsv()}  title={`${t('Export Employee List')}`} >\n\t\t\t\t\t\t\t\tExport Employees List  <ImportDoc className='order-2 ml-auto ' />\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t<TextInput placeholder={t('Search Employee')} type='text' id='table-search' value={filterVendorData.search} onChange={handleVendorChange} inputIcon={<Search fontSize='18' />} />\n\n\t\t\t\t\t\t\t<div className='w-full xmd:w-[150px]'>\n\t\t\t\t\t\t\t\t<DropDown\n\t\t\t\t\t\t\t\t\tclassName='w-full -mt-2'\n\t\t\t\t\t\t\t\t\tlabel=''\n\t\t\t\t\t\t\t\t\tinputIcon={<Filter2 className='order-2' />}\n\t\t\t\t\t\t\t\t\tname='filterDrpData'\n\t\t\t\t\t\t\t\t\tonChange={onFilterVendorDrpHandleChange}\n\t\t\t\t\t\t\t\t\tvalue={filterVendorData.sortField + ':' + filterVendorData.sortOrder}\n\t\t\t\t\t\t\t\t\terror=\"\"\n\t\t\t\t\t\t\t\t\toptions={TenantUserDetailsDrpData}\n\t\t\t\t\t\t\t\t\tid='filterDrpData' />\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overflow-auto custom-dataTable\">\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t{COL_VENDOR_ARR?.map((colVal: ColArrType, index: number) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`whitespace-nowrap ${colVal.name == t('Sr.No') ? 'justify-start pl-7 w-[13%]' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`${index + 1}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='flex items-center'\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{colVal.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{colVal.sortable && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='cursor-pointer' onClick={() => onHandleSortVendor(colVal.fieldName)} type=\"button\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(filterVendorData.sortOrder === '' ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterVendorData.sortField !== colVal.fieldName) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GetDefaultIcon className=\"fill-white\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{filterVendorData.sortOrder === 'ascend' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterVendorData.sortField === colVal.fieldName && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowSortingUp className=\"ml-1 fill-white\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{filterVendorData.sortOrder === 'descend' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterVendorData.sortField === colVal.fieldName && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowSortingDown className=\"ml-1 fill-white\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<div className='flex items-center'>\n\t\t\t\t\t\t\t\t\t\t\t{t('Action')}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{data?.getCompanyContractorsList?.data?.employee?.map(\n\t\t\t\t\t\t\t\t\t(data: { first_name: string, uuid: string, last_name: string, department: string, email: string, phone_number: string, user_type: number, status: number }, index: number) => {\n\t\t\t\t\t\t\t\t\t\tconst displayIndex = filterVendorData?.index as number + index + 1;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={data.uuid}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left pl-7\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{displayIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.first_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.last_name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.department}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left border-none\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='flex'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{data?.user_type !== USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-bright-green-shade'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-error'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSub Admin\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-left\">{data?.phone_number}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-left border-none'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='flex'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{data?.status === ContractorStatus.ACTIVE ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-bright-green-shade'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tActive\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-error'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInactive\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='flex'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR : contractor?.read) && <Button className='mx-1 mr-2 bg-transparent btn-default' onClick={() => onVendorView(data?.uuid, data?.user_type)} label={''}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Eye className='text-success' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR : contractor?.update) && <Button className='mr-2 bg-transparent btn-default' onClick={() => onVendorEdit(data?.uuid, data?.user_type)} label={''}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Edit />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR ? userType === USER_TYPE.SUBSCRIBER_SUB_ADMIN_CONTRACTOR : contractor?.delete) && <Button className='mr-2 bg-transparent cursor-pointer btn-default' onClick={() => onVendorDelete(data?.uuid, data?.user_type)} label={''} disabled={deleteLoading?.loading} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Trash className='fill-error' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='flex justify-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : contractor?.update) && <span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='font-medium text-blue-600 hover:underline'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='relative inline-flex items-center mb-0 cursor-pointer'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='sr-only peer'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={data?.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => onChangeVendorStatus(data)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={data?.status === ContractorStatus.ACTIVE}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'w-[30px] h-[14px] bg-secondary rounded-full peer peer-focus:ring-3 peer-focus:ring-red-200 peer-checked:after:translate-x-full peer-checked:after:border-white after:content- after:absolute after:top-[-1px] after:left-0 after:bg-white after:drop-shadow-outline-2 after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-primary'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t{(data?.getCompanyContractorsList?.data?.count === 0 ||\n\t\t\t\t\t\t\tdata?.getCompanyContractorsList?.data === null) && (\n\t\t\t\t\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t\t\t\t\t<div>{t('No Data')}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex flex-wrap items-center px-6 mt-3 gap-y-3 gap-x-6\">\n\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t<span className=\"text-sm font-normal text-gray-700 \">\n\t\t\t\t\t\t\t\t{t('Per Page')}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName=\"border border-border-primary rounded-xl ml-2 px-3 text-sm py-1.5 text-gray-500 w-[70px] h-[36px] appearance-none bg-white\"\n\t\t\t\t\t\t\t\tonChange={(e) => onPageDrpSelectVendor(e.target.value)}\n\t\t\t\t\t\t\t\tvalue={filterVendorData.limit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{SHOW_PAGE_COUNT_ARR?.map((data: number) => {\n\t\t\t\t\t\t\t\t\treturn <option key={data}>{data}</option>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tcurrentPage={filterVendorData.page}\n\t\t\t\t\t\t\ttotalPages={totalVendorPages}\n\t\t\t\t\t\t\tonPageChange={handleVendorPageChange}\n\t\t\t\t\t\t\trecordsPerPage={recordsPerPageVendor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t</div>\n\n\t\t\t{isAddNewBranchVendorModelShow && (\n\t\t\t\t<div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isAddNewBranchVendorModelShow ? '' : 'hidden'}`}>\n\t\t\t\t\t<div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${vendorAddClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n\t\t\t\t\t\t<div className='w-full mx-5 sm:max-w-[400px]'>\n\t\t\t\t\t\t\t{/* <!-- Modal content --> */}\n\t\t\t\t\t\t\t<div className='relative bg-white rounded-xl'>\n\t\t\t\t\t\t\t\t{/* <!-- Modal header --> */}\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n\t\t\t\t\t\t\t\t\t<p className='text-lg font-bold md:text-xl text-baseColor'>{'Add New Location'}</p>\n\t\t\t\t\t\t\t\t\t<Button onClick={onCancelVendor} label={t('')} title={`${t('Close')}`} >\n\t\t\t\t\t\t\t\t\t\t<span className='text-xl-22'><Cross className='text-error' /></span>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <!-- Modal body --> */}\n\t\t\t\t\t\t\t\t{!isVendorDisable && <div className='w-full'>\n\t\t\t\t\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<div className='p-5 max-h-[calc(100vh-260px)] overflow-auto'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropDown placeholder={t('Select Location')} className='w-full' label={t('Location')} inputIcon={<span className='text-xs'><DropdownArrowDown className='fill-dark-grey' /></span>} onChange={formik.handleChange} value={formik.values.locationName} error={formik?.errors?.locationName} options={updateStateVendorDrpData} name='locationName' id='locationName' required={true} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-primary btn-normal mb-2 md:mb-0 w-full md:w-auto min-w-[90px]' type='button' label={t('Add')} onClick={() => onVendorLocationAdd()} disabled={branchLoading.loading} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t{isVendorDisable && <div className='mx-5 py-5'>\n\t\t\t\t\t\t\t\t\t<h6 className='error'>This user has been chosen for all locations.</h6>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<RejectedUserPopup\n                rejectedUserPopup={rejectedVendorUserPopup}\n                rejectedUsersData={rejectedVendorUsersData}\n                oncancel={onVendorCancel} \n            />\t\t\n\n\t\t\t{isVendorDelete && (\n\t\t\t\t<CommonModel\n\t\t\t\t\twarningText={DELETE_WARNING_TEXT}\n\t\t\t\t\tonClose={onVendorClose}\n\t\t\t\t\taction={() => onVendorRemove()}\n\t\t\t\t\tshow={isVendorDelete}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isImportVendorFiles && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isImportVendorFiles ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${isImportVendorFiles ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n                        <div className='w-full mx-5 sm:max-w-[640px]'>\n                            <div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n                                \n                                <h6 className='mb-6 font-bold leading-normal text-center md:mb-10'>{t('Before you upload the list, the roles should be created')}</h6>\n                                <div className='flex items-center justify-center space-x-5 md:flex-row'>\n                                    <label id='importCsv' className=\"btn btn-primary btn-normal w-full md:w-auto md:min-w-[160px] mb-0\">\n                                        Okay\n                                        <input\n                                            id='importCsv'\n                                            type=\"file\"\n                                            name='importCsv'\n                                            multiple\n                                            ref={fileVendorDetailsInputRef}\n                                            className='hidden focus:bg-transparent'\n                                            accept=\".csv\"\n                                            onChange={(e) => onImportVendorEmployeeList(e)}\n                                            key={uuidv4()}\n                                        />\n                                    </label>\n                                    \n                                    <Button className='btn-secondary btn-normal w-full md:w-auto md:min-w-[160px]' label={t('Cancel')} onClick={onVendorCancel}  title={`${t('Cancel')}`} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n\t\t\t{isStatusVendorModelShow && (\n\t\t\t\t<CommonModel\n\t\t\t\t\twarningText={CHANGE_STATUS_WARNING_TEXT}\n\t\t\t\t\tonClose={onCloseVendorSubscriber}\n\t\t\t\t\taction={changeVendorStatus}\n\t\t\t\t\tshow={isStatusVendorModelShow}\n\t\t\t\t\tdisabled={statusLoading?.loading}\n\t\t\t\t\tisLoading={statusLoading?.loading}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\nexport default VendorDetailsPage;\n"],"names":["CREATE_NEW_BRANCH","gql","_templateObject","_taggedTemplateLiteral","DELETE_EMPLOYEE_USER","_templateObject2","GET_COMPANY_BRANCHES","GET_COMPANY_TENANT_DETAILS","GET_COMPANY_CONTRACTOR_DETAILS","_templateObject3","GET_COMPANY_TENANT_EMPLOYEE_LIST","_templateObject4","GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST","_templateObject5","GET_USER_DETAILS_BY_ID","_templateObject6","_ref","companyId","locationId","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","className","Button","label","type","onClick","setCustomCreateNewAccountStep","concat","ROUTES","app","createNewAccount","title","_Object$keys","_getCompanyContractor","_Object$keys2","_getCompanyContractor2","_getCompanyContractor3","_getCompanyContractor4","_getCompanyContractor5","_getCompanyContractor6","_getCompanyContractor7","_getCompanyContractor8","_getCompanyContractor9","_getCompanyContractor10","_getCompanyContractor11","getCompanyContractorDetails","useSelector","state","tenantDetails","Object","keys","length","data","company_name","location","JoinedPhoneNumbersWithCode","phone_number","country_code","authorized_person","join","website","total_employees","email","_rejectedVendorUsersD","onImportCallBack","vendorFileInputRef","useRef","rejectedVendorUserPopup","setRejectedVendorUserPopup","useState","rejectedVendorUsersData","setRejectedVendorUsersData","successCount","rejectCount","totalCount","rejectedUsers","COL_ARR_REJECT_IMPORT_VENDOR_USER","name","sortable","fieldName","isVendorImportFiles","setIsVendorImportFiles","onImportVendorEmployeeList","useCallback","async","files","event","currentTarget","importEmployeeList","branchId","setRejectedUserPopup","setRejectedUsersData","employeeType","oncancel","onImport","prev","id","tabIndex","Cross","map","colVal","index","scope","first_name","last_name","role","reason","uuid","multiple","ref","accept","onChange","e","uuidv4","VendorDetailsPage","_formik$values","_formik$values2","_formik$values3","_data$getCompanyContr3","_data$getCompanyContr4","_data$getCompanyContr5","_data$getCompanyContr6","_formik$values8","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","_formik$values10","_formik$values11","_data$getCompanyContr7","_data$getCompanyContr8","_data$getCompanyContr9","_data$getCompanyContr10","_data$getCompanyContr11","_data$getCompanyContr12","_formik$errors2","fileVendorDetailsInputRef","queryParams","URLSearchParams","search","get","deleteEmployeeUser","deleteLoading","useMutation","isVendorDelete","setIsVendorDelete","vendorLoading","setVendorLoading","contractor","rolesManagement","userProfileData","userProfile","isDeleteVendorData","setIsDeleteVendorData","userType","toShowVendorData","setToShowVendorData","isAddNewBranchVendorModelShow","setIsAddNewBranchVendorModelShow","vendorAddClass","setVendorAddClass","isVendorDisable","setIsVendorDisable","branchVendorDrpData","setBranchVendorDrpData","createNewBranch","branchLoading","getCompanyBranchesData","refetch","refetchGetCompanyBranchesData","useQuery","variables","limit","page","sortField","sortOrder","stateVendorDrpData","setStateVendorDrpData","subscriberLocation","subscriberLocationRefetch","SUBSCRIBER_LOCATION","updateEmployeeStatus","statusLoading","CHANGE_EMPLOYEE_STATUS","isStatusVendorModelShow","setIsStatusVendorModelShow","VendorObj","setVendorObj","isImportVendorFiles","setIsImportVendorFiles","COL_VENDOR_ARR","updateStateVendorDrpData","setUpdateStateVendorDrpData","formik","useFormik","initialValues","locationName","userLocation","onSubmit","useEffect","getCompanyContractorDetailsRefetch","skip","values","fetchPolicy","getCompanyEmployeeListRefetch","userData","company_id","branch_id","filterVendorData","setFilterVendorData","setGetCompanyContractorDetails","_formik$values4","_formik$values5","updateBranchId","newObject","catch","err","toast","error","_data$getCompanyContr","_data$getCompanyContr2","getCompanyContractorsList","count","recordsPerPageVendor","setRecordsPerPageVendor","totalVendorManagement","totalVendorPages","Math","ceil","handleVendorPageChange","newPage","updatedVendorFilterData","filterServiceProps","saveState","JSON","stringify","onVendorDelete","onVendorEdit","_formik$values6","userDetails","USER_TYPE","SUBSCRIBER_SUB_ADMIN_CONTRACTOR","onVendorView","_formik$values7","onVendorClose","onVendorRemove","subscriberUserId","user_type","then","res","courseData","success","message","_err$networkError","_err$networkError$res","_err$networkError$res2","_err$networkError$res3","networkError","result","errors","handleVendorChange","target","value","onDownloadVendorCsv","axios","API_BASE_URL","headers","authorization","token","responseType","response","_response$data","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","current","onVendorCancel","handleVendorClick","onDownloadVendorSampleCsv","_response$data2","getProfile","tempDataArr","getCompanyBranches","_getCompanyBranchesDa","_getCompanyBranchesDa2","_getCompanyBranchesDa3","_getCompanyBranchesDa4","_getCompanyBranchesDa5","_getCompanyBranchesDa11","_getCompanyBranchesDa12","_getCompanyBranchesDa13","userLocationData","branches","branch","_getCompanyBranchesDa6","_getCompanyBranchesDa7","_getCompanyBranchesDa8","_getCompanyBranchesDa9","_getCompanyBranchesDa10","_data$branch","_data$branch2","push","key","setFieldValue","onCancelVendor","onVendorLocationAdd","companyBranchData","resetForm","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","_err$networkError2$re3","subscriberLocations","_subscriberLocation$s","_subscriberLocation$s2","updatedArray","filter","item1","some","item2","onChangeVendorStatus","changeVendorStatus","activeInactiveEmployee","_err$networkError3","_err$networkError3$re","_err$networkError3$re2","onCloseVendorSubscriber","onClickVendorImport","Loader","UpdatedHeader","headerActionConst","headerVendorActionConst","_formik$errors","SUBSCRIBER_ADMIN","write","DropDown","placeholder","inputIcon","Map","fontSize","handleChange","options","VendorUserDetails","VendorUserAdd","ImportVendorEmployeesList","addNewVendorBtn","_formik$values9","ImportDoc","TextInput","Search","Filter2","selectedSortOption","split","TenantUserDetailsDrpData","onHandleSortVendor","sortFieldName","GetDefaultIcon","ArrowSortingUp","ArrowSortingDown","employee","displayIndex","department","status","ContractorStatus","ACTIVE","read","Eye","update","Edit","delete","disabled","loading","Trash","SUBSCRIBER_TENANT_SUB_ADMIN","checked","Number","updatedFilterData","parseInt","onPageDrpSelectVendor","SHOW_PAGE_COUNT_ARR","Pagination","currentPage","totalPages","onPageChange","recordsPerPage","handleSubmit","DropdownArrowDown","required","RejectedUserPopup","rejectedUserPopup","rejectedUsersData","CommonModel","warningText","DELETE_WARNING_TEXT","onClose","action","show","CHANGE_STATUS_WARNING_TEXT","isLoading"],"sourceRoot":""}