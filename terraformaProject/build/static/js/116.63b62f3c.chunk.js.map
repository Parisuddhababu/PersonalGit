{"version":3,"file":"static/js/116.63b62f3c.chunk.js","mappings":"+KAEO,MAAMA,GAAoBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2NAWvBC,GAAuBH,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mO,uHCXhC,MAAMG,GAAuBL,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ueAkB1BI,GAA6BN,EAAAA,EAAAA,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0aAoBhCK,GAAiCP,EAAAA,EAAAA,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wYAoBpCO,GAAmCT,EAAAA,EAAAA,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,ouBAuCtCS,GAAuCX,EAAAA,EAAAA,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,q9BAoD1CW,GAAyBb,EAAAA,EAAAA,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,o8B,iIC7CzC,QAnFA,SAA4Ba,GAA8E,IAA5E,UAAEC,EAAS,SAAEC,EAAQ,iBAAEC,GAAkDH,EAEnG,MAAMI,GAAuBC,EAAAA,EAAAA,QAAgC,OACvD,EAAEC,IAAMC,EAAAA,EAAAA,OACPC,EAAuBC,IAA4BC,EAAAA,EAAAA,WAAkB,IACrEC,EAAuBC,IAA4BF,EAAAA,EAAAA,WAAkB,IACrEG,EAAsBC,IAA2BJ,EAAAA,EAAAA,UAA+G,CAAEK,aAAc,EAAGC,YAAa,EAAGC,WAAY,EAAGC,cAAe,KAGlOC,GAAuBC,EAAAA,EAAAA,cAAYC,UACrCT,GAAyB,GACzB,MAAMU,EAAQC,EAAMC,cAAcF,YAC5BG,EAAAA,EAAAA,IAAmB,CACrBH,QACArB,YACAC,WACAC,mBACAuB,qBAAsBjB,EACtBkB,qBAAsBb,IAGtBV,EAAqBwB,UACrBxB,EAAqBwB,QAAQC,MAAQ,GACzC,GACD,CAAC5B,EAAWC,IAMT4B,GAAmBV,EAAAA,EAAAA,cAAY,KACjCR,GAA0BmB,IAAUA,GAAK,GAC1C,CAACpB,IAEJ,OACIqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,0JAAyJD,SAAA,EACpKF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,wBAAuBD,SAAC,sEACrCE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,wBAAuBD,SAAC,gCAEzCE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,yDAAyDG,KAAK,SAASC,MAAO,wBAAyBC,QAASA,IAAMV,IAAoBW,MAAM,6BAEtKL,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,CACdC,kBAAmBnC,EACnBoC,kBAAmB/B,EACnBgC,SApBaC,KACrBlC,GAAyB,GACzBH,GAAyB,EAAM,IAqB1BE,IACGyB,EAAAA,EAAAA,KAAA,OAAKW,GAAG,eAAeC,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQb,UAAS,yDAAAc,OAA2DtC,EAAwB,GAAK,UAAWuB,UACxLE,EAAAA,EAAAA,KAAA,OAAKW,GAAG,wBAAwBC,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQb,UAAS,gDAAAc,OAAkDtC,EAAwB,GAAK,mDAAkD,kCAAiCuB,UAChQE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BD,UACzCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,6DAA4DD,SAAA,EAEvEE,EAAAA,EAAAA,KAAA,MAAID,UAAU,qDAAoDD,SAAE5B,EAAE,8DACtE0B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yDAAwDD,SAAA,EACnEF,EAAAA,EAAAA,MAAA,SAAOe,GAAG,YAAYZ,UAAU,oEAAmED,SAAA,CAAC,QAEhGE,EAAAA,EAAAA,KAAA,SACIW,GAAG,YACHT,KAAK,OACLY,KAAK,YACLC,UAAQ,EACRC,IAAKhD,EACL+B,UAAU,8BACVkB,OAAO,OACPC,SAAWC,GAAMpC,EAAqBoC,KACjCC,EAAAA,EAAAA,UAIbpB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,6DAA6DI,MAAOjC,EAAE,UAAWkC,QAASK,SAAUJ,MAAK,GAAAQ,OAAK3C,EAAE,2BAStK,E,gDCxEA,QArBA,SAAsBN,GAAsD,IAArD,UAAEC,EAAS,SAAEC,GAAqCF,EACrE,MAAMyD,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,OACI5B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,0JAAyJD,SAAA,EACpKF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,wBAAuBD,SAAC,sCACrCE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,wBAAuBD,SAAC,yDAEzCE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,0DAA0DG,KAAK,SAASE,QAASA,KAVvGmB,GAASE,EAAAA,EAAAA,IAA8B,SACvCJ,EAAS,IAADR,OAAKa,EAAAA,GAAOC,IAAG,KAAAd,OAAIa,EAAAA,GAAOE,iBAAgB,mBAAAf,OAAkBhD,EAAS,eAAAgD,OAAc/C,EAAQ,+BAU/FuC,MAAM,UAASP,SAAC,cAG5B,ECAA,QAxBA,WAA8B,IAAD+B,EAAAC,EAAAC,EAAAC,EACzB,MAAM,EAAE9D,IAAMC,EAAAA,EAAAA,OACR,wBAAE8D,IAA4BC,EAAAA,EAAAA,KAAaC,GAAsDA,EAAMC,gBACvGC,GAAsC,OAAvBJ,QAAuB,IAAvBA,GAA8B,QAAPJ,EAAvBI,EAAyBK,aAAK,IAAAT,OAAP,EAAvBA,EAAgCU,QAAS,IAA4B,OAAvBN,QAAuB,IAAvBA,GAA8B,QAAPH,EAAvBG,EAAyBK,aAAK,IAAAR,OAAP,EAAvBA,EAAgCU,KAAK,OAClGC,GAA0C,OAAvBR,QAAuB,IAAvBA,GAA0C,QAAnBF,EAAvBE,EAAyBS,yBAAiB,IAAAX,OAAnB,EAAvBA,EAA4CQ,QAAS,IAA4B,OAAvBN,QAAuB,IAAvBA,GAA0C,QAAnBD,EAAvBC,EAAyBS,yBAAiB,IAAAV,OAAnB,EAAvBA,EAA4CQ,KAAK,OAEpI,OACI5C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kEAAiED,SAAA,EAC5EE,EAAAA,EAAAA,KAAA,MAAID,UAAU,yBAAwBD,SAAyB,OAAvBmC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBU,gBACjE/C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oDAAmDD,SAAA,EAE9DF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,WAAU8B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kCAAiCD,SAAmC,MAAV,OAAvBmC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB/B,MAAc,SAAW,mBAC9JN,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,eAAc8B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kCAAiCD,SAAyB,OAAvBmC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBW,eACzIhD,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,wBAAuB8B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kCAAiCD,SAAE2C,QACzH7C,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,0BAAyB0B,EAAAA,EAAAA,MAAA,QAAMG,UAAU,kCAAiCD,SAAA,CAAC,KAAE+C,EAAAA,EAAAA,IAAkD,OAAvBZ,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBa,aAAqC,OAAvBb,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBc,qBAC/L,OAAvBd,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBe,WAAWpD,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,cAAa8B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,4CAA2CD,SAAyB,OAAvBmC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBe,cACvLpD,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,gBAAe8B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,kCAAiCD,SAAyB,OAAvBmC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBgB,sBAC1IrD,EAAAA,EAAAA,MAAA,KAAGG,UAAU,+BAA8BD,SAAA,CAAE5B,EAAE,eAAc8B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,4CAA2CD,SAAEuC,YAK1I,E,2NCpBA,MAAMa,EAAM,mBAAAC,EAAAC,UAAAb,OAAIc,EAAO,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPF,EAAOE,GAAAH,UAAAG,GAAA,OACrBF,EAAQG,OAAOC,SAASlB,OAAS,EAAIc,EAAQG,OAAOC,SAASjB,KAAK,KAAO,IAAK,EAGzE,SAASkB,EAAQC,GACtB,OACE3D,EAAAA,EAAAA,KAAA,QACED,UAAWmD,EAAI,GAADrC,OACT,CACD,0WACD,GAAAA,OACmB,WAAZ,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAOC,OACN,8NACA,IAAE,GAAA/C,OAEc,UAAZ,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAOC,OACN,6PACA,IAAE,GAAA/C,OAEc,SAAZ,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAOC,OACN,wIACA,IAAE,GAAA/C,OAEc,UAAZ,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAOC,OACN,SACA,KAEJ9D,SAEI,OAAL6D,QAAK,IAALA,OAAK,EAALA,EAAOE,aAGd,CCOA,QAnCA,SAAajG,GAAmG,IAAlG,gBAAEkG,EAAe,YAAEC,EAAW,SAAEC,EAAQ,QAAE5D,EAAO,aAAE6D,EAAY,KAAE/D,GAA8BtC,EAE3G,MAAMsG,EAA0B,UAAThE,EAAmB,UAAY,UAChDiE,EAA4B,UAATjE,EAAmB,0BAA4B,gBAExE,OACEN,EAAAA,EAAAA,MAAA,OAAKG,UAAU,uDAAsDD,SAAA,CAEzD,YAATI,GAECF,EAAAA,EAAAA,KAAA,OAAKoE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BpE,QAASA,EAAQN,UAC9GE,EAAAA,EAAAA,KAAA,QAAMyE,EAAE,6eAA6eF,KAAK,eAG5fvE,EAAAA,EAAAA,KAAA,OAAKoE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BpE,QAASA,EAAQN,UAC9GE,EAAAA,EAAAA,KAAA,QAAMyE,EAAE,6zCAA6zCF,KAAI,GAAA1D,OAAc,YAATX,EAAqB,UAAYgE,QAIn3ClE,EAAAA,EAAAA,KAAC0D,EAAO,CACNE,MAAOE,EACPD,YAAaE,KAGf/D,EAAAA,EAAAA,KAAA,SACE0E,QAAQ,WACRtE,QAAS6D,EACTlE,UAAS,iCAAAc,OAA4C,YAATX,EAAqB,4BAA8BiE,GAAkBrE,SAChHkE,MAKT,E,0BC0uBA,QA5sBA,WAA8B,IAADW,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzB,MAAMrE,GAAWC,EAAAA,EAAAA,OACX,EAAEtD,KAAMC,EAAAA,EAAAA,MACRkD,IAAWC,EAAAA,EAAAA,MACXuE,IAAe5H,EAAAA,EAAAA,QAAgC,MAC/C6H,GAAiBC,aAAaC,QAAQ,aACtCC,GAAQH,KAAkBI,EAAAA,EAAAA,GAAmBJ,IAC7CK,GAAc,IAAIC,gBAAgBxD,SAASyD,QAC3CxI,GAAYsI,GAAYG,IAAI,gBAC5BxI,GAAWqI,GAAYG,IAAI,cAC1BC,GAAiBC,KAAiBC,EAAAA,EAAAA,GAAY7J,EAAAA,IAC9C8J,GAAoBC,KAAiBF,EAAAA,EAAAA,GAAYzJ,EAAAA,IAChD4J,KAAMC,GAAwBC,QAASC,KAAkCC,EAAAA,EAAAA,GAAS9J,EAAAA,GAAsB,CAAE+J,UAAW,CAAEC,MAAO,GAAIC,KAAM,EAAGC,UAAW,YAAaC,UAAW,UAAWhB,OAAQ,GAAIxI,UAAWA,OAChNiJ,QAASQ,KAAwCN,EAAAA,EAAAA,GAAS7J,EAAAA,GAA4B,CAAEoK,MAAM,KAC/FC,GAAeC,KAAoBnJ,EAAAA,EAAAA,UAA+B,KAClEoJ,GAASC,KAAcrJ,EAAAA,EAAAA,WAAkB,IACzCsJ,GAAUC,KAAevJ,EAAAA,EAAAA,WAAkB,IAC3CiC,GAAmBjB,KAAwBhB,EAAAA,EAAAA,WAAkB,IAC9D,OAAEwJ,KAAW5F,EAAAA,EAAAA,KAAcC,GAAsDA,EAAM4F,mBACvF,gBAAEC,KAAoB9F,EAAAA,EAAAA,KAAcC,GAAiEA,EAAM8F,eAC1GzH,GAAmBjB,KAAwBjB,EAAAA,EAAAA,UAA+G,CAAEK,aAAc,EAAGC,YAAa,EAAGC,WAAY,EAAGC,cAAe,MAC3NoJ,GAAcC,KAAmB7J,EAAAA,EAAAA,UAAsD,CAAE8J,KAAM,GAAIC,SAAU,MAC7GC,GAAYC,KAAiBjK,EAAAA,EAAAA,WAAkB,IAC9CsI,KAAM4B,GAAoB1B,QAAS2B,KAA8BzB,EAAAA,EAAAA,GAAS0B,EAAAA,EAAqB,CAAEzB,UAAW,CAAEpJ,UAAW,OAC1H8K,GAAcC,KAAmBtK,EAAAA,EAAAA,UAA+B,KAChEuK,GAAWC,KAAgBxK,EAAAA,EAAAA,WAAkB,IAC7CyK,GAAoBC,KAAyB1K,EAAAA,EAAAA,UAA+B,KAC5E2K,GAAsBC,KAAiBzC,EAAAA,EAAAA,GAAY0C,EAAAA,KACnDC,GAAmBC,KAAwB/K,EAAAA,EAAAA,WAAkB,IAC7DgL,GAAWC,KAAgBjL,EAAAA,EAAAA,UAAS,CAAC,GAEtCkL,GAAU,CACZ,CAAE1I,KAAM5C,GAAE,SAAUuL,UAAU,GAC9B,CAAE3I,KAAM5C,GAAE,uBAAwBuL,UAAU,EAAMC,UAAW,cAC7D,CAAE5I,KAAM5C,GAAE,sBAAuBuL,UAAU,EAAMC,UAAW,aAC5D,CAAE5I,KAAM5C,GAAE,cAAeuL,UAAU,EAAMC,UAAW,cACpD,CAAE5I,KAAM5C,GAAE,aAAcuL,UAAU,EAAMC,UAAW,kBACnD,CAAE5I,KAAM5C,GAAE,SAAUuL,UAAU,EAAMC,UAAW,SAC/C,CAAE5I,KAAM5C,GAAE,gBAAiBuL,UAAU,EAAMC,UAAW,gBACtD,CAAE5I,KAAM5C,GAAE,UAAWuL,UAAU,EAAMC,UAAW,iBAG7CC,GAAyBC,KAA8BtL,EAAAA,EAAAA,WAAkB,IACzEuL,GAAUC,KAAexL,EAAAA,EAAAA,WAAkB,IAC3CyL,GAAeC,KAAoB1L,EAAAA,EAAAA,WAAkB,IACtD,wBAAE2D,KAA4BC,EAAAA,EAAAA,KAAaC,GAAgDA,EAAMC,gBAMjG6H,IAASC,EAAAA,EAAAA,IAAU,CACrBC,cANkB,CAClBC,aAAc,GACdC,aAAc,IAKdC,SAAUA,KACNV,IAA2B,GAC3BE,IAAY,EAAM,KAI1BS,EAAAA,EAAAA,YAAU,KACF1D,IACAE,IACJ,GACD,KAEHwD,EAAAA,EAAAA,YAAU,KACF/B,IACAC,IACJ,GACD,KAEH8B,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACZ,MAAMC,EAAc,GACpB,IAAIC,EAAmB,GACvB,GAAInN,GACAmN,EAAmBnN,QAChB,GAA0B,OAAtB+I,SAAsB,IAAtBA,IAA0C,QAApB2D,EAAtB3D,GAAwBqE,0BAAkB,IAAAV,GAAM,QAANC,EAA1CD,EAA4C5D,YAAI,IAAA6D,GAAU,QAAVC,EAAhDD,EAAkDU,gBAAQ,IAAAT,GAAK,QAALC,EAA1DD,EAA6D,UAAE,IAAAC,GAAQ,QAARC,EAA/DD,EAAiES,cAAM,IAAAR,GAAvEA,EAAyExC,KAAM,CAAC,IAADiD,EAAAC,EAAAC,EAAAC,EAAAC,EACtFR,EAAyC,OAAtBpE,SAAsB,IAAtBA,IAA0C,QAApBwE,EAAtBxE,GAAwBqE,0BAAkB,IAAAG,GAAM,QAANC,EAA1CD,EAA4CzE,YAAI,IAAA0E,GAAU,QAAVC,EAAhDD,EAAkDH,gBAAQ,IAAAI,GAAK,QAALC,EAA1DD,EAA6D,UAAE,IAAAC,GAAQ,QAARC,EAA/DD,EAAiEJ,cAAM,IAAAK,OAAjD,EAAtBA,EAAyErD,IAChG,CACsB,OAAtBvB,SAAsB,IAAtBA,IAA0C,QAApBgE,EAAtBhE,GAAwBqE,0BAAkB,IAAAL,GAAM,QAANC,EAA1CD,EAA4CjE,YAAI,IAAAkE,GAAU,QAAVC,EAAhDD,EAAkDK,gBAAQ,IAAAJ,GAA1DA,EAA4DW,KAAK9E,IAAwB,IAAD+E,EAAAC,EACpFZ,EAAYa,KAAK,CAAE/K,KAAU,OAAJ8F,QAAI,IAAJA,GAAY,QAAR+E,EAAJ/E,EAAMwE,cAAM,IAAAO,OAAR,EAAJA,EAAc/I,SAAUkJ,IAAS,OAAJlF,QAAI,IAAJA,GAAY,QAARgF,EAAJhF,EAAMwE,cAAM,IAAAQ,OAAR,EAAJA,EAAcxD,MAAO,IAE/EX,GAAiBuD,GACjBf,GAAO8B,cAAc,eAAgBd,EAAiB,GACvD,CAACpE,GAAwB/I,KAE5B,MAAMkO,GAAmC,OAAtBnF,SAAsB,IAAtBA,IAA0C,QAApBlC,EAAtBkC,GAAwBqE,0BAAkB,IAAAvG,GAAM,QAANC,EAA1CD,EAA4CiC,YAAI,IAAAhC,OAA1B,EAAtBA,EAAkDuG,SAASO,KAAK9E,IAAwC,IAADqF,EACtH,OACQ,OAAJrF,QAAI,IAAJA,GAAY,QAARqF,EAAJrF,EAAMwE,cAAM,IAAAa,OAAR,EAAJA,EAAc7D,IAAI,KAIpB,KAAExB,GAAME,QAASoF,KAAkClF,EAAAA,EAAAA,GAAS1J,EAAAA,GAAkC,CAChGiK,MAAO0C,GAAOkC,OAAO9B,aACrB+B,YAAa,WACbnF,UAAW,CACPoF,SAAU,CACNnF,MAAO,GACPC,KAAM,EACNC,UAAW,YACXC,UAAW,UACXhB,OAAQ,GACRiG,WAAYzO,GACZ0O,UAAWtC,GAAOkC,OAAO9B,kBAK9BmC,GAAYC,KAAiBnO,EAAAA,EAAAA,UAA2B,CAC3D4I,MAAO,GACPC,KAAM,EACNC,UAAW,YACXC,UAAW,UACXhB,OAAQ,GACRiG,WAAYzO,GACZ0O,UAAWP,GACXU,MAAO,KAGXnC,EAAAA,EAAAA,YAAU,KACFN,GAAOkC,OAAO9B,gBACdsC,EAAAA,EAAAA,IAAe1C,GAAOkC,OAAO9B,cAC7B/C,GAAoC,CAChCzJ,UAAWA,GACXC,SAAUmM,GAAOkC,OAAO9B,eACzBuC,MAAMC,IAAS,IAADC,EAAAC,EACbxL,GAASyL,EAAAA,EAAAA,IAA8B,OAAHH,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKjG,YAAI,IAAAkG,GAAyB,QAAzBC,EAATD,EAAW7K,+BAAuB,IAAA8K,OAA/B,EAAHA,EAAoCnG,MAAM,IAC/EqG,OAAOC,IACNC,EAAAA,GAAMC,MAAMF,EAAIG,aAAaC,OAAOC,OAAO,GAAGC,QAAQ,IAE9D,GACD,CAACvD,GAAOkC,OAAO9B,eAElB,MAAMoD,IAAmBzO,EAAAA,EAAAA,cAAY,KACjC4K,IAA2B,GAC3BK,GAAO8B,cAAc,eAAgB,IACrCjC,IAAY,EAAM,GACnB,IAEG4D,IAAc1O,EAAAA,EAAAA,cAAY,KAC5B4K,IAA2B,GAC3BE,IAAY,EAAK,GAClB,KAkCHS,EAAAA,EAAAA,YAAU,KACN,GAAIN,GAAOkC,OAAO9B,aAAc,CAE5B,MAAM,MAAEqC,KAAUiB,GAAcnB,GAChCN,GAA8B,CAAEG,SAAU,IAAKsB,EAAWpB,UAAWtC,GAAOkC,OAAO9B,gBAAkB4C,OAAOC,GAAQC,EAAAA,GAAMC,MAAMF,IACpI,IACD,CAACV,GAAYvC,GAAOkC,OAAO9B,eAE9B,MAAOuD,GAAgBC,KAAqBvP,EAAAA,EAAAA,UACxCkO,GAAWtF,OAET4G,IAA0B,OAAJlH,SAAI,IAAJA,IAAkC,QAA9B/B,EAAJ+B,GAAMmH,oCAA4B,IAAAlJ,GAAM,QAANC,EAAlCD,EAAoC+B,YAAI,IAAA9B,OAApC,EAAJA,EAA0CkJ,QAAS,EACzEC,GAAaC,KAAKC,KAAKL,GAAsBF,IAC7CQ,IAAmBpP,EAAAA,EAAAA,cAAaqP,IAClC,MAAMC,EAAoB,IACnB9B,GACHrF,KAAMkH,EACN3B,OAAQ2B,EAAU,GAAK7B,GAAWtF,OAEtCuF,GAAc6B,GACdC,EAAAA,EAAmBC,UACf,6BACAC,KAAKC,UAAUJ,GAClB,GACF,KAEH/D,EAAAA,EAAAA,YAAU,KACNsD,GAAkBrB,GAAWtF,MAAM,GACpC,CAACsF,GAAWtF,QAEf,MAAMyH,IAAgB3P,EAAAA,EAAAA,cAAY,KAC9BuH,GAAgB,CACZU,UAAW,CACP2H,kBAAmB,CAEftC,WAAYzO,GACZ0O,UAAWtC,GAAOkC,OAAO/B,iBAGlCwC,MAAMC,IACL,MAAMjG,EAAOiG,EAAIjG,KAAKiI,WACtB1B,EAAAA,GAAM2B,QAAY,OAAJlI,QAAI,IAAJA,OAAI,EAAJA,EAAM4G,SACpBzG,KACA6C,IAA2B,GAC3BK,GAAO8E,WAAW,IAEjB9B,OAAOC,IAAS,IAAD8B,EAAAC,EAAAC,EAAAC,EACZhC,EAAAA,GAAMC,MAAS,OAAHF,QAAG,IAAHA,GAAiB,QAAd8B,EAAH9B,EAAKG,oBAAY,IAAA2B,GAAQ,QAARC,EAAjBD,EAAmB1B,cAAM,IAAA2B,GAAQ,QAARC,EAAzBD,EAA2B1B,cAAM,IAAA2B,GAAK,QAALC,EAAjCD,EAAoC,UAAE,IAAAC,OAAnC,EAAHA,EAAwC3B,SACpD5D,IAA2B,EAAM,GACnC,GACP,CAACK,GAAOkC,OAAO/B,eAEZgF,IAAWpQ,EAAAA,EAAAA,cAAY,CAAC2B,EAAY0H,KACtCR,IAAY,GACZM,GAAgB,CAAEC,KAAMzH,EAAI0H,SAAUA,GAAW,GAClD,IAEGgH,IAASrQ,EAAAA,EAAAA,cAAY,CAAC2B,EAAY0H,KACpChH,GAAS,IAADR,OAAKa,EAAAA,GAAOC,IAAG,KAAAd,OAAIa,EAAAA,GAAO4N,YAAW,WAAAzO,OAAUF,EAAE,cAAAE,OAAaoJ,GAAOkC,OAAO9B,aAAY,gBAAAxJ,OAAehD,GAAS,mCAAAgD,OAAkCwH,IAAakH,EAAAA,GAAUC,6BAA8B,GAChN,CAACvF,GAAOkC,OAAO9B,eAEZoF,IAASzQ,EAAAA,EAAAA,cAAY,CAAC2B,EAAY0H,KAAsB,IAADqH,EACzDrO,GAAS,IAADR,OAAKa,EAAAA,GAAOC,IAAG,KAAAd,OAAIa,EAAAA,GAAO4N,YAAW,WAAAzO,OAAUF,EAAE,+BAAAE,OAA8BhD,GAAS,cAAAgD,OAAmB,OAANoJ,SAAM,IAANA,IAAc,QAARyF,EAANzF,GAAQkC,cAAM,IAAAuD,OAAR,EAANA,EAAgBrF,aAAY,mCAAAxJ,OAAkCwH,IAAakH,EAAAA,GAAUC,6BAA8B,GACjO,CAACvF,GAAOkC,OAAO9B,eAEZsF,IAAU3Q,EAAAA,EAAAA,cAAY,KACxB6I,IAAY,EAAM,GACnB,KAEH0C,EAAAA,EAAAA,YAAU,KAAO,IAADqF,EAAAC,GACJ,OAAJjJ,SAAI,IAAJA,IAAkC,QAA9BgJ,EAAJhJ,GAAMmH,oCAA4B,IAAA6B,GAAM,QAANC,EAAlCD,EAAoChJ,YAAI,IAAAiJ,OAApC,EAAJA,EAA0C7B,OAAQ,GAClDzF,IAAc,EAClB,GACD,CAAK,OAAJ3B,SAAI,IAAJA,IAAkC,QAA9B7B,EAAJ6B,GAAMmH,oCAA4B,IAAAhJ,GAAM,QAANC,EAAlCD,EAAoC6B,YAAI,IAAA5B,OAApC,EAAJA,EAA0CgJ,QAE9C,MAAM8B,IAAW9Q,EAAAA,EAAAA,cAAY,KACzB0H,GAAmB,CACfO,UAAW,CACP8I,iBAA8B,OAAZ7H,SAAY,IAAZA,QAAY,EAAZA,GAAcE,KAChCiE,SAAU,CACN2D,UAAuB,OAAZ9H,SAAY,IAAZA,QAAY,EAAZA,GAAcG,aAGlCuE,MAAMC,IAAS,IAADoD,EAAAC,EACbhE,KACA5E,GAAoC,CAChCzJ,UAAWA,GACXC,SAAUmM,GAAOkC,OAAO9B,eACzBuC,MAAMC,IAAS,IAADsD,EAAAC,EACb7O,GAASyL,EAAAA,EAAAA,IAA8B,OAAHH,QAAG,IAAHA,GAAS,QAANsD,EAAHtD,EAAKjG,YAAI,IAAAuJ,GAAyB,QAAzBC,EAATD,EAAWlO,+BAAuB,IAAAmO,OAA/B,EAAHA,EAAoCxJ,MAAM,IAC/EqG,OAAOC,IACNC,EAAAA,GAAMC,MAAMF,EAAIG,aAAaC,OAAOC,OAAO,GAAGC,QAAQ,IAE1D,MAAM5G,EAAOiG,EAAIjG,KAAKiI,WACtB1B,EAAAA,GAAM2B,QAAY,OAAJlI,QAAI,IAAJA,OAAI,EAAJA,EAAM4G,SACpBzG,KACAc,IAAY,GAC4C,KAAhD,OAAJjB,QAAI,IAAJA,GAAkC,QAA9BqJ,EAAJrJ,EAAMmH,oCAA4B,IAAAkC,GAAM,QAANC,EAAlCD,EAAoCrJ,YAAI,IAAAsJ,OAApC,EAAJA,EAA0ClC,QAC1CzF,IAAc,EAClB,IAEC0E,OAAOC,IAAS,IAADmD,EAAAC,EAAAC,EAAAC,EACZrD,EAAAA,GAAMC,MAAS,OAAHF,QAAG,IAAHA,GAAiB,QAAdmD,EAAHnD,EAAKG,oBAAY,IAAAgD,GAAQ,QAARC,EAAjBD,EAAmB/C,cAAM,IAAAgD,GAAQ,QAARC,EAAzBD,EAA2B/C,cAAM,IAAAgD,GAAK,QAALC,EAAjCD,EAAoC,UAAE,IAAAC,OAAnC,EAAHA,EAAwChD,QAAQ,GAC9D,GACP,CAACtF,GAAkB,OAAJtB,SAAI,IAAJA,IAAkC,QAA9B3B,EAAJ2B,GAAMmH,oCAA4B,IAAA9I,GAAM,QAANC,EAAlCD,EAAoC2B,YAAI,IAAA1B,OAApC,EAAJA,EAA0C8I,QAKtDyC,IAAezR,EAAAA,EAAAA,cAAamC,IAC9BsL,GAAc,IAAKD,GAAYnG,OAAQlF,EAAEuP,OAAOjR,OAAQ,GACzD,IAEGkR,IAAgB3R,EAAAA,EAAAA,cAAY,KAC9B4R,EAAAA,EAAMtK,IAAI,GAADzF,OAAIgQ,EAAAA,GAAY,sDAAAhQ,OAAqDhD,GAAS,eAAAgD,OAAcoJ,GAAOkC,OAAO9B,cAAgB,CAAEyG,QAAS,CAAEC,cAAe9K,GAAK,UAAApF,OAAaoF,IAAU,IAAM+K,aAAc,SAC1MpE,MAAMqE,IAAc,IAADC,EAChB,MAAMC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACN,EAASrK,QACpD4K,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOR,EACZK,EAAKI,aAAa,WAAY,oBAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACL5E,EAAAA,GAAM2B,QAAgB,OAARmC,QAAQ,IAARA,GAAc,QAANC,EAARD,EAAUrK,YAAI,IAAAsK,OAAN,EAARA,EAAgB1D,QAAQ,IAEzCP,OAAOC,IACJC,EAAAA,GAAMC,MAAMF,EAAIM,QAAQ,GAC1B,GACP,CAACvD,GAAOkC,OAAO9B,eAEZ2H,IAAsBhT,EAAAA,EAAAA,cAAY,KACpCiT,EAAAA,EAAYC,QAAQ,GAADrR,OAAIgQ,EAAAA,GAAY,8BAC9BjE,MAAMqE,IAAc,IAADkB,EAChB,MAAMhB,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACN,EAASrK,QACpD4K,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOR,EACZK,EAAKI,aAAa,WAAY,qBAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACL5E,EAAAA,GAAM2B,QAAgB,OAARmC,QAAQ,IAARA,GAAc,QAANkB,EAARlB,EAAUrK,YAAI,IAAAuL,OAAN,EAARA,EAAgB3E,QAAQ,IAEzCP,OAAOC,IACJC,EAAAA,GAAMC,MAAMF,EAAIM,QAAQ,GAC1B,GACP,IAEGzP,IAAmBiB,EAAAA,EAAAA,cAAa4H,IAClCe,GAAWf,GACNc,IACDwE,IACJ,GACD,CAACtF,KAEE7H,IAAuBC,EAAAA,EAAAA,cAAYC,UACrC+K,IAAiB,GACjB,MAAM9K,EAAQC,EAAMC,cAAcF,YAC5BG,EAAAA,EAAAA,IAAmB,CACrBH,QACArB,aACAC,YACAC,iBAAkBmO,GAClB5M,wBACAC,0BAEAsG,GAAarG,UACbqG,GAAarG,QAAQC,MAAQ,GACjC,GACD,CAAC5B,GAAWoM,GAAOkC,OAAO9B,eAEvB5J,GAAWA,KACbnB,IAAqB,GACrB0K,IAAiB,EAAM,EAkBrB3B,GAAuD,QAA/ClD,EAAkB,OAAf6C,SAAe,IAAfA,IAA2B,QAAZ5C,EAAf4C,GAAiBoK,kBAAU,IAAAhN,GAAM,QAANC,EAA3BD,EAA6BwB,YAAI,IAAAvB,OAAlB,EAAfA,EAAmC2K,iBAAS,IAAA7K,EAAAA,EAAI,IAcjEoF,EAAAA,EAAAA,YAAU,KACN,GAAsB,OAAlB/B,SAAkB,IAAlBA,IAAAA,GAAoB6J,oBAAqB,CAAC,IAADC,EAAAC,EACzC,MAAMvH,EAAc,GACF,OAAlBxC,SAAkB,IAAlBA,IAAuC,QAArB8J,EAAlB9J,GAAoB6J,2BAAmB,IAAAC,GAAM,QAANC,EAAvCD,EAAyC1L,YAAI,IAAA2L,GAA7CA,EAA+C7G,KAAK9E,IAChDoE,EAAYa,KAAK,CAAE/K,KAAM8F,EAAKhE,SAAUkJ,IAAS,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,MAAO,IAE9DQ,GAAgBoC,EACpB,IACD,CAACxC,MAEJ+B,EAAAA,EAAAA,YAAU,KACN,IAAiB,OAAb/C,SAAa,IAAbA,QAAa,EAAbA,GAAejF,QAAS,IAAiB,OAAZoG,SAAY,IAAZA,QAAY,EAAZA,GAAcpG,QAAS,EAAG,CACvD,MAAMiQ,EAA2B,OAAZ7J,SAAY,IAAZA,QAAY,EAAZA,GAAcnF,QAAOiP,IAAUjL,GAAckL,MAAKC,GAASA,EAAM7G,MAAQ2G,EAAM3G,QACpG9C,GAAsBwJ,GACtB1J,GAAsC,KAAb,OAAZ0J,QAAY,IAAZA,OAAY,EAAZA,EAAcjQ,QAC/B,IACD,CAACiF,GAAemB,KAEnB,MAAMiK,IAAiB5T,EAAAA,EAAAA,cAAa4H,IAChCyC,IAAqB,GACrBE,GAAa3C,EAAK,GACnB,IAEGiM,IAAuB7T,EAAAA,EAAAA,cAAY,KACrCiK,GAAqB,CACjBhC,UAAW,CACP8I,iBAAkBzG,GAAUlB,QAG/BwE,MAAMC,IACH,MAAMjG,EAAOiG,EAAIjG,KACjBuG,EAAAA,GAAM2B,QAAQlI,EAAKkM,uBAAuBtF,SAC1CnE,IAAqB,GACrB6C,IAA+B,IAElCe,OAAOC,IAAS,IAAD6F,EAAAC,EAAAC,EACZ9F,EAAAA,GAAMC,MAAS,OAAHF,QAAG,IAAHA,GAAiB,QAAd6F,EAAH7F,EAAKG,oBAAY,IAAA0F,GAAQ,QAARC,EAAjBD,EAAmBzF,cAAM,IAAA0F,GAAW,QAAXC,EAAzBD,EAA2BzF,OAAO,UAAE,IAAA0F,OAAjC,EAAHA,EAAsCzF,QAAQ,GAC5D,GACP,CAACpE,KAEE8J,IAAoBlU,EAAAA,EAAAA,cAAY,KAClCqK,IAAqB,EAAM,GAC5B,IAEG8J,IAAWnU,EAAAA,EAAAA,cAAY,KACzBgL,IAAkBrK,IAAUA,GAAK,GAClC,CAACoK,KAEJ,OACInK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,KAACoT,EAAAA,EAAa,CAACC,kBA9DGA,KAAO,IAADC,EAC5B,OACItT,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,SACMuI,KAAakH,EAAAA,GAAUgE,mBAA0B,OAANzL,SAAM,IAANA,QAAM,EAANA,GAAQ0L,SACjD5T,EAAAA,EAAAA,MAAA,OAAKG,UAAS,yCAAAc,OAA2C6G,GAAU,sBAAwB,IAAK5H,SAAA,EAC5FE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,6CAA6CI,MAAOjC,GAAE,sBAAuBkC,QAASsN,MACxG1N,EAAAA,EAAAA,KAACyT,EAAAA,EAAQ,CAACC,YAAa,kBAAmB3T,UAAU,8BAA8BI,MAAM,GAAGwT,WAAW3T,EAAAA,EAAAA,KAAC4T,EAAAA,GAAG,CAACC,SAAS,OAAS/S,KAAK,eAAeI,SAAU+I,GAAOwG,aAAchR,MAAOwK,GAAOkC,OAAO9B,aAAc+C,MAAa,OAANnD,SAAM,IAANA,IAAc,QAARqJ,EAANrJ,GAAQsD,cAAM,IAAA+F,OAAR,EAANA,EAAgBjJ,aAAcyJ,QAAStM,GAAe7G,GAAG,qBAE5R,IAuDF+G,KAAW1H,EAAAA,EAAAA,KAAC+T,EAAAA,EAAM,KACnB/T,EAAAA,EAAAA,KAACgU,EAAiB,KACf1L,KAAeD,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQ0L,SAAW5T,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qCAAoCD,SAAA,EAC9LE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BD,UACzCE,EAAAA,EAAAA,KAACiU,EAAa,CAACpW,UAAWA,GAAWC,SAAUmM,GAAOkC,OAAO9B,kBAEjErK,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BD,UACzCE,EAAAA,EAAAA,KAACkU,EAAmB,CAACrW,UAAWA,GAAWC,SAAUmM,GAAOkC,OAAO9B,aAActM,iBAAkBA,WAG3G6B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gCAA+BD,SAAA,EAC1CE,EAAAA,EAAAA,KAACmU,EAAI,CAACrQ,gBAAgB,OAAOC,YAAY,kOACzC/D,EAAAA,EAAAA,KAAA,UAAQD,UAAU,+DAA+DG,KAAK,SAASE,QAASA,IAAM4R,KAAuB3R,MAAM,WAAUP,SAAC,2BAEzJwI,KAAc1I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2DAA0DD,SAAA,EACpFF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mDAAkDD,SAAA,EAC7DF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,wBAAuBD,SAAA,CAAyB,OAAvBmC,SAAuB,IAAvBA,QAAuB,EAAvBA,GAAyBU,aAAa,IAAEzE,GAAE,wBACjF0B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,4DAA2DD,SAAA,EACpEuI,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQ0L,SAAUxT,EAAAA,EAAAA,KAAA,UAAQD,UAAU,oEAAoEG,KAAK,SAASE,QAASA,KAvF3PmB,GAASE,EAAAA,EAAAA,IAA8B,SACvCJ,GAAS,IAADR,OAAKa,EAAAA,GAAOC,IAAG,KAAAd,OAAIa,EAAAA,GAAOE,iBAAgB,mBAAAf,OAAkBhD,GAAS,eAAAgD,OAAcoJ,GAAOkC,OAAO9B,aAAY,+BAsFyJvK,SAAC,aAE7PuI,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQ0L,SAAS5T,EAAAA,EAAAA,MAAA,UAAQG,UAAU,yCAAyCK,QAASA,IAAM+S,KAAWrT,SAAA,CAAC,2BAC5LE,EAAAA,EAAAA,KAACoU,EAAAA,GAAS,CAACrU,UAAU,wBAG5CH,EAAAA,EAAAA,MAAA,UAAQG,UAAU,yCAAyCK,QAASA,IAAMuQ,KAAgB7Q,SAAA,CAAC,2BAChEE,EAAAA,EAAAA,KAACoU,EAAAA,GAAS,CAACrU,UAAU,wBAGhDC,EAAAA,EAAAA,KAACqU,EAAAA,EAAS,CAACX,YAAaxV,GAAE,mBAAoB6B,UAAU,gBAAgBG,KAAK,OAAOS,GAAG,eAAelB,MAAO+M,GAAWnG,OAAQnF,SAAUuP,GAAckD,WAAW3T,EAAAA,EAAAA,KAACsU,EAAAA,GAAM,CAACT,SAAS,UAEpL7T,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UAChCE,EAAAA,EAAAA,KAACyT,EAAAA,EAAQ,CACL1T,UAAU,eACVI,MAAM,GACNwT,WAAW3T,EAAAA,EAAAA,KAACuU,EAAAA,GAAO,CAACxU,UAAU,YAC9Be,KAAK,gBACLI,SApHK/B,IAC7B,MAAMqV,EAAqBrV,EAAMuR,OAAOjR,OACjC2H,EAAWC,GAAamN,EAAmBC,MAAM,KACxDhI,GAAc,IACPD,GACHpF,YACAC,aACF,EA8GsB5H,MAAO+M,GAAWpF,UAAY,IAAMoF,GAAWnF,UAC/C+F,MAAM,GACN0G,QAASY,EAAAA,GACT/T,GAAG,2BAInBf,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCD,SAAA,EAC3CF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,SAAAF,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACY,OAAP0J,SAAO,IAAPA,QAAO,EAAPA,GAASkC,KAAI,CAACiJ,EAAoBjI,KAE3B1M,EAAAA,EAAAA,KAAA,MACI4U,MAAM,MACN7U,UAAS,qBAAAc,OAAuB8T,EAAO7T,MAAQ5C,GAAE,SAAW,qBAAuB,IAAK4B,UAGxFF,EAAAA,EAAAA,MAAA,OACIG,UAAU,oBAAmBD,SAAA,CAE5B6U,EAAO7T,KACP6T,EAAOlL,WACJ7J,EAAAA,EAAAA,MAAA,UAAQG,UAAU,iBAAiBK,QAASA,KAAMyU,OArVpEC,EAqVyFH,EAAOjL,eApV1H+C,GAAc,IACPD,GACHpF,UAAW0N,EACXzN,UAAoC,WAAzBmF,GAAWnF,UAAyB,UAAY,WAJrCyN,KAqV2G,EAAC5U,KAAK,SAAQJ,SAAA,EACxE,KAAzB0M,GAAWnF,WACTmF,GAAWpF,YAAcuN,EAAOjL,aAC5B1J,EAAAA,EAAAA,KAAC+U,EAAAA,GAAc,CAAChV,UAAU,eAER,WAAzByM,GAAWnF,WACRmF,GAAWpF,YAAcuN,EAAOjL,YAC5B1J,EAAAA,EAAAA,KAACgV,EAAAA,GAAc,CAACjV,UAAU,oBAER,YAAzByM,GAAWnF,WACRmF,GAAWpF,YAAcuN,EAAOjL,YAC5B1J,EAAAA,EAAAA,KAACiV,EAAAA,GAAgB,CAAClV,UAAU,2BAI1C,GAAAc,OAtBE6L,EAAQ,OA0B5B1M,EAAAA,EAAAA,KAAA,MAAI4U,MAAM,MAAK9U,UACXE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBD,SAC7B5B,GAAE,oBAKnB8B,EAAAA,EAAAA,KAAA,SAAAF,SACS,OAAJ8G,SAAI,IAAJA,IAAkC,QAA9BtB,EAAJsB,GAAMmH,oCAA4B,IAAAzI,GAAM,QAANC,EAAlCD,EAAoCsB,YAAI,IAAArB,GAAU,QAAVC,EAAxCD,EAA0C2P,gBAAQ,IAAA1P,OAA9C,EAAJA,EAAoDkG,KACjD,CAAC9E,EAA2J8F,KACxJ,MAAMyI,GAAyB,OAAV3I,SAAU,IAAVA,QAAU,EAAVA,GAAYE,OAAkBA,EAAQ,EAC3D,OACI9M,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAiB6U,MAAM,MAAK9U,SACrCqV,KAELnV,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAM,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAMwO,cACjCpV,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAM,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAMyO,aACjCrV,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAM,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAM0O,cACjCtV,EAAAA,EAAAA,KAAA,MAAID,UAAU,wBAAuBD,UACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMD,UACZ,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAMoJ,aAAcT,EAAAA,GAAUC,6BAC3BxP,EAAAA,EAAAA,KAAA,QAAMD,UAAU,0BAAyBD,SAAC,UAI1CE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,aAAYD,SAAC,mBAMzCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAM,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAMtE,SACjCtC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAM,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAM9D,gBACjC9C,EAAAA,EAAAA,KAAA,MAAID,UAAU,wBAAuBD,UACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMD,UACZ,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAM2O,UAAWC,EAAAA,GAAiBC,QAC/BzV,EAAAA,EAAAA,KAAA,QAAMD,UAAU,0BAAyBD,SAAC,YAI1CE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,aAAYD,SAAC,kBAMzCF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,uBAAsBD,SAAA,EAC9BuI,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQ4N,QAAS1V,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,uCAAuCK,QAASA,IAAMqP,GAAW,OAAJ7I,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KAAU,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMoJ,WAAY7P,MAAO,GAAIE,MAAM,GAAEP,UACzPE,EAAAA,EAAAA,KAAC2V,EAAAA,GAAG,CAAC5V,UAAU,oBAEjBsI,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQ8N,UAAW5V,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,kCAAkCK,QAASA,IAAMiP,GAAW,OAAJzI,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KAAU,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMoJ,WAAY7P,MAAO,GAAIE,MAAM,GAAEP,UACtPE,EAAAA,EAAAA,KAAC6V,EAAAA,GAAI,OAEPxN,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQgO,UAAW9V,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,iDAAiDK,QAASA,IAAMgP,GAAa,OAAJxI,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KAAU,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMoJ,WAAY7P,MAAO,GAAI4V,SAAuB,OAAbpP,SAAa,IAAbA,QAAa,EAAbA,GAAee,QAASrH,MAAM,GAAEP,UACzSE,EAAAA,EAAAA,KAACgW,EAAAA,GAAK,CAACjW,UAAU,kBAErBC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UAC9BuI,KAAakH,EAAAA,GAAUC,4BAA8BnH,KAAakH,EAAAA,GAAUC,4BAAoC,OAAN1H,SAAM,IAANA,QAAM,EAANA,GAAQ8N,UAAW5V,EAAAA,EAAAA,KAAA,QAC3HD,UAAU,4CAA2CD,UAErDF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,wDAAuDD,SAAA,EACpEE,EAAAA,EAAAA,KAAA,SACIE,KAAK,WACLH,UAAU,eACVN,MAAW,OAAJmH,QAAI,IAAJA,OAAI,EAAJA,EAAM2O,OACbrU,SAAUA,IAAM0R,GAAehM,GAC/BqP,SAAa,OAAJrP,QAAI,IAAJA,OAAI,EAAJA,EAAM2O,UAAWC,EAAAA,GAAiBC,UAE/CzV,EAAAA,EAAAA,KAAA,OACID,UACI,0WA3DnB6G,EAAKwB,KAkET,UAM6B,KAAhD,OAAJxB,SAAI,IAAJA,IAAkC,QAA9BnB,EAAJmB,GAAMmH,oCAA4B,IAAAtI,GAAM,QAANC,EAAlCD,EAAoCmB,YAAI,IAAAlB,OAApC,EAAJA,EAA0CsI,QACK,QAAzC,OAAJpH,SAAI,IAAJA,IAAkC,QAA9BjB,EAAJiB,GAAMmH,oCAA4B,IAAApI,OAA9B,EAAJA,EAAoCiB,SAChC5G,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UAChCE,EAAAA,EAAAA,KAAA,OAAAF,SAAM5B,GAAE,mBAIxB0B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCD,SAAA,EAC3CE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,sDAAqDD,SAChE5B,GAAE,eAEP8B,EAAAA,EAAAA,KAAA,UACID,UAAU,4HACVmB,SAAWC,GA9bFA,KAC7B0M,GAAkBqI,OAAO/U,IACzB,MAAMmN,EAAoB,IACnB9B,GACHtF,MAAOiP,SAAShV,GAChBgG,KAAM,EACNd,OAAQ,GACRqG,MAAO,GAEXD,GAAc6B,GACdC,EAAAA,EAAmBC,UACf,6BACAC,KAAKC,UAAUJ,GAClB,EAiboC8H,CAAwBjV,EAAEuP,OAAOjR,OAClDA,MAAO+M,GAAWtF,MAAMpH,SAEJ,OAAnBuW,EAAAA,SAAmB,IAAnBA,EAAAA,QAAmB,EAAnBA,EAAAA,GAAqB3K,KAAK9E,IAChB5G,EAAAA,EAAAA,KAAA,UAAAF,SAAoB8G,GAAPA,WAIhC5G,EAAAA,EAAAA,KAACsW,EAAAA,EAAU,CACPC,YAAa/J,GAAWrF,KACxB8G,WAAYA,GACZuI,aAAcpI,GACdR,eAAgBA,WAK3BjE,KACG3J,EAAAA,EAAAA,KAAA,OAAKW,GAAG,eAAeC,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQb,UAAS,yDAAAc,OAA2D8I,GAA0B,GAAK,UAAW7J,UAC1LE,EAAAA,EAAAA,KAAA,OAAKW,GAAG,wBAAwBC,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQb,UAAS,gDAAAc,OAAkDgJ,GAAW,GAAK,mDAAkD,iCAAgC/J,UAClPE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BD,UAEzCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,+BAA8BD,SAAA,EAEzCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yFAAwFD,SAAA,EACnGE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,8CAA6CD,SAAE,sBAC5DE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACG,QAASqN,GAAkBtN,MAAOjC,GAAE,IAAKmC,MAAK,GAAAQ,OAAK3C,GAAE,UAAW4B,UACpEE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,aAAYD,UAACE,EAAAA,EAAAA,KAACyW,EAAAA,GAAK,CAAC1W,UAAU,uBAIpD8I,KAAa7I,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAQD,UAClCF,EAAAA,EAAAA,MAAA,QAAM0K,SAAUL,GAAOyM,aAAa5W,SAAA,EAChCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,8CAA6CD,UACxDE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMD,UACjBE,EAAAA,EAAAA,KAACyT,EAAAA,EAAQ,CAACC,YAAaxV,GAAE,mBAAoB6B,UAAU,SAASI,MAAOjC,GAAE,YAAayV,WAAW3T,EAAAA,EAAAA,KAAA,QAAMD,UAAU,UAASD,UAACE,EAAAA,EAAAA,KAAC2W,EAAAA,GAAiB,CAAC5W,UAAU,qBAA4BmB,SAAU+I,GAAOwG,aAAchR,MAAOwK,GAAOkC,OAAO/B,aAAcgD,MAAa,OAANnD,SAAM,IAANA,IAAc,QAARrE,EAANqE,GAAQsD,cAAM,IAAA3H,OAAR,EAANA,EAAgBwE,aAAc0J,QAAS/K,GAAoBjI,KAAK,eAAeH,GAAG,eAAeiW,UAAU,SAGhX5W,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kHAAiHD,UAC5HE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,oEAAoEG,KAAK,SAASC,MAAOjC,GAAE,OAAQkC,QAASA,IAAMuO,KAAiBoH,SAAUvP,GAAckB,iBAIxLmB,KAAa7I,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,UACpCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,QAAOD,SAAC,6DAO9CE,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,CACdC,kBAAmBA,GACnBC,kBAAmBA,GACnBC,SAAUA,KAGbsJ,KACG/J,EAAAA,EAAAA,KAAA,OAAKW,GAAG,eAAeC,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQb,UAAS,yDAAAc,OAA2DkJ,GAAgB,GAAK,UAAWjK,UAChLE,EAAAA,EAAAA,KAAA,OAAKW,GAAG,wBAAwBC,UAAW,EAAG,mBAAiB,EAAM,cAAY,QAAQb,UAAS,gDAAAc,OAAkDkJ,GAAgB,GAAK,mDAAkD,kCAAiCjK,UACxPE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,+BAA8BD,UACzCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,6DAA4DD,SAAA,EAEvEE,EAAAA,EAAAA,KAAA,MAAID,UAAU,qDAAoDD,SAAE5B,GAAE,8DACtE0B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yDAAwDD,SAAA,EACnEF,EAAAA,EAAAA,MAAA,SAAOe,GAAG,YAAYZ,UAAU,oEAAmED,SAAA,CAAC,QAEhGE,EAAAA,EAAAA,KAAA,SACIW,GAAG,YACHT,KAAK,OACLY,KAAK,YACLC,UAAQ,EACRC,IAAK6E,GACL9F,UAAU,8BACVkB,OAAO,OACPC,SAAWC,GAAMpC,GAAqBoC,KACjCC,EAAAA,EAAAA,UAIbpB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACF,UAAU,6DAA6DI,MAAOjC,GAAE,UAAWkC,QAASK,GAAWJ,MAAK,GAAAQ,OAAK3C,GAAE,yBAO1J0J,KACG5H,EAAAA,EAAAA,KAAC6W,EAAAA,EAAW,CACRC,YAAaC,EAAAA,GACbpH,QAASA,GACTqH,OAAQA,IAAMlH,KACdmH,KAAMrP,KAIbwB,KACGpJ,EAAAA,EAAAA,KAAC6W,EAAAA,EAAW,CACRC,YAAaI,EAAAA,GACbvH,QAASuD,GACT8D,OAAQnE,GACRoE,KAAM7N,GACN2M,SAAuB,OAAb7M,SAAa,IAAbA,QAAa,EAAbA,GAAexB,QACzByP,UAAwB,OAAbjO,SAAa,IAAbA,QAAa,EAAbA,GAAexB,YAK9C,C","sources":["framework/graphql/mutations/createBranch.ts","framework/graphql/queries/getCompanyBranches.ts","components/tenantDetails/importEmployeesList.tsx","components/tenantDetails/tenantUserAdd.tsx","components/tenantDetails/tenantUserDetails.tsx","components/tooltip/tooltip.tsx","components/tooltip/info.tsx","views/tenantDetailsPage/index.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const CREATE_NEW_BRANCH = gql`\n  mutation CreateCompanyBranch($companyBranchData: CreateCompanyBranchDto!) {\n    createCompanyBranch(companyBranchData: $companyBranchData) {\n      message\n      data {\n        uuid\n      }\n    }\n  }\n`\n\nexport const DELETE_EMPLOYEE_USER = gql`\n  mutation DeleteSubscriberEmployeeUser($subscriberUserId: String!, $userData: DeleteUserDto) {\n    deleteSubscriberEmployeeUser(subscriberUserId: $subscriberUserId, userData: $userData) {\n      message\n    }\n  }\n`","import { gql } from '@apollo/client';\n\nexport const GET_COMPANY_BRANCHES = gql`\n  query GetCompanyBranches($sortOrder: String!, $sortField: String!, $limit: Float!, $page: Float!, $search: String!, $companyId: String!) {\n    getCompanyBranches(sortOrder: $sortOrder, sortField: $sortField, limit: $limit, page: $page, search: $search, companyId: $companyId) {\n      message\n      data {\n        count\n        branches {          \n          uuid\n          branch {\n            location\n            uuid\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_COMPANY_TENANT_DETAILS = gql`\n  query GetCompanyTenantDetails($companyId: String!, $branchId: String!) {\n    getCompanyTenantDetails(company_id: $companyId, branch_id: $branchId) {\n      message\n      data {\n        email\n        company_name\n        website\n        authorized_person\n        industry_type\n        type        \n        phone_number\n        country_code\n        location\n        total_employees\n      }\n    }\n  }\n`\n\nexport const GET_COMPANY_CONTRACTOR_DETAILS = gql`\nquery GetCompanyContractorDetails($branchId: String!, $companyId: String!) {\n  getCompanyContractorDetails(branch_id: $branchId, company_id: $companyId) {\n    message\n    data {\n      authorized_person\n      company_name\n      email\n      industry_type\n      location\n      total_employees\n      phone_number\n      country_code\n      type\n      website\n    }\n  }\n}\n`\n\nexport const GET_COMPANY_TENANT_EMPLOYEE_LIST = gql`\nquery GetCompanyTenantEmployeeList($userData: GetSubscriberDto!) {\n  getCompanyTenantEmployeeList(userData: $userData) {\n    data {\n      employee {\n        email\n        uuid\n        status\n        first_name\n        last_name\n        phone_number\n        country_code {\n          name\n          id\n          uuid\n          countryCode\n          phoneCode\n        }\n        department\n        user_type\n        company_id {\n          uuid\n          name\n          description\n          type\n          attachments          \n          website_url          \n          industryType {\n            name\n            uuid\n            description\n          }\n        }\n      }\n      count\n    }\n  }\n}\n`\nexport const GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST = gql`\nquery GetCompanyContractorsList($userData: GetSubscriberDto!) {\n  getCompanyContractorsList(userData: $userData) {\n    message\n    data {\n      employee {\n        email\n        uuid\n        status\n        first_name\n        last_name\n        phone_number\n        country_code {         \n          uuid\n          name\n          phoneCode\n        }        \n        department\n        user_type\n        company_id {\n          uuid\n          name\n          description\n          type\n          attachments\n          website_url          \n          industryType {\n            uuid\n            name            \n          }\n          tenantContractorType {\n            uuid\n            name            \n            type\n          }\n        }\n        user_roles {\n          uuid\n          role_id {\n            uuid\n            name\n            description\n            status\n          }\n        }\n      }\n      count\n    }\n  }\n}\n`\n\nexport const GET_USER_DETAILS_BY_ID = gql`\n  query GetUserById($userId: String!) {\n    getUserById(userId: $userId) {\n      message\n      data {\n        user {\n          country_code {\n            countryCode\n            name\n            phoneCode\n            uuid\n          }\n          position\n          email\n          educational_interests\n          first_name\n          last_name\n          user_type\n          is_required_reset_password\n          organization\n          phone_number\n          preferred_language\n          profile_picture\n          role_name\n          uuid\n          pronounce\n          reporting_manager_id {\n            uuid\n            profile_picture\n            last_name\n            first_name\n            location\n            organization\n          }\n          department\n          location\n        }\n        location\n        role_id {\n          name\n          status\n          uuid\n        }\n        role\n      }\n    }\n  }\n`","import React, { useCallback, useRef, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Button from '@components/button/button';\nimport { useTranslation } from 'react-i18next';\nimport {  importEmployeeList } from '@config/common';\nimport RejectedUserPopup from './rejectedUserPopup';\ninterface ImportEmployeesProps {\n    companyId: string | null,\n    branchId: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onImportCallBack: any\n}\n\ninterface RejectedUserType {\n    uuid: string,\n    first_name: string,\n    last_name: string,\n    email: string,\n    phone_number: string,\n    role: string,\n    reason: string\n}\n\nfunction ImportEmployeesList ({ companyId, branchId, onImportCallBack }: Readonly<ImportEmployeesProps>) {\n    \n    const fileEmployeeInputRef = useRef<HTMLInputElement | null>(null);\n    const { t } = useTranslation();\n    const [rejectedEmployeePopup, setRejectedEmployeePopup] = useState<boolean>(false);\n    const [isImportEmployeeFiles, setIsEmployeeImportFiles] = useState<boolean>(false);\n    const [rejectedEmployeeData, setRejectedEMployeeData] = useState<{ successCount: number; rejectCount: number; totalCount: number; rejectedUsers: RejectedUserType[] }>({ successCount: 0, rejectCount: 0, totalCount: 0, rejectedUsers: [] });\n    \n\n    const onImportEmployeeList = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setIsEmployeeImportFiles(false)\n        const files = event.currentTarget.files;\n        await importEmployeeList({\n            files,\n            companyId,\n            branchId,\n            onImportCallBack,\n            setRejectedUserPopup: setRejectedEmployeePopup,\n            setRejectedUsersData: setRejectedEMployeeData\n        }) \n        \n        if (fileEmployeeInputRef.current) {\n            fileEmployeeInputRef.current.value = '';\n        }\n    }, [companyId, branchId]);\n\n    const onEmployeeCancel = () => {\n        setIsEmployeeImportFiles(false)\n        setRejectedEmployeePopup(false);\n    }\n    const onEmployeeImport = useCallback(() => {\n        setIsEmployeeImportFiles((prev) => !prev)\n    }, [isImportEmployeeFiles])\n\n    return (\n        <>\n            <div className='bg-border-secondary px-5 py-5 md:py-[36px] lg:py-[50px] h-full rounded-xl border border-solid border-border-light-blue-shade flex flex-col items-center'>\n                <div className='mb-5 md:mb-[30px]'>\n                    <p className='font-bold text-center'>You can import your employees details by clicking import button.</p>\n                    <p className='font-bold text-center'>It supports CSV format.</p>\n                </div>\n                <Button className='btn btn-primary text-white whitespace-nowrap w-[220px]' type='button' label={'Import Employees List'} onClick={() => onEmployeeImport()} title='Import Employee List' />\n            </div>\n            <RejectedUserPopup \n                rejectedUserPopup={rejectedEmployeePopup}\n                rejectedUsersData={rejectedEmployeeData}\n                oncancel={onEmployeeCancel} \n            />\n            \n            {isImportEmployeeFiles && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isImportEmployeeFiles ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${isImportEmployeeFiles ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n                        <div className='w-full mx-5 sm:max-w-[640px]'>\n                            <div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n                                \n                                <h6 className='mb-6 font-bold leading-normal text-center md:mb-10'>{t('Before you upload the list, the roles should be created')}</h6>\n                                <div className='flex items-center justify-center space-x-5 md:flex-row'>\n                                    <label id='importCsv' className=\"btn btn-primary btn-normal w-full md:w-auto md:min-w-[160px] mb-0\">\n                                        Okay\n                                        <input\n                                            id='importCsv'\n                                            type=\"file\"\n                                            name='importCsv'\n                                            multiple\n                                            ref={fileEmployeeInputRef}\n                                            className='hidden focus:bg-transparent'\n                                            accept=\".csv\"\n                                            onChange={(e) => onImportEmployeeList(e)}\n                                            key={uuidv4()}\n                                        />\n                                    </label>\n                                    \n                                    <Button className='btn-secondary btn-normal w-full md:w-auto md:min-w-[160px]' label={t('Cancel')} onClick={oncancel} title={`${t('Cancel')}`}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default ImportEmployeesList\n","import { ROUTES } from '@config/constant'\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'\nimport { setCustomCreateNewAccountStep } from 'src/redux/courses-management-slice';\n\ninterface TenantUserProps {\n    companyId: string | null,\n    branchId: string | null,\n}\n\nfunction TenantUserAdd({ companyId, branchId }: Readonly<TenantUserProps>) {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const addNewBtn = () => {\n        dispatch(setCustomCreateNewAccountStep(1));\n        navigate(`/${ROUTES.app}/${ROUTES.createNewAccount}/?company_uuid=${companyId}&branch_id=${branchId}&tenant-details-page=true`);\n    }\n\n    return (\n        <div className='bg-border-secondary px-5 py-5 md:py-[36px] lg:py-[50px] h-full rounded-xl border border-solid border-border-light-blue-shade flex flex-col items-center'>\n            <div className='mb-5 md:mb-[30px]'>\n                <p className='font-bold text-center'>No employees has been added yet.</p>\n                <p className='font-bold text-center'>Please add employees by clicking Add new button.</p>\n            </div>\n            <button className=\"btn btn-primary text-white whitespace-nowrap w-[160px] \" type=\"button\" onClick={() => addNewBtn()}  \n            title='Add New'>Add New</button>\n        </div>\n    )\n}\n\nexport default TenantUserAdd\n","import { JoinedPhoneNumbersWithCode } from '@config/constant';\nimport React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { GetCompanyTenantDetails } from 'src/types/common';\n\nfunction TenantUserDetails() {\n    const { t } = useTranslation();\n    const { getCompanyTenantDetails } = useSelector((state: { tenantDetails: GetCompanyTenantDetails }) => state.tenantDetails);\n    const getEmailData = getCompanyTenantDetails?.email?.length > 0 && getCompanyTenantDetails?.email?.join(', ')\n    const authorizedPerson = getCompanyTenantDetails?.authorized_person?.length > 0 && getCompanyTenantDetails?.authorized_person?.join(', ')\n    \n    return (\n        <div className='p-3 border border-border-primary rounded-xl bg-light-blue md:p-'>\n            <h6 className='mb-3 leading-7 md:mb-5'>{getCompanyTenantDetails?.company_name}</h6>\n            <div className=\"flex flex-wrap justify-between gap-y-3 md:gap-y-5\">\n                {/* <p className='w-full md:w-[calc(50%-10px)]'>{t('Industry: ')}<span className='block font-bold lg:inline-block'>{getCompanyTenantDetails?.industry_type}</span></p> */}\n                <p className='w-full md:w-[calc(50%-10px)]'>{t('Type: ')}<span className='block font-bold lg:inline-block'>{getCompanyTenantDetails?.type == '1' ? 'Tenant' : 'Contractor'}</span></p>\n                <p className='w-full md:w-[calc(50%-10px)]'>{t('Location: ')}<span className='block font-bold lg:inline-block'>{getCompanyTenantDetails?.location}</span></p>\n                <p className='w-full md:w-[calc(50%-10px)]'>{t('Authorized Person: ')}<span className='block font-bold lg:inline-block'>{authorizedPerson}</span></p>\n                <p className='w-full md:w-[calc(50%-10px)]'>{t('Contact Information: ')}<span className='block font-bold lg:inline-block'> {JoinedPhoneNumbersWithCode(getCompanyTenantDetails?.phone_number, getCompanyTenantDetails?.country_code)}</span></p>\n                {getCompanyTenantDetails?.website && <p className='w-full md:w-[calc(50%-10px)]'>{t('Website: ')}<span className='block font-bold break-all lg:inline-block'>{getCompanyTenantDetails?.website}</span></p>}\n                <p className='w-full md:w-[calc(50%-10px)]'>{t('Employees: ')}<span className='block font-bold lg:inline-block'>{getCompanyTenantDetails?.total_employees}</span></p>\n                <p className='w-full md:w-[calc(50%-10px)]'>{t('Email ID: ')}<span className='block font-bold break-all lg:inline-block'>{getEmailData}</span></p>\n           \n            </div>\n        </div>\n    )\n}\n\nexport default TenantUserDetails\n\n","import React from 'react';\n\ninterface PropsToolTip {\n  align?: string,\n  tooltipText?: string,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst cls = (...classes: any) =>\n  classes.filter(Boolean).length > 0 ? classes.filter(Boolean).join(' ') : null;\n  \n\nexport function Tooltip(props: Readonly<PropsToolTip>) {\n  return (\n    <span\n      className={cls(\n        `${[\n          'text-white text-base bg-black invisible transition-opacity duration-500 ease-in-out opacity-0 group-hover:opacity-100 group-hover:visible absolute z-50 px-4 py-2 left-1/2 top-8 -translate-x-1/2 w-72 sm:w-[375px] after:content-[\\'\\'] after:absolute after:border-8 after:border-transparent after:border-b-black after:-top-4 after:left-2/4 after:-translate-x-1/2',\n        ]}`,\n        `${props?.align === 'right'\n          ? 'md:left-[calc(100%+1rem)] md:-translate-x-0 md:!top-2/4  md:after:!-left-4 md:-translate-y-1/2 md:after:!border-b-transparent md:after:!border-r-black md:after:!top-2/4  md:after:-translate-y-1/2 md:after:!translate-x-0'\n          : ''\n        }`,\n        `${props?.align === 'left'\n          ? 'md:right-[calc(100%+1rem)] md:-translate-x-0 md:top-2/4 md:-translate-y-1/2 md:left-auto md:after:!border-b-transparent md:after:!border-l-black md:after:!-right-4 md:after:left-auto md:after:!top-2/4 md:after:-translate-y-1/2 md:after:!translate-x-0'\n          : ''\n        }`,\n        `${props?.align === 'top'\n          ? 'md:top-auto md:bottom-[calc(100%+1rem)] md:after:!border-b-transparent md:after:!border-t-black md:after:!-bottom-4 md:after:top-auto'\n          : ''\n        }`,\n        `${props?.align === 'none'\n          ? 'hidden'\n          : ''\n        }`\n      )}\n    >\n      {props?.tooltipText}\n    </span>\n  );\n}\n","import React from 'react'\nimport { Tooltip } from './tooltip'\n\ninterface TooltipProps {\n  toolTipPosition?: string,\n  infoTipText?: string,\n  infoText?: string,\n  onClick?: React.MouseEventHandler<SVGSVGElement>,\n  onLabelClick?: React.MouseEventHandler<HTMLLabelElement>,\n  type?: string,\n}\n\nfunction Info({ toolTipPosition, infoTipText, infoText, onClick, onLabelClick, type }: Readonly<TooltipProps>) {\n\n  const svgErrorClass = (type === 'error' ? '#D1444B' : '#76767F')\n  const labelErrorClass = (type === 'error' ? 'text-themeRed font-bold' : 'text-textGrey')\n\n  return (\n    <div className='relative flex items-center mt-2 cursor-pointer group'>\n\n      {type === 'success'\n        ?\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={onClick}>\n          <path d=\"M10 20C4.477 20 0 15.523 0 10C0 4.477 4.477 0 10 0C15.523 0 20 4.477 20 10C20 15.523 15.523 20 10 20ZM10 18C12.1217 18 14.1566 17.1571 15.6569 15.6569C17.1571 14.1566 18 12.1217 18 10C18 7.87827 17.1571 5.84344 15.6569 4.34315C14.1566 2.84285 12.1217 2 10 2C7.87827 2 5.84344 2.84285 4.34315 4.34315C2.84285 5.84344 2 7.87827 2 10C2 12.1217 2.84285 14.1566 4.34315 15.6569C5.84344 17.1571 7.87827 18 10 18V18ZM9.003 14L4.76 9.757L6.174 8.343L9.003 11.172L14.659 5.515L16.074 6.929L9.003 14Z\" fill=\"#248565\" />\n        </svg>\n        :\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={onClick}>\n          <path d=\"M8 15.5C3.85775 15.5 0.5 12.1423 0.5 8C0.5 3.85775 3.85775 0.5 8 0.5C12.1423 0.5 15.5 3.85775 15.5 8C15.5 12.1423 12.1423 15.5 8 15.5ZM8 14C9.5913 14 11.1174 13.3679 12.2426 12.2426C13.3679 11.1174 14 9.5913 14 8C14 6.4087 13.3679 4.88258 12.2426 3.75736C11.1174 2.63214 9.5913 2 8 2C6.4087 2 4.88258 2.63214 3.75736 3.75736C2.63214 4.88258 2 6.4087 2 8C2 9.5913 2.63214 11.1174 3.75736 12.2426C4.88258 13.3679 6.4087 14 8 14ZM7.25 10.25H8.75V11.75H7.25V10.25ZM8.75 9.01625V9.5H7.25V8.375C7.25 8.17609 7.32902 7.98532 7.46967 7.84467C7.61032 7.70402 7.80109 7.625 8 7.625C8.21306 7.62499 8.42173 7.56447 8.60174 7.4505C8.78175 7.33652 8.9257 7.17377 9.01683 6.98119C9.10796 6.7886 9.14253 6.5741 9.11651 6.36263C9.0905 6.15117 9.00497 5.95144 8.86987 5.78668C8.73478 5.62193 8.55568 5.49892 8.35342 5.43198C8.15115 5.36503 7.93403 5.3569 7.72732 5.40853C7.52061 5.46016 7.33281 5.56942 7.18577 5.72361C7.03874 5.8778 6.93851 6.07057 6.89675 6.2795L5.42525 5.98475C5.51647 5.52881 5.72713 5.10528 6.03569 4.75744C6.34425 4.4096 6.73964 4.14994 7.18144 4.00499C7.62325 3.86004 8.09561 3.83501 8.55026 3.93246C9.00491 4.02991 9.42553 4.24634 9.76911 4.55962C10.1127 4.8729 10.3669 5.2718 10.5058 5.71555C10.6447 6.15929 10.6633 6.63196 10.5596 7.08523C10.456 7.5385 10.2338 7.95612 9.91589 8.2954C9.59794 8.63467 9.1956 8.88343 8.75 9.01625Z\" fill={`${type === 'success' ? '#248565' : svgErrorClass}`} />\n        </svg>\n      }\n\n      <Tooltip\n        align={toolTipPosition}\n        tooltipText={infoTipText}\n      />\n\n      <label\n        htmlFor=\"infoText\"\n        onClick={onLabelClick}\n        className={`text-xs ml-2.5 cursor-pointer ${type === 'success' ? 'text-themeGreen font-bold' : labelErrorClass}`}>\n        {infoText}\n      </label>\n\n    </div>\n  )\n}\n\nexport default Info;","import ImportEmployeesList from '@components/tenantDetails/importEmployeesList'\nimport TenantUserAdd from '@components/tenantDetails/tenantUserAdd'\nimport TenantUserDetails from '@components/tenantDetails/tenantUserDetails'\nimport { useMutation, useQuery } from '@apollo/client';\nimport Pagination from '@components/Pagination/Pagination';\nimport { ArrowSortingDown, ArrowSortingUp, Cross, DropdownArrowDown, Edit, Eye, Filter2, GetDefaultIcon, ImportDoc, Map, Search, Trash } from '@components/icons/icons';\nimport { API_BASE_URL, CHANGE_STATUS_WARNING_TEXT, ContractorStatus, DELETE_WARNING_TEXT, ROUTES, SHOW_PAGE_COUNT_ARR, TenantUserDetailsDrpData, USER_TYPE, updateBranchId } from '@config/constant';\nimport { StateDataArr } from '@framework/graphql/graphql';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { ColArrType } from 'src/types/role';\nimport filterServiceProps from '@components/filter/filter';\nimport Button from '@components/button/button';\nimport DropDown from '@components/dropdown/dropDown';\nimport TextInput from '@components/textInput/TextInput';\nimport { useFormik } from 'formik';\nimport { CREATE_NEW_BRANCH, DELETE_EMPLOYEE_USER } from '@framework/graphql/mutations/createBranch';\nimport { GET_COMPANY_BRANCHES, GET_COMPANY_TENANT_DETAILS, GET_COMPANY_TENANT_EMPLOYEE_LIST } from '@framework/graphql/queries/getCompanyBranches';\nimport { DropdownOptionType } from '@types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGetCompanyTenantDetails } from 'src/redux/tenant-management-slice';\nimport CommonModel from '@components/common/commonModel';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport DecryptionFunction from 'src/services/decryption';\nimport { setCustomCreateNewAccountStep } from 'src/redux/courses-management-slice';\nimport UpdatedHeader from '@components/header/updatedHeader';\nimport { UserProfileType, UserRoles } from 'src/types/common';\nimport { SUBSCRIBER_LOCATION } from '@framework/graphql/queries/createEmployeeLocation';\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'; // theme\nimport 'primereact/resources/primereact.css';\nimport Loader from '@components/common/loader';\nimport Info from '@components/tooltip/info';\nimport { CHANGE_EMPLOYEE_STATUS } from '@framework/graphql/mutations/contractorPage';\nimport { APIServices } from 'src/services/axiosCommon';\nimport { v4 as uuidv4 } from 'uuid';\nimport { importEmployeeList } from '@config/common';\nimport RejectedUserPopup from '@components/tenantDetails/rejectedUserPopup';\nexport type PaginationParams = {\n    limit: number\n    page: number\n    sortField: string\n    sortOrder: string\n    search: string\n    company_id: string | null\n    branch_id: string\n    index?: number\n}\n\ninterface RejectedUserType {\n    uuid: string,\n    first_name: string,\n    last_name: string,\n    email: string,\n    phone_number: string,\n    role: string,\n    reason: string\n}\ninterface TenantDetailsData {\n    getCompanyTenantDetails: {\n        address: string\n        authorized_person: string\n        company_name: string\n        email: string\n        industry_type: string\n        location: string\n        phone_number: string\n        total_employees: number\n        type: string\n        website: string\n    }\n}\n\n\nfunction TenantDetailsPage() {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const fileInputRef = useRef<HTMLInputElement | null>(null);\n    const encryptedToken = localStorage.getItem('authToken') as string;\n    const token = encryptedToken && DecryptionFunction(encryptedToken);\n    const queryParams = new URLSearchParams(location.search);\n    const companyId = queryParams.get('company_uuid');\n    const branchId = queryParams.get('branch_id');\n    const [createNewBranch, branchLoading] = useMutation(CREATE_NEW_BRANCH);\n    const [deleteEmployeeUser, deleteLoading] = useMutation(DELETE_EMPLOYEE_USER);\n    const { data: getCompanyBranchesData, refetch: refetchGetCompanyBranchesData } = useQuery(GET_COMPANY_BRANCHES, { variables: { limit: 10, page: 1, sortField: 'createdAt', sortOrder: 'descend', search: '', companyId: companyId } });\n    const { refetch: refetchFGetCompanyTenantDetailsData } = useQuery(GET_COMPANY_TENANT_DETAILS, { skip: true });\n    const [branchDrpData, setBranchDrpData] = useState<DropdownOptionType[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [isDelete, setIsDelete] = useState<boolean>(false);\n    const [rejectedUserPopup, setRejectedUserPopup] = useState<boolean>(false);\n    const { tenant } = useSelector(((state: { rolesManagement: { tenant: UserRoles } }) => state.rolesManagement));\n    const { userProfileData } = useSelector(((state: { userProfile: { userProfileData: UserProfileType } }) => state.userProfile));\n    const [rejectedUsersData, setRejectedUsersData] = useState<{ successCount: number; rejectCount: number; totalCount: number; rejectedUsers: RejectedUserType[] }>({ successCount: 0, rejectCount: 0, totalCount: 0, rejectedUsers: [] });\n    const [isDeleteData, setIsDeleteData] = useState<{ uuid: string, userType: string | number }>({ uuid: '', userType: '' });\n    const [toShowData, setToShowData] = useState<boolean>(false);\n    const { data: subscriberLocation, refetch: subscriberLocationRefetch } = useQuery(SUBSCRIBER_LOCATION, { variables: { companyId: '' } });\n    const [stateDrpData, setStateDrpData] = useState<DropdownOptionType[]>([]);\n    const [isDisable, setIsDisable] = useState<boolean>(false);\n    const [updateStateDrpData, setUpdateStateDrpData] = useState<DropdownOptionType[]>([]);\n    const [updateEmployeeStatus, statusLoading] = useMutation(CHANGE_EMPLOYEE_STATUS)\n    const [isStatusModelShow, setIsStatusModelShow] = useState<boolean>(false)\n    const [tenantObj, setTenantObj] = useState({} as { first_name: string, uuid: string, last_name: string, department: string, email: string, phone_number: string, user_type: number, status: number });\n\n    const COL_ARR = [\n        { name: t('Sr.No'), sortable: false },\n        { name: t('Employee First Name'), sortable: true, fieldName: 'first_name' },\n        { name: t('Employee Last Name'), sortable: true, fieldName: 'last_name' },\n        { name: t('Department'), sortable: true, fieldName: 'department' },\n        { name: t('User Type'), sortable: true, fieldName: 'user.user_type' },\n        { name: t('email'), sortable: true, fieldName: 'email' },\n        { name: t('Phone Number'), sortable: true, fieldName: 'phone_number' },\n        { name: t('Status'), sortable: true, fieldName: 'user.status' },\n    ] as ColArrType[];\n   \n    const [isAddNewBranchModelShow, setIsAddNewBranchModelShow] = useState<boolean>(false)\n    const [addClass, setAddClass] = useState<boolean>(false);\n    const [isImportFiles, setIsImportFiles] = useState<boolean>(false);\n    const { getCompanyTenantDetails } = useSelector((state: { tenantDetails: TenantDetailsData }) => state.tenantDetails);\n    const initialValues = {\n        locationName: '',\n        userLocation: '',\n    }\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: () => {\n            setIsAddNewBranchModelShow(false);\n            setAddClass(false);\n        }\n    });\n\n    useEffect(() => {\n        if (getCompanyBranchesData) {\n            refetchGetCompanyBranchesData();\n        }\n    }, [])\n\n    useEffect(() => {\n        if (subscriberLocation) {\n            subscriberLocationRefetch();\n        }\n    }, [])\n\n    useEffect(() => {\n        const tempDataArr = [] as DropdownOptionType[];\n        let userLocationData = '' as string;\n        if (branchId) {\n            userLocationData = branchId\n        } else if (getCompanyBranchesData?.getCompanyBranches?.data?.branches?.[0]?.branch?.uuid) {\n            userLocationData = getCompanyBranchesData?.getCompanyBranches?.data?.branches?.[0]?.branch?.uuid\n        }\n        getCompanyBranchesData?.getCompanyBranches?.data?.branches?.map((data: StateDataArr) => {\n            tempDataArr.push({ name: data?.branch?.location, key: data?.branch?.uuid });\n        });\n        setBranchDrpData(tempDataArr);\n        formik.setFieldValue('userLocation', userLocationData)\n    }, [getCompanyBranchesData, branchId])\n\n    const branchName = getCompanyBranchesData?.getCompanyBranches?.data?.branches.map((data: { branch: { uuid: string } }) => {\n        return (\n            data?.branch?.uuid\n        )\n    })\n\n    const { data, refetch: getCompanyEmployeeListRefetch } = useQuery(GET_COMPANY_TENANT_EMPLOYEE_LIST, {\n        skip: !formik.values.userLocation,\n        fetchPolicy: 'no-cache',\n        variables: {\n            userData: {\n                limit: 10,\n                page: 1,\n                sortField: 'createdAt',\n                sortOrder: 'descend',\n                search: '',\n                company_id: companyId,\n                branch_id: formik.values.userLocation\n            }\n        }\n    });\n\n    const [filterData, setFilterData] = useState<PaginationParams>({\n        limit: 10,\n        page: 1,\n        sortField: 'createdAt',\n        sortOrder: 'descend',\n        search: '',\n        company_id: companyId,\n        branch_id: branchName,\n        index: 0\n    });\n\n    useEffect(() => {\n        if (formik.values.userLocation) {\n            updateBranchId(formik.values.userLocation);\n            refetchFGetCompanyTenantDetailsData({\n                companyId: companyId,\n                branchId: formik.values.userLocation,\n            }).then((res) => {\n                dispatch(setGetCompanyTenantDetails(res?.data?.getCompanyTenantDetails?.data))\n            }).catch((err) => {\n                toast.error(err.networkError.result.errors[0].message);\n            })\n        }\n    }, [formik.values.userLocation])\n\n    const onCancelCategory = useCallback(() => {\n        setIsAddNewBranchModelShow(false);\n        formik.setFieldValue('locationName', '');\n        setAddClass(false);\n    }, [])\n\n    const handleClick = useCallback(() => {\n        setIsAddNewBranchModelShow(true);\n        setAddClass(true);\n    }, []);\n\n    /**\n     *\n     * @param sortFieldName Method used for storing sort data\n     */\n    const onHandleSortCategory = (sortFieldName: string) => {\n        setFilterData({\n            ...filterData,\n            sortField: sortFieldName,\n            sortOrder: filterData.sortOrder === 'ascend' ? 'descend' : 'ascend',\n        });\n    };\n    /**\n     *\n     * @param e Method used for change dropdown for page limit\n     */\n\n    const onPageDrpSelectCategory = (e: string) => {\n        setRecordsPerPage(Number(e));\n        const updatedFilterData = {\n            ...filterData,\n            limit: parseInt(e),\n            page: 1,\n            search: '',\n            index: 0,\n        };\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState(\n            'filterTenantUserManagement',\n            JSON.stringify(updatedFilterData)\n        );\n    };\n\n    useEffect(() => {\n        if (formik.values.userLocation) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { index, ...newObject } = filterData;\n            getCompanyEmployeeListRefetch({ userData: { ...newObject, branch_id: formik.values.userLocation } }).catch((err) => toast.error(err));\n        }\n    }, [filterData, formik.values.userLocation]);\n\n    const [recordsPerPage, setRecordsPerPage] = useState<number>(\n        filterData.limit\n    );\n    const totalUserManagement = data?.getCompanyTenantEmployeeList?.data?.count || 0;\n    const totalPages = Math.ceil(totalUserManagement / recordsPerPage);\n    const handlePageChange = useCallback((newPage: number): void => {\n        const updatedFilterData = {\n            ...filterData,\n            page: newPage,\n            index: (newPage - 1) * filterData.limit,\n        };\n        setFilterData(updatedFilterData);\n        filterServiceProps.saveState(\n            'filterTenantUserManagement',\n            JSON.stringify(updatedFilterData)\n        );\n    }, []);\n\n    useEffect(() => {\n        setRecordsPerPage(filterData.limit);\n    }, [filterData.limit]);\n\n    const onLocationAdd = useCallback(() => {\n        createNewBranch({\n            variables: {\n                companyBranchData: {\n                    // name: formik.values.locationName,\n                    company_id: companyId,\n                    branch_id: formik.values.locationName,\n                }\n            },\n        }).then((res) => {\n            const data = res.data.courseData\n            toast.success(data?.message);\n            refetchGetCompanyBranchesData();\n            setIsAddNewBranchModelShow(false);\n            formik.resetForm();\n        })\n            .catch((err) => {\n                toast.error(err?.networkError?.result?.errors?.[0]?.message);\n                setIsAddNewBranchModelShow(false);\n            });\n    }, [formik.values.locationName])\n\n    const onDelete = useCallback((id: string, userType: number) => {\n        setIsDelete(true);\n        setIsDeleteData({ uuid: id, userType: userType });\n    }, []);\n\n    const onEdit = useCallback((id: string, userType: number) => {\n        navigate(`/${ROUTES.app}/${ROUTES.userDetails}/?uuid=${id}&branchId=${formik.values.userLocation}&company_id=${companyId}&userCompanyType=1&Is_subAdmin=${userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN}`)\n    }, [formik.values.userLocation]);\n\n    const onView = useCallback((id: string, userType: number) => {\n        navigate(`/${ROUTES.app}/${ROUTES.userDetails}/?uuid=${id}&read_Data=true&company_id=${companyId}&branchId=${formik?.values?.userLocation}&userCompanyType=1&Is_subAdmin=${userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN}`)\n    }, [formik.values.userLocation]);\n\n    const onClose = useCallback(() => {\n        setIsDelete(false);\n    }, []);\n\n    useEffect(() => {\n        if (data?.getCompanyTenantEmployeeList?.data?.count > 0) {\n            setToShowData(true);\n        }\n    }, [data?.getCompanyTenantEmployeeList?.data?.count]);\n\n    const onRemove = useCallback(() => {\n        deleteEmployeeUser({\n            variables: {\n                subscriberUserId: isDeleteData?.uuid,\n                userData: {\n                    user_type: isDeleteData?.userType,\n                }\n            },\n        }).then((res) => {\n            getCompanyEmployeeListRefetch();\n            refetchFGetCompanyTenantDetailsData({\n                companyId: companyId,\n                branchId: formik.values.userLocation,\n            }).then((res) => {\n                dispatch(setGetCompanyTenantDetails(res?.data?.getCompanyTenantDetails?.data))\n            }).catch((err) => {\n                toast.error(err.networkError.result.errors[0].message);\n            })\n            const data = res.data.courseData\n            toast.success(data?.message);\n            refetchGetCompanyBranchesData();\n            setIsDelete(false);\n            if (data?.getCompanyTenantEmployeeList?.data?.count === 0) {\n                setToShowData(true);\n            }\n        })\n            .catch((err) => {\n                toast.error(err?.networkError?.result?.errors?.[0]?.message);\n            });\n    }, [isDeleteData, data?.getCompanyTenantEmployeeList?.data?.count]);\n\n    /***\n        * @param e Method used for store search value\n    */\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterData({ ...filterData, search: e.target.value })\n    }, [])\n\n    const onDownloadCsv = useCallback(() => {\n        axios.get(`${API_BASE_URL}users/export-company-tenant-users-csv/?company_id=${companyId}&branch_id=${formik.values.userLocation}`, { headers: { authorization: token ? `Bearer ${token}` : '' }, responseType: 'blob' })\n            .then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'Tenant-Users.csv');\n                document.body.appendChild(link);\n                link.click();\n                toast.success(response?.data?.message);\n            })\n            .catch((err) => {\n                toast.error(err.message);\n            });\n    }, [formik.values.userLocation]);\n\n    const onDownloadSampleCsv = useCallback(() => {\n        APIServices.getList(`${API_BASE_URL}media/download-csv/tenant`)\n            .then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'Tenant-Sample.csv');\n                document.body.appendChild(link);\n                link.click();\n                toast.success(response?.data?.message);\n            })\n            .catch((err) => {\n                toast.error(err.message);\n            });\n    }, []);\n\n    const onImportCallBack = useCallback((data: boolean) => {\n        setLoading(data)\n        if (!loading) {\n            getCompanyEmployeeListRefetch();\n        }\n    }, [data]);\n\n    const onImportEmployeeList = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setIsImportFiles(false);\n        const files = event.currentTarget.files;\n        await importEmployeeList({\n            files,\n            companyId,\n            branchId,\n            onImportCallBack: getCompanyEmployeeListRefetch,\n            setRejectedUserPopup,\n            setRejectedUsersData\n        });\n        if (fileInputRef.current) {\n            fileInputRef.current.value = '';\n        }\n    }, [companyId, formik.values.userLocation]);\n\n    const oncancel = () => {\n        setRejectedUserPopup(false);\n        setIsImportFiles(false);\n    }\n\n    const onFilterDrpHandleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const selectedSortOption = event.target.value;\n        const [sortField, sortOrder] = selectedSortOption.split(':');\n        setFilterData({\n            ...filterData,\n            sortField,\n            sortOrder,\n        });\n    }\n\n    const addNewUser = () => {\n        dispatch(setCustomCreateNewAccountStep(1));\n        navigate(`/${ROUTES.app}/${ROUTES.createNewAccount}/?company_uuid=${companyId}&branch_id=${formik.values.userLocation}&tenant-details-page=true`);\n    }\n\n    const userType = userProfileData?.getProfile?.data?.user_type ?? ''\n\n    const headerActionConst = () => {\n        return (\n            <>\n                {(userType === USER_TYPE.SUBSCRIBER_ADMIN && tenant?.write) &&\n                    <div className={`flex w-full gap-3 xmd:gap-5 lg:w-auto ${loading ? 'pointer-events-none' : ''}`}>\n                        <Button className='btn-normal btn-secondary whitespace-nowrap' label={t('+ Add new location')} onClick={handleClick} />\n                        <DropDown placeholder={'Select Location'} className='w-[212px] -mt-2 max-md:mr-2' label='' inputIcon={<Map fontSize='18' />} name='userLocation' onChange={formik.handleChange} value={formik.values.userLocation} error={formik?.errors?.userLocation} options={branchDrpData} id='userLocation' />\n                    </div>}\n            </>\n        )\n    }\n\n    useEffect(() => {\n        if (subscriberLocation?.subscriberLocations) {\n            const tempDataArr = [] as DropdownOptionType[];\n            subscriberLocation?.subscriberLocations?.data?.map((data: { location: string, uuid: string }) => {\n                tempDataArr.push({ name: data.location, key: data?.uuid });\n            });\n            setStateDrpData(tempDataArr);\n        }\n    }, [subscriberLocation]);\n\n    useEffect(() => {\n        if (branchDrpData?.length > 0 && stateDrpData?.length > 0) {\n            const updatedArray = stateDrpData?.filter(item1 => !branchDrpData.some(item2 => item2.key === item1.key));\n            setUpdateStateDrpData(updatedArray);\n            setIsDisable(updatedArray?.length === 0);\n        }\n    }, [branchDrpData, stateDrpData])\n\n    const onChangeStatus = useCallback((data: { first_name: string, uuid: string, last_name: string, department: string, email: string, phone_number: string, user_type: number, status: number }) => {\n        setIsStatusModelShow(true)\n        setTenantObj(data)\n    }, [])\n\n    const changeCategoryStatus = useCallback(() => {\n        updateEmployeeStatus({\n            variables: {\n                subscriberUserId: tenantObj.uuid,\n            },\n        })\n            .then((res) => {\n                const data = res.data\n                toast.success(data.activeInactiveEmployee.message)\n                setIsStatusModelShow(false)\n                getCompanyEmployeeListRefetch()\n            })\n            .catch((err) => {\n                toast.error(err?.networkError?.result?.errors[0]?.message)\n            })\n    }, [isStatusModelShow])\n\n    const onCloseSubscriber = useCallback(() => {\n        setIsStatusModelShow(false)\n    }, []);\n\n    const onImport = useCallback(() => {\n        setIsImportFiles((prev) => !prev)\n    }, [isImportFiles])\n   \n    return (\n        <>\n            <UpdatedHeader headerActionConst={headerActionConst} />\n            {loading && <Loader />}\n            <TenantUserDetails />\n            {(!toShowData && (userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.write)) && <div className=\"flex gap-5 md:gap-[30px] flex-wrap\">\n                <div className='w-full lg:w-[calc(50%-15px)]'>\n                    <TenantUserAdd companyId={companyId} branchId={formik.values.userLocation} />\n                </div>\n                <div className='w-full lg:w-[calc(50%-15px)]'>\n                    <ImportEmployeesList companyId={companyId} branchId={formik.values.userLocation} onImportCallBack={onImportCallBack} />\n                </div>\n            </div>}\n            <div className=\"flex justify-end pb-5 md:pb-7\">\n                <Info toolTipPosition=\"left\" infoTipText='i Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sit quaerat iste, neque alias natus praesentium cum magnam ut beatae suscipit et nemo, earum autem, eligendi temporibus deserunt aspernatur asperiores corporis.' />\n                <button className=\"btn bg-default btn-secondary btn-normal w-full md:w-[220px] \" type=\"button\" onClick={() => onDownloadSampleCsv()} title='Download'>Download Sample CSV</button>\n            </div>\n            {toShowData && <div className=\"p-5 border border-solid rounded-xl border-border-primary\">\n                <div className='flex flex-wrap items-center justify-between mb-5'>\n                    <h6 className='w-full mb-5 md:w-auto'>{getCompanyTenantDetails?.company_name} {t('Employee Details')}</h6>\n                    <div className=\"flex flex-wrap w-full gap-y-3 gap-x-4 2xl:gap-5 md:w-auto\">\n                        {(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.write) && <button className=\"btn btn-primary text-white whitespace-nowrap w-full sm:w-[160px] \" type=\"button\" onClick={() => addNewUser()}>Add New</button>}\n\n                        {(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.write) &&<button className=\"w-full btn btn-gray sm:w-[260px] p-3.5\" onClick={() => onImport()}>\n                        Import Employees List  <ImportDoc className='order-2 ml-auto' />\n                        </button>}\n\n                        <button className=\"w-full btn btn-gray sm:w-[260px] p-3.5\" onClick={() => onDownloadCsv()}>\n                            Export Employees List  <ImportDoc className='order-2 ml-auto' />\n                        </button>\n\n                        <TextInput placeholder={t('Search Employee')} className='max-sm:w-full' type='text' id='table-search' value={filterData.search} onChange={handleChange} inputIcon={<Search fontSize='18' />} />\n\n                        <div className='w-full sm:w-[150px]'>\n                            <DropDown\n                                className='w-full -mt-2'\n                                label=''\n                                inputIcon={<Filter2 className='order-2' />}\n                                name='filterDrpData'\n                                onChange={onFilterDrpHandleChange}\n                                value={filterData.sortField + ':' + filterData.sortOrder}\n                                error=\"\"\n                                options={TenantUserDetailsDrpData}\n                                id='filterDrpData' />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"overflow-auto custom-dataTable\">\n                    <table>\n                        <thead>\n                            <tr>\n                                {COL_ARR?.map((colVal: ColArrType, index: number) => {\n                                    return (\n                                        <th\n                                            scope=\"col\"\n                                            className={`whitespace-nowrap ${colVal.name == t('Sr.No') ? 'justify-start pl-7' : ''}`}\n                                            key={`${index + 1}`}\n                                        >\n                                            <div\n                                                className='flex items-center'\n                                            >\n                                                {colVal.name}\n                                                {colVal.sortable && (\n                                                    <button className='cursor-pointer' onClick={() => onHandleSortCategory(colVal.fieldName)} type=\"button\">\n                                                        {(filterData.sortOrder === '' ||\n                                                            filterData.sortField !== colVal.fieldName) && (\n                                                                <GetDefaultIcon className=\"fill-white\" />\n                                                            )}\n                                                        {filterData.sortOrder === 'ascend' &&\n                                                            filterData.sortField === colVal.fieldName && (\n                                                                <ArrowSortingUp className=\"ml-1 fill-white\" />\n                                                            )}\n                                                        {filterData.sortOrder === 'descend' &&\n                                                            filterData.sortField === colVal.fieldName && (\n                                                                <ArrowSortingDown className=\"ml-1 fill-white\" />\n                                                            )}\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </th>\n                                    );\n                                })}\n                                <th scope='col'>\n                                    <div className='flex items-center'>\n                                        {t('Action')}\n                                    </div>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data?.getCompanyTenantEmployeeList?.data?.employee?.map(\n                                (data: { first_name: string, uuid: string, last_name: string, department: string, email: string, phone_number: string, user_type: number, status: number }, index: number) => {\n                                    const displayIndex = filterData?.index as number + index + 1;\n                                    return (\n                                        <tr key={data.uuid}>\n                                            <td className=\"text-left pl-7\" scope=\"row\">\n                                                {displayIndex}\n                                            </td>\n                                            <td className=\"text-left\">{data?.first_name}</td>\n                                            <td className=\"text-left\">{data?.last_name}</td>\n                                            <td className=\"text-left\">{data?.department}</td>\n                                            <td className=\"text-left border-none\">\n                                                <div className='flex'>\n                                                    {data?.user_type !== USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? (\n                                                        <span className='text-bright-green-shade'>\n                                                            User\n                                                        </span>\n                                                    ) : (\n                                                        <span className='text-error'>\n                                                            Sub Admin\n                                                        </span>\n                                                    )}\n                                                </div>\n                                            </td>\n                                            <td className=\"text-left\">{data?.email}</td>\n                                            <td className=\"text-left\">{data?.phone_number}</td>\n                                            <td className='text-left border-none'>\n                                                <div className='flex'>\n                                                    {data?.status === ContractorStatus.ACTIVE ? (\n                                                        <span className='text-bright-green-shade'>\n                                                            Active\n                                                        </span>\n                                                    ) : (\n                                                        <span className='text-error'>\n                                                            Inactive\n                                                        </span>\n                                                    )}\n                                                </div>\n                                            </td>\n                                            <td className='flex gap-2 text-left'>\n                                                {(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.read) && <Button className='mx-1 mr-2 bg-transparent btn-default' onClick={() => onView(data?.uuid, data?.user_type)} label={''} title=''>\n                                                    <Eye className='text-success' />\n                                                </Button>}\n                                                {(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.update) && <Button className='mr-2 bg-transparent btn-default' onClick={() => onEdit(data?.uuid, data?.user_type)} label={''} title=''>\n                                                    <Edit />\n                                                </Button>}\n                                                {(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.delete) && <Button className='mr-2 bg-transparent cursor-pointer btn-default' onClick={() => onDelete(data?.uuid, data?.user_type)} label={''} disabled={deleteLoading?.loading} title=''>\n                                                    <Trash className='fill-error' />\n                                                </Button>}\n                                                <div className='flex justify-center'>\n                                                    {(userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN ? userType === USER_TYPE.SUBSCRIBER_TENANT_SUB_ADMIN : tenant?.update) && <span\n                                                        className='font-medium text-blue-600 hover:underline'\n                                                    >\n                                                        <label className='relative inline-flex items-center mb-0 cursor-pointer'>\n                                                            <input\n                                                                type='checkbox'\n                                                                className='sr-only peer'\n                                                                value={data?.status}\n                                                                onChange={() => onChangeStatus(data)}\n                                                                checked={data?.status === ContractorStatus.ACTIVE}\n                                                            />\n                                                            <div\n                                                                className={\n                                                                    'w-[30px] h-[14px] bg-secondary rounded-full peer peer-focus:ring-3 peer-focus:ring-red-200 peer-checked:after:translate-x-full peer-checked:after:border-white after:content- after:absolute after:top-[-1px] after:left-0 after:bg-white after:drop-shadow-outline-2 after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-primary'\n                                                                }\n                                                            ></div>\n                                                        </label>\n                                                    </span>}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    );\n                                }\n                            )}\n                        </tbody>\n                    </table>\n                    {(data?.getCompanyTenantEmployeeList?.data?.count === 0 ||\n                        data?.getCompanyTenantEmployeeList?.data === null) && (\n                            <div className=\"flex justify-center\">\n                                <div>{t('No Data')}</div>\n                            </div>\n                        )}\n                </div>\n                <div className=\"flex flex-wrap items-center mt-2\">\n                    <div className=\"flex items-center mr-3 md:mr-7\">\n                        <span className=\"text-sm font-normal text-gray-700 whitespace-nowrap\">\n                            {t('Per Page')}\n                        </span>\n                        <select\n                            className=\"border border-border-primary rounded-xl ml-2 px-3 text-sm py-1.5 text-gray-500 w-[70px] h-[36px] appearance-none bg-white\"\n                            onChange={(e) => onPageDrpSelectCategory(e.target.value)}\n                            value={filterData.limit}\n                        >\n                            {SHOW_PAGE_COUNT_ARR?.map((data: number) => {\n                                return <option key={data}>{data}</option>;\n                            })}\n                        </select>\n                    </div>\n                    <Pagination\n                        currentPage={filterData.page}\n                        totalPages={totalPages}\n                        onPageChange={handlePageChange}\n                        recordsPerPage={recordsPerPage}\n                    />\n                </div>\n            </div>}\n\n            {isAddNewBranchModelShow && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isAddNewBranchModelShow ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${addClass ? '' : 'opacity-0 transform -translate-y-full scale-150 '} transition-all duration-300 `}>\n                        <div className='w-full mx-5 sm:max-w-[400px]'>\n                            {/* <!-- Modal content --> */}\n                            <div className='relative bg-white rounded-xl'>\n                                {/* <!-- Modal header --> */}\n                                <div className='flex items-center justify-between px-5 py-4 border-b md:py-6 bg-accents-2 rounded-t-xl'>\n                                    <p className='text-lg font-bold md:text-xl text-baseColor'>{'Add New Location'}</p>\n                                    <Button onClick={onCancelCategory} label={t('')} title={`${t('Close')}`} >\n                                        <span className='text-xl-22'><Cross className='text-error' /></span>\n                                    </Button>\n                                </div>\n                                {/* <!-- Modal body --> */}\n                                {!isDisable && <div className='w-full'>\n                                    <form onSubmit={formik.handleSubmit}>\n                                        <div className='p-5 max-h-[calc(100vh-260px)] overflow-auto'>\n                                            <div className='mb-4'>\n                                                <DropDown placeholder={t('Select Location')} className='w-full' label={t('Location')} inputIcon={<span className='text-xs'><DropdownArrowDown className='fill-dark-grey' /></span>} onChange={formik.handleChange} value={formik.values.locationName} error={formik?.errors?.locationName} options={updateStateDrpData} name='locationName' id='locationName' required={true} />\n                                            </div>\n                                        </div>\n                                        <div className='flex flex-col items-center justify-end p-5 border-t border-solid md:space-x-3 md:flex-row border-border-primary'>\n                                            <Button className='btn-primary btn-normal mb-2 md:mb-0 w-full md:w-auto min-w-[90px]' type='button' label={t('Add')} onClick={() => onLocationAdd()} disabled={branchLoading.loading} />\n                                        </div>\n                                    </form>\n                                </div>}\n                                {isDisable && <div className='mx-5 py-5'>\n                                    <h6 className='error'>This user has been chosen for all locations.</h6>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}  \n            <RejectedUserPopup\n                rejectedUserPopup={rejectedUserPopup}\n                rejectedUsersData={rejectedUsersData}\n                oncancel={oncancel} \n            />\n          \n            {isImportFiles && (\n                <div id='defaultModal' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`fixed top-0 left-0 right-0 z-50 h-full bg-modal modal ${isImportFiles ? '' : 'hidden'}`}>\n                    <div id='changeUserStatusModel' tabIndex={-1} data-modal-show={true} aria-hidden='false' className={`py-5 flex items-center justify-center h-full ${isImportFiles ? '' : 'opacity-0 transform -translate-y-full scale-150 '}  transition-all duration-300 `}>\n                        <div className='w-full mx-5 sm:max-w-[640px]'>\n                            <div className='relative p-5 text-center bg-white shadow rounded-xl md:p-7'>\n                                \n                                <h6 className='mb-6 font-bold leading-normal text-center md:mb-10'>{t('Before you upload the list, the roles should be created')}</h6>\n                                <div className='flex items-center justify-center space-x-5 md:flex-row'>\n                                    <label id='importCsv' className=\"btn btn-primary btn-normal w-full md:w-auto md:min-w-[160px] mb-0\">\n                                        Okay\n                                        <input\n                                            id='importCsv'\n                                            type=\"file\"\n                                            name='importCsv'\n                                            multiple\n                                            ref={fileInputRef}\n                                            className='hidden focus:bg-transparent'\n                                            accept=\".csv\"\n                                            onChange={(e) => onImportEmployeeList(e)}\n                                            key={uuidv4()}\n                                        />\n                                    </label>\n                                    \n                                    <Button className='btn-secondary btn-normal w-full md:w-auto md:min-w-[160px]' label={t('Cancel')} onClick={oncancel}  title={`${t('Cancel')}`} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}  \n            {isDelete && (\n                <CommonModel\n                    warningText={DELETE_WARNING_TEXT}\n                    onClose={onClose}\n                    action={() => onRemove()}\n                    show={isDelete}\n                />\n            )}\n\n            {isStatusModelShow && (\n                <CommonModel\n                    warningText={CHANGE_STATUS_WARNING_TEXT}\n                    onClose={onCloseSubscriber}\n                    action={changeCategoryStatus}\n                    show={isStatusModelShow}\n                    disabled={statusLoading?.loading}\n                    isLoading={statusLoading?.loading}\n                />\n            )}\n        </>\n    )\n}\n\nexport default TenantDetailsPage\n"],"names":["CREATE_NEW_BRANCH","gql","_templateObject","_taggedTemplateLiteral","DELETE_EMPLOYEE_USER","_templateObject2","GET_COMPANY_BRANCHES","GET_COMPANY_TENANT_DETAILS","GET_COMPANY_CONTRACTOR_DETAILS","_templateObject3","GET_COMPANY_TENANT_EMPLOYEE_LIST","_templateObject4","GET_COMPANY_CONTRACTOR_EMPLOYEE_LIST","_templateObject5","GET_USER_DETAILS_BY_ID","_templateObject6","_ref","companyId","branchId","onImportCallBack","fileEmployeeInputRef","useRef","t","useTranslation","rejectedEmployeePopup","setRejectedEmployeePopup","useState","isImportEmployeeFiles","setIsEmployeeImportFiles","rejectedEmployeeData","setRejectedEMployeeData","successCount","rejectCount","totalCount","rejectedUsers","onImportEmployeeList","useCallback","async","files","event","currentTarget","importEmployeeList","setRejectedUserPopup","setRejectedUsersData","current","value","onEmployeeImport","prev","_jsxs","_Fragment","children","className","_jsx","Button","type","label","onClick","title","RejectedUserPopup","rejectedUserPopup","rejectedUsersData","oncancel","onEmployeeCancel","id","tabIndex","concat","name","multiple","ref","accept","onChange","e","uuidv4","navigate","useNavigate","dispatch","useDispatch","setCustomCreateNewAccountStep","ROUTES","app","createNewAccount","_getCompanyTenantDeta","_getCompanyTenantDeta2","_getCompanyTenantDeta3","_getCompanyTenantDeta4","getCompanyTenantDetails","useSelector","state","tenantDetails","getEmailData","email","length","join","authorizedPerson","authorized_person","company_name","location","JoinedPhoneNumbersWithCode","phone_number","country_code","website","total_employees","cls","_len","arguments","classes","Array","_key","filter","Boolean","Tooltip","props","align","tooltipText","toolTipPosition","infoTipText","infoText","onLabelClick","svgErrorClass","labelErrorClass","width","height","viewBox","fill","xmlns","d","htmlFor","_getCompanyBranchesDa14","_getCompanyBranchesDa15","_data$getCompanyTenan","_data$getCompanyTenan2","_data$getCompanyTenan5","_data$getCompanyTenan6","_data$getCompanyTenan9","_data$getCompanyTenan10","_userProfileData$getP","_userProfileData$getP2","_userProfileData$getP3","_data$getCompanyTenan11","_data$getCompanyTenan12","_data$getCompanyTenan13","_data$getCompanyTenan14","_data$getCompanyTenan15","_data$getCompanyTenan16","_formik$errors2","fileInputRef","encryptedToken","localStorage","getItem","token","DecryptionFunction","queryParams","URLSearchParams","search","get","createNewBranch","branchLoading","useMutation","deleteEmployeeUser","deleteLoading","data","getCompanyBranchesData","refetch","refetchGetCompanyBranchesData","useQuery","variables","limit","page","sortField","sortOrder","refetchFGetCompanyTenantDetailsData","skip","branchDrpData","setBranchDrpData","loading","setLoading","isDelete","setIsDelete","tenant","rolesManagement","userProfileData","userProfile","isDeleteData","setIsDeleteData","uuid","userType","toShowData","setToShowData","subscriberLocation","subscriberLocationRefetch","SUBSCRIBER_LOCATION","stateDrpData","setStateDrpData","isDisable","setIsDisable","updateStateDrpData","setUpdateStateDrpData","updateEmployeeStatus","statusLoading","CHANGE_EMPLOYEE_STATUS","isStatusModelShow","setIsStatusModelShow","tenantObj","setTenantObj","COL_ARR","sortable","fieldName","isAddNewBranchModelShow","setIsAddNewBranchModelShow","addClass","setAddClass","isImportFiles","setIsImportFiles","formik","useFormik","initialValues","locationName","userLocation","onSubmit","useEffect","_getCompanyBranchesDa","_getCompanyBranchesDa2","_getCompanyBranchesDa3","_getCompanyBranchesDa4","_getCompanyBranchesDa5","_getCompanyBranchesDa11","_getCompanyBranchesDa12","_getCompanyBranchesDa13","tempDataArr","userLocationData","getCompanyBranches","branches","branch","_getCompanyBranchesDa6","_getCompanyBranchesDa7","_getCompanyBranchesDa8","_getCompanyBranchesDa9","_getCompanyBranchesDa10","map","_data$branch","_data$branch2","push","key","setFieldValue","branchName","_data$branch3","getCompanyEmployeeListRefetch","values","fetchPolicy","userData","company_id","branch_id","filterData","setFilterData","index","updateBranchId","then","res","_res$data","_res$data$getCompanyT","setGetCompanyTenantDetails","catch","err","toast","error","networkError","result","errors","message","onCancelCategory","handleClick","newObject","recordsPerPage","setRecordsPerPage","totalUserManagement","getCompanyTenantEmployeeList","count","totalPages","Math","ceil","handlePageChange","newPage","updatedFilterData","filterServiceProps","saveState","JSON","stringify","onLocationAdd","companyBranchData","courseData","success","resetForm","_err$networkError","_err$networkError$res","_err$networkError$res2","_err$networkError$res3","onDelete","onEdit","userDetails","USER_TYPE","SUBSCRIBER_TENANT_SUB_ADMIN","onView","_formik$values","onClose","_data$getCompanyTenan3","_data$getCompanyTenan4","onRemove","subscriberUserId","user_type","_data$getCompanyTenan7","_data$getCompanyTenan8","_res$data2","_res$data2$getCompany","_err$networkError2","_err$networkError2$re","_err$networkError2$re2","_err$networkError2$re3","handleChange","target","onDownloadCsv","axios","API_BASE_URL","headers","authorization","responseType","response","_response$data","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","onDownloadSampleCsv","APIServices","getList","_response$data2","getProfile","subscriberLocations","_subscriberLocation$s","_subscriberLocation$s2","updatedArray","item1","some","item2","onChangeStatus","changeCategoryStatus","activeInactiveEmployee","_err$networkError3","_err$networkError3$re","_err$networkError3$re2","onCloseSubscriber","onImport","UpdatedHeader","headerActionConst","_formik$errors","SUBSCRIBER_ADMIN","write","DropDown","placeholder","inputIcon","Map","fontSize","options","Loader","TenantUserDetails","TenantUserAdd","ImportEmployeesList","Info","ImportDoc","TextInput","Search","Filter2","selectedSortOption","split","TenantUserDetailsDrpData","colVal","scope","onHandleSortCategory","sortFieldName","GetDefaultIcon","ArrowSortingUp","ArrowSortingDown","employee","displayIndex","first_name","last_name","department","status","ContractorStatus","ACTIVE","read","Eye","update","Edit","delete","disabled","Trash","checked","Number","parseInt","onPageDrpSelectCategory","SHOW_PAGE_COUNT_ARR","Pagination","currentPage","onPageChange","Cross","handleSubmit","DropdownArrowDown","required","CommonModel","warningText","DELETE_WARNING_TEXT","action","show","CHANGE_STATUS_WARNING_TEXT","isLoading"],"sourceRoot":""}