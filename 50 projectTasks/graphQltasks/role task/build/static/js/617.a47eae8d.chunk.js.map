{"version":3,"file":"static/js/617.a47eae8d.chunk.js","mappings":"6NAEaA,GAAaC,E,QAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sO,+ECkH7B,EAvGc,WACZ,IAAQC,GAAMC,EAAAA,EAAAA,MAAND,EACRE,GAAgBC,EAAAA,EAAAA,GAAYP,GAArBQ,GAAgCC,EAAAA,EAAAA,GAAAH,EAAA,GAA3B,GACNI,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAMV,EAAE,kBACRW,SAASX,EAAE,uBACdY,SAAUH,EAAAA,KAAaE,SAASX,EAAE,4BAG9Ba,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAbgC,CAChCL,MAAO,GACPE,SAAU,IAYVJ,iBAAAA,EACAQ,SAAU,SAACC,GACTb,EAAM,CACJc,UAAWD,IAEVE,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAIC,KACjBC,aAAaC,QAAQ,YAAaF,EAAKG,UAAUH,KAAKI,OACtDnB,EAAS,IAADoB,OAAKC,EAAAA,GAAOC,IAAG,KAAAF,OAAIC,EAAAA,GAAOE,WACpC,IACCC,OAAM,WACLC,EAAAA,GAAMC,MAAMhC,EAAE,mBAChB,GACJ,IAGF,OACEiC,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACbF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iCAAgCD,UAC7CF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,yCAAwCD,UACrDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gDAA+CD,UAC5DE,EAAAA,EAAAA,MAAA,QACED,UAAU,iDACVpB,SAAUH,EAAOyB,aAAaH,SAAA,EAE9BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4DAA2DD,SACtEnC,EAAE,YAELiC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qBAAoBD,SAC/BnC,EAAE,8BAELiC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CACRC,YAAaxC,EAAE,SACfyC,KAAK,QACLC,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOI,OAAOP,MACrBsB,MAAOnB,EAAOgC,OAAOnC,WAGzBuB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CACRC,YAAY,QACZC,KAAK,WACLK,KAAK,WACLJ,SAAU7B,EAAO8B,aACjBC,MAAO/B,EAAOI,OAAOL,SACrBoB,MAAOnB,EAAOgC,OAAOjC,cAGzByB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yCAAwCD,SAAA,EACrDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yBAAwBD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SACEc,GAAG,mBACHD,KAAK,WACLF,MAAM,GACNR,UAAU,yLAIZH,EAAAA,EAAAA,KAAA,SACEe,QAAQ,mBACRZ,UAAU,4DAA2DD,SAEpEnC,EAAE,qBAGPiC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAE,IAAAxB,OAAMC,EAAAA,GAAOwB,gBAAiBhB,UACpCE,EAAAA,EAAAA,MAAA,KACED,UAAU,mFACoCD,SAAA,CAE7CnC,EAAE,oBAAoB,aAI7BiC,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAAQX,SAAC,sBAOpC,C","sources":["framework/graphql/mutations/user.ts","views/login/index.tsx"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation loginUser($email: String, $password: String) {\n    loginUser(email: $email, password: $password) {\n      data {\n        token\n        user {\n          email\n          id\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport TextInput from \"@components/input/TextInput\";\nimport { LoginResponse } from \"@framework/graphql/graphql\";\nimport { LOGIN_USER } from \"@framework/graphql/mutations/user\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ROUTES } from \"@config/constant\";\nimport { LoginInput } from \"src/types/views\";\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const [login] = useMutation(LOGIN_USER);\n  const navigate = useNavigate();\n\n  const initialValues: LoginInput = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(t(\"Invalid email\") as string)\n      .required(t(\"Please enter email\") as string),\n    password: Yup.string().required(t(\"Please enter password\") as string),\n  });\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: (values) => {\n      login({\n        variables: values,\n      })\n        .then((res) => {\n          const data = res.data as LoginResponse;\n          localStorage.setItem(\"authToken\", data.loginUser.data.token);\n          navigate(`/${ROUTES.app}/${ROUTES.dashboard}`);\n        })\n        .catch(() => {\n          toast.error(t(\"Failed to login\"));\n        });\n    },\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white py-6 sm:py-8 lg:py-12\">\n        <div className=\"max-w-screen-2xl px-4 md:px-8 mx-auto \">\n          <div className=\"w-full flex items-center justify-center mt-20\">\n            <form\n              className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n              onSubmit={formik.handleSubmit}\n            >\n              <h2 className=\"text-gray-800 text-2xl lg:text-3xl font-bold mb-4 md:mb-6\">\n                {t(\"Login\")}\n              </h2>\n              <h4 className=\"text-gray-600 mb-4\">\n                {t(\"Sign In to your account\")}\n              </h4>\n              <div className=\"mb-4\">\n                <TextInput\n                  placeholder={t(\"Email\")}\n                  name=\"email\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  error={formik.errors.email}\n                />\n              </div>\n              <div className=\"mb-6\">\n                <TextInput\n                  placeholder=\"*****\"\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  error={formik.errors.password}\n                />\n              </div>\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center mr-2\">\n                  <input\n                    id=\"default-checkbox\"\n                    type=\"checkbox\"\n                    value=\"\"\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded\n                                 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800\n                                  focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                  />\n                  <label\n                    htmlFor=\"default-checkbox\"\n                    className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n                  >\n                    {t(\"Remember me\")}\n                  </label>\n                </div>\n                <Link to={`/${ROUTES.forgotPassword}`}>\n                  <p\n                    className=\"inline-block align-baseline font-bold text-sm \n                                text-blue-500 hover:text-blue-800\"\n                  >\n                    {t(\" Forgot Password\")}?\n                  </p>\n                </Link>\n              </div>\n              <button type=\"submit\">Sign In</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Login;\n"],"names":["LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","t","useTranslation","_useMutation","useMutation","login","_slicedToArray","navigate","useNavigate","validationSchema","Yup","email","required","password","formik","useFormik","initialValues","onSubmit","values","variables","then","res","data","localStorage","setItem","loginUser","token","concat","ROUTES","app","dashboard","catch","toast","error","_jsx","React","children","className","_jsxs","handleSubmit","TextInput","placeholder","name","onChange","handleChange","value","errors","type","id","htmlFor","Link","to","forgotPassword"],"sourceRoot":""}